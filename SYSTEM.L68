00001782 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 18/12/2024 18:39:22

00000000                             1  *-----------------------------------------------------------------------------
00000000                             2  * SISTEMA
00000000                             3  *-----------------------------------------------------------------------------
00000000                             4   
00000000                             5   
00000000                             6  SYSINIT
00000000                             7  ; INICIA EL  SISTEMA
00000000                             8  ; INPUT    : NONE
00000000                             9  ; OUTPUT   : NONE
00000000                            10  ; MODIFIES : NONE
00000000                            11  ; ----------------------------------------------------------------------------
00000000  4EB9 00000016             12              JSR     SCRINIT
00000006                            13              
00000006  21FC 00000044 0080        14              MOVE.L  #SCRPLOT,($80)
0000000E                            15              
0000000E  40E7                      16              MOVE.W  SR,-(A7)
00000010  0257 DFFF                 17              ANDI.W  #$DFFF,(A7)
00000014  4E73                      18              RTE
00000016                            19              
00000016                            20  ; ------------------------------------------------------------------------------
00000016                            21  SCRINIT
00000016                            22  ; INIT SCREEN. SET SCREEN RESOLUTION, SET WINDOWED MODE, CLEAR SCREEN,
00000016                            23  ; ENABLE DOUBLE BUFFER.
00000016                            24  ; INPUT    : NONE
00000016                            25  ; OUTPUT   : NONE
00000016                            26  ; MODIFIES : NONE
00000016                            27  ; ------------------------------------------------------------------------------
00000016                            28  
00000016  48E7 C000                 29              MOVEM.L D0-D1,-(A7)
0000001A                            30  
0000001A                            31              ; SET SCREEN RESOLUTION
0000001A  103C 0021                 32              MOVE.B  #33,D0
Line 33 ERROR: Invalid syntax
0000001E                            33              MOVE.L  #PANWIDTH<<16|PANHEIGH,D1
0000001E  4E4F                      34              TRAP    #15
00000020                            35              
00000020                            36              ; SET WINDOWED MODE
00000020  7201                      37              MOVE.L  #1,D1
00000022  4E4F                      38              TRAP    #15
00000024                            39              
00000024                            40              ; CLEAR SCREEN
00000024  103C 000B                 41              MOVE.B  #11,D0
00000028  323C FF00                 42              MOVE.W  #$FF00,D1
0000002C  4E4F                      43              TRAP    #15
0000002E                            44              
0000002E                            45              ; ENABLE DOUBLE BUFFER
0000002E  103C 005C                 46              MOVE.B  #92,D0
00000032  123C 0011                 47              MOVE.B  #17,D1
00000036  4E4F                      48              TRAP    #15
00000038                            49              
00000038  4CDF 0003                 50              MOVEM.L (A7)+,D0-D1
0000003C                            51              
0000003C  4E75                      52              RTS    
0000003E                            53  
0000003E                            54  ; ------------------------------------------------------------------------------
Line 55 ERROR: Symbol value differs between first and second pass
0000003E                            55  SCRPLOT
0000003E                            56  ; UPDATES DOUBLE BUFFER
0000003E                            57  ; INPUT    : NONE
0000003E                            58  ; OUTPUT   : NONE
0000003E                            59  ; MODIFIES : NONE
0000003E                            60  ; ------------------------------------------------------------------------------
0000003E                            61  
0000003E  48A7 C000                 62              MOVEM.W D0-D1,-(A7)
00000042                            63              
00000042                            64              ; SWITCH BUFFERS
00000042  103C 005E                 65              MOVE.B  #94,D0
00000046  4E4F                      66              TRAP    #15
00000048                            67              
00000048                            68              ; CLEAR HIDDEN BUFFER
00000048  103C 000B                 69              MOVE.B  #11,D0
0000004C  323C FF00                 70              MOVE.W  #$FF00,D1
00000050  4E4F                      71              TRAP    #15
00000052                            72              
00000052  4C9F 0003                 73              MOVEM.W (A7)+,D0-D1
00000056                            74              
00000056  4E73                      75              RTE
00000058                            76          
00000058                            77  
00000058                            78   
00000058                            79  *;-----------------------------------------------------------------------------
00000058                            80  *MTZINIT
00000058                            81  *; INICIALIZA LA MATRIZ, AL PRINCIPIO ESTÁ VACÍA
00000058                            82  *; INPUT    : NONE
00000058                            83  *; OUTPUT   : NONE
00000058                            84  *; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00000058                            85  *; ----------------------------------------------------------------------------
00000058                            86  *            
00000058                            87  *            MOVEM.W D0/A0,-(A7)
00000058                            88  *            
00000058                            89  *            LEA ESTDCLDS, A0       ; Apunta al inicio de ESTDCLDS
00000058                            90  *            MOVE.W #TCELDAS, D0    ; Número total de celdas
00000058                            91  *
00000058                            92  *CLNCLDS:
00000058                            93  *            CLR.B (A0)+            ; Coloca 0 en cada celda
00000058                            94  *            SUBI.W #1, D0          ; Decrementa el contador de celdas
00000058                            95  *            BNE CLNCLDS            ; Repite hasta que esten vacías
00000058                            96  *            
00000058                            97  *            MOVEM.W (A7)+,D0/A0
00000058                            98  *
00000058                            99  *            RTS
00000058                           100  *
00000058                           101  *;-----------------------------------------------------------------------------
00000058                           102  *CINDMTRZ
00000058                           103  *; CALCULA EL ÍNDICE DE UNA CELDA
00000058                           104  *; INPUT    : D1 = coordenada X pantalla, D2 = coordenada Y pantalla
00000058                           105  *; OUTPUT   : D0 = índice de la celda en ESTDCLDS
00000058                           106  *; MODIFIES : NONE
00000058                           107  *; ----------------------------------------------------------------------------
00000058                           108  *
00000058                           109  *            MOVEM.W D0-D3,-(A7)
00000058                           110  *
00000058                           111  *            ; Divide X por TCELDAS
00000058                           112  *            LSR.W #8, D1           ; D1 = X / 256
00000058                           113  *            LSR.W #2, D1           ; D1 = X / 1024 (256 * 4)
00000058                           114  *            MOVE.W D1, D3           ; Copia D1 a D3 para dividir por 3
00000058                           115  *DIV3X:      SUBQ.W #3, D3           ; Resta 3
00000058                           116  *            ADDQ.W #1, D1           ; Cuenta cuántas veces restamos
00000058                           117  *            BPL DIV3X              ; Repite mientras sea positivo
00000058                           118  *
00000058                           119  *            ; Divide Y por TCELDAS
00000058                           120  *            LSR.W #8, D2           ; D2 = Y / 256
00000058                           121  *            LSR.W #2, D2           ; D2 = Y / 1024
00000058                           122  *            MOVE.W D2, D3           ; Copiamos D2 a D3 para dividir por 3
00000058                           123  *DIV3Y:      SUBQ.W #3, D3           ; Restamos 3
00000058                           124  *            ADDQ.W #1, D2           ; Contamos cuántas veces restamos
00000058                           125  *            BPL DIV3Y              ; Repetimos mientras sea positivo
00000058                           126  *
00000058                           127  *            ; Calcula índice
00000058                           128  *            MOVE.W D2, D0           ; D0 = Y_CELDA
00000058                           129  *            ASL.W #6, D0            ; D0 = Y_CELDA * NUMCLMNS (64 = 2^6)
00000058                           130  *            ADD.W D1, D0            ; D0 = Y_CELDA * NUMCLMNS + X_CELDA
00000058                           131  *
00000058                           132  *            MOVEM.W (A7)+,D0-D3
00000058                           133  *
00000058                           134  *
00000058                           135  *            RTS
00000058                           136  *            
00000058                           137  *;------------------------------------------------------------------------------            
00000058                           138  *MCLDOCPD
00000058                           139  *; MARCA UNA CELDA COMO OCUPADA
00000058                           140  *; INPUT    : D0 = índice de la celda en ESTDCLDS
00000058                           141  *; OUTPUT   : NONE
00000058                           142  *; MODIFIES : Estado de la celda en la variable ESTDCLDS
00000058                           143  *; -----------------------------------------------------------------------------
00000058                           144  *
00000058                           145  *            LEA ESTDCLDS, A0                ; Carga la dirección de la matriz en A0
00000058                           146  *            MOVE.B #1, (A0, D0.W)           ; Marca la celda correspondientes como vacía
00000058                           147  *            
00000058                           148  *            RTS
00000058                           149  *            
00000058                           150  *;------------------------------------------------------------------------------            
00000058                           151  *MCLDVCIA
00000058                           152  *; MARCA UNA CELDA COMO VACÍA
00000058                           153  *; INPUT    : D0 = índice de la celda en ESTDCLDS
00000058                           154  *; OUTPUT   : NONE
00000058                           155  *; MODIFIES : Estado de la celda en la variable ESTDCLDS
00000058                           156  *; ----------------------------------------------------------------------------
00000058                           157  *
00000058                           158  *            LEA ESTDCLDS, A0                ; Carga la direccion de la matriz en A0
00000058                           159  *            MOVE.B #0, (A0, D0.W)           ; Marca la celda como vacía
00000058                           160  *            
00000058                           161  *            RTS
00000058                           162  *
00000058                           163  *
00000058                           164  *
00000058                           165  
00000058                           166  
00000058                           167  
00000058                           168  
00000058                           169  
00000058                           170  
00000058                           171  
00000058                           172  
00000058                           173  
Line 174 WARNING: END directive missing, starting address not set

2 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
SCRINIT             16
SCRPLOT             44
SYSINIT             0
