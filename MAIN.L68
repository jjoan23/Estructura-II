0000233A Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 02/01/2025 23:18:15

00000000                             1  *-----------------------------------------------------------------------------
00000000                             2  * Title      : MAIN
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------------------------
00000000                             7  
00001000                             8              ORG    $1000
00001000                             9              
00001000                            10              INCLUDE 'CONST.X68'
00001000                            11  ; ----------------------------------------------------------------------------
00001000                            12  ; CONSTANTES DEL JUEGO
00001000                            13  ; ----------------------------------------------------------------------------
00001000                            14     
00001000                            15  ; --- CONSTANTES DE LA MANZANA -----------------------------------------------
00001000                            16  
00001000  =00000014                 17  MNZWIDTH    EQU     20                      ; ANCHURA DE LA MANZANA (a determinar)
00001000  =00000014                 18  MNZHEIGH    EQU     20                      ; ALTURA DE LA MANZANA (a determinar)
00001000  =0000AAFF                 19  MNZPCOL     EQU     $0000AAFF               ; COLOR CONTORNO MANZANA (a determinar)
00001000  =000000FF                 20  MNZFCOL     EQU     $000000FF               ; COLOR RELLENO MANZANA (a determinar)
00001000                            21  
00001000                            22  ; --- CONSTANTES DE LA SERPIENTE ---------------------------------------------
00001000                            23  
00001000  =00000001                 24  MAXSGM      EQU     1                       ; TAMAÑO MÁXIMO DE SEGMENTOS (a determinar)
00001000  =00000001                 25  LNGINI      EQU     1                       ; LONGITUD INICIAL SERPIENTE (a determinar)
00001000  =00000014                 26  CBZVEL      EQU     20                      ; VELOCIDAD DE LA CABEZA (a determinar)
00001000  =00000014                 27  SGMWIDTH    EQU     20                      ; ANCHURA DE UN SEGMENTO (PROVISIONAL)
00001000  =00000014                 28  SGMHEIGH    EQU     20                      ; ALTURA DE UN SEGMENTO (PROVISIONAL)
00001000  =0000FF00                 29  SGMPCOL     EQU     $0000FF00               ; COLOR CONTORNO SEGMENTO (PROVISIONAL)
00001000  =0000AA00                 30  SGMFCOL     EQU     $0000AA00               ; COLOR RELLENO SEGMENTO (PROVISIONAL)
00001000  =0000000A                 31  COLWIDTH    EQU     10                      ; ANCHURA DE LA COLA (PROVISIONAL)
00001000  =0000000A                 32  COLHEIGH    EQU     10                      ; ALTURA DE LA COLA (PROVISIONAL)
00001000  =0000FF00                 33  COLPCOL     EQU     $0000FF00               ; COLOR CONTORNO COLA (PROVISIONAL)
00001000  =0000AA00                 34  COLFCOL     EQU     $0000AA00               ; COLOR RELLENO COLA (PROVISIONAL)
00001000  =00000014                 35  CBZWIDTH    EQU     20                      ; ANCHURA DE LA CABEZA (PROVISIONAL)
00001000  =00000014                 36  CBZHEIGH    EQU     20                      ; ALTURA DE LA CABEZA (PROVISIONAL)
00001000  =0000FF00                 37  CBZPCOL     EQU     $0000FF00               ; COLOR CONTORNO CABEZA (PROVISIONAL)
00001000  =0000AA00                 38  CBZFCOL     EQU     $0000AA00               ; COLOR RELLENO CABEZA (PROVISIONAL)
00001000  =0000000A                 39  OJOWIDTH    EQU     10                      ; ANCHURA DE OJO DE SERPIENTE
00001000  =0000000A                 40  OJOHEIGH    EQU     10                      ; ALTURA DE OJO DE SERPIENTE
00001000  =00000000                 41  OJOPCOL     EQU     $00000000               ; COLOR CONTORNO OJO
00001000  =00FFFFFF                 42  OJOFCOL     EQU     $00FFFFFF               ; COLOR RELLENO OJO            
00001000                            43  
00001000                            44  ; --- CONSTANTES MARCADOR ----------------------------------------------------
00001000                            45  
00001000  =00000000                 46  PNTSFCOL    EQU     $00000000               ; COLOR FONDO MARCADOR (a determinar)
00001000  =00000065                 47  PNTSTEXT    EQU     0101                    ; COORDENADAS DEL MARCADOR (a determinar)
00001000                            48  
00001000                            49  ; --- CONSTANTES RELACIONADAS CON LOS ESTADOS --------------------------------
00001000                            50  
00001000  =FFFFFFFF                 51  STANONE     EQU     -1                      ; NÚMERO DE ESTADO NO EXISTENTE
00001000  =000001F4                 52  ISCMAXTM    EQU     500                     ;INTRO SCREEN WAITING CYCLES
00001000  =000001F4                 53  INSMAXTM    EQU     500                     ;INTRUCTIONS SCREEN WAINTING CYCLES
00001000                            54  
00001000                            55  
00001000                            56  
00001000                            57  
00001000                            58  -------------------- end include --------------------
00001000                            59              INCLUDE 'SYSCONST.X68'
00001000                            60  ; ----------------------------------------------------------------------------
00001000                            61  ; CONSTANTES DEL SISTEMA
00001000                            62  ; ----------------------------------------------------------------------------
00001000                            63  
00001000                            64  ; ---CONSTANTES DE LA PANTALLA------------------------------------------------
00001000                            65  
00001000  =00000280                 66  PANWIDTH    EQU     640                     ; ANCHO DE LA PANTALLA
00001000  =000001E0                 67  PANHEIGH    EQU     480                     ; ALTURA DE LA PANTALLA
00001000  =0090EE90                 68  COLFND      EQU     $90EE90                 ; COLOR DEL FONDO DE LA PANTALLA
00001000  =00000032                 69  SCRFPS      EQU     50
00001000                            70  
00001000                            71  ; ---CONSTANTES DE LA MATRIZ--------------------------------------------------
00001000                            72  
00001000  =00000014                 73  SIZECLDA    EQU     20                      ; TAMAÑO DE CADA CELDA EN PIXELES
00001000  =00000020                 74  NUMCLMNS    EQU     32                      ; COLUMNAS DE CELDAS (640/10)
00001000  =00000018                 75  NUMFILAS    EQU     24                      ; FILAS DE CELDAS (480/10)
00001000  =00000300                 76  TCELDAS     EQU     768                     ; TOTAL DE CELDAS (64 * 48)
00001000                            77  
00001000                            78  ; ---CÓDIGOS DE TECLADO-------------------------------------------------------
00001000                            79  
00001000  =00000025                 80  KBDLEFT     EQU     $25
00001000  =00000026                 81  KBDUP       EQU     $26
00001000  =00000027                 82  KBDRIGHT    EQU     $27
00001000  =00000028                 83  KBDDOWN     EQU     $28
00001000                            84  
00001000                            85  ; --- IDENTIFICADORES DE SONIDO ----------------------------------------------
00001000                            86  
00001000  =00000000                 87  SNDEAT      EQU     0
00001000  =00000001                 88  SNDGMOV     EQU     1
00001000                            89  
00001000                            90  ; --- NÚMEROS DE TRAP --------------------------------------------------------
00001000                            91  
00001000  =00000000                 92  SCRUPTN     EQU     0                       ; SCREEN UPDATE TRAP NUMBER
00001000  =00000001                 93  KBDUPTN     EQU     1                       ; KEYBOARD TRAP NUMBER
00001000  =00000002                 94  SNDPLTN     EQU     2                       ; SOUND TRAP NUMBER
00001000                            95  
00001000                            96  ; --- NÚMEROS DE INTERRUPCIÓN ------------------------------------------------
00001000                            97  
00001000  =00000001                 98  SCRINTN     EQU     1     
00001000                            99  
00001000                           100  
00001000                           101  
00001000                           102  
00001000                           103  
00001000                           104  
00001000                           105  -------------------- end include --------------------
00001000                           106              INCLUDE 'SYSTEM.X68'
00001000                           107   
00001000                           108   
00001000                           109  SYSINIT
00001000                           110  ; INICIA EL  SISTEMA
00001000                           111  ; INPUT    : NONE
00001000                           112  ; OUTPUT   : NONE
00001000                           113  ; MODIFIES : NONE
00001000                           114  ; ----------------------------------------------------------------------------
00001000                           115              
00001000  21FC 000010EC 0080       116              MOVE.L  #SCRPLOT,($80+SCRUPTN*4)
00001008  21FC 00001114 0084       117              MOVE.L  #KBDUPD,($80+KBDUPTN*4)
00001010  21FC 00001088 0088       118              MOVE.L  #SNDPLAY,($80+SNDPLTN*4)
00001018  21FC 000010DE 0064       119              MOVE.L  #SCRTIM,($60+SCRINTN*4)
00001020                           120              
00001020  4EB9 0000109A            121              JSR     SCRINIT
00001026  4EB9 00001106            122              JSR     KBDINIT
0000102C  4EB9 0000103A            123              JSR     SNDINIT
00001032                           124              
00001032  40E7                     125              MOVE.W  SR,-(A7)
00001034  0257 D8FF                126              ANDI.W  #$D8FF,(A7)
00001038                           127              
00001038  4E73                     128              RTE
0000103A                           129              
0000103A                           130  ; ----------------------------------------------------------------------------
0000103A                           131  SNDINIT
0000103A                           132  ; SOUND SYSTEM INIT
0000103A                           133  ; INPUT    : NONE
0000103A                           134  ; OUTPUT   : NONE
0000103A                           135  ; MODIFIES : NONE
0000103A                           136  ; ----------------------------------------------------------------------------
0000103A                           137  
0000103A  48E7 C0C0                138              MOVEM.L D0-D1/A0-A1,-(A7)
0000103E                           139  
0000103E  4201                     140              CLR.B   D1
00001040  41F9 0000107C            141              LEA     .SNDLIST,A0
00001046  2018                     142  .LOOP       MOVE.L  (A0)+,D0
00001048  6700 000E                143              BEQ     .DONE
0000104C  2240                     144              MOVE.L  D0,A1
0000104E  103C 0047                145              MOVE.B  #71,D0
00001052  4E4F                     146              TRAP    #15
00001054  5201                     147              ADDQ.B  #1,D1
00001056  60EE                     148              BRA     .LOOP
00001058                           149              
00001058  4CDF 0303                150  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
0000105C  4E75                     151              RTS
0000105E                           152              
0000105E= 53 4E 44 2F 45 41 ...    153  .SNDEAT     DC.B    'SND/EAT.wav',0
0000106A= 53 4E 44 2F 47 41 ...    154  .SNDGMOV    DC.B    'SND/GAMEOVER.wav',0
0000107C= 0000105E 0000106A ...    155  .SNDLIST    DC.L    .SNDEAT,.SNDGMOV,0
00001088                           156              
00001088                           157  ; ----------------------------------------------------------------------------
00001088                           158  SNDPLAY
00001088                           159  ; PLAY SOUND
00001088                           160  ; INPUT    : D7 SOUND ID
00001088                           161  ; OUTPUT   : NONE
00001088                           162  ; MODIFIES : NONE
00001088                           163  ; ----------------------------------------------------------------------------            
00001088                           164              
00001088  48A7 C000                165              MOVEM.W D0-D1,-(A7)
0000108C                           166              
0000108C  103C 0048                167              MOVE.B  #72,D0
00001090  1207                     168              MOVE.B  D7,D1
00001092  4E4F                     169              TRAP    #15
00001094                           170              
00001094  4C9F 0003                171              MOVEM.W (A7)+,D0-D1
00001098  4E73                     172              RTE
0000109A                           173               
0000109A                           174              
0000109A                           175  ; ----------------------------------------------------------------------------
0000109A                           176  SCRINIT
0000109A                           177  ; INIT SCREEN. SET SCREEN RESOLUTION, SET WINDOWED MODE, CLEAR SCREEN,
0000109A                           178  ; ENABLE DOUBLE BUFFER, ENABLED TIMED INTERRUPT.
0000109A                           179  ; INPUT    : NONE
0000109A                           180  ; OUTPUT   : NONE
0000109A                           181  ; MODIFIES : NONE
0000109A                           182  ; ----------------------------------------------------------------------------
0000109A                           183  
0000109A  48E7 C000                184              MOVEM.L D0-D1,-(A7)
0000109E                           185  
0000109E                           186              ; SET SCREEN RESOLUTION
0000109E  103C 0021                187              MOVE.B  #33,D0
000010A2  223C 028001E0            188              MOVE.L  #PANWIDTH<<16|PANHEIGH,D1
000010A8  4E4F                     189              TRAP    #15
000010AA                           190              
000010AA                           191              ; SET WINDOWED MODE
000010AA  7201                     192              MOVE.L  #1,D1
000010AC  4E4F                     193              TRAP    #15
000010AE                           194              
000010AE                           195              ; CLEAR SCREEN
000010AE  103C 000B                196              MOVE.B  #11,D0
000010B2  323C FF00                197              MOVE.W  #$FF00,D1
000010B6  4E4F                     198              TRAP    #15
000010B8                           199              
000010B8                           200              ; ENABLE DOUBLE BUFFER
000010B8  103C 005C                201              MOVE.B  #92,D0
000010BC  123C 0011                202              MOVE.B  #17,D1
000010C0  4E4F                     203              TRAP    #15
000010C2                           204              
000010C2                           205              ; ENABLE TIMED INTERRUPT
000010C2  103C 0020                206              MOVE.B  #32,D0
000010C6  123C 0006                207              MOVE.B  #6,D1
000010CA  143C 0081                208              MOVE.B  #$80|SCRINTN,D2
000010CE  7614                     209              MOVE.L  #1000/SCRFPS,D3                  ; CON 20 SE CONSIUGUEN 50 FPS
000010D0  4E4F                     210              TRAP    #15
000010D2                           211              
000010D2                           212              ; CLEAR INTERRUPT COUNTER
000010D2  4279 000026AA            213              CLR.W   (SCRINTCT)
000010D8                           214              
000010D8  4CDF 0003                215              MOVEM.L (A7)+,D0-D1
000010DC                           216              
000010DC  4E75                     217              RTS    
000010DE                           218              
000010DE                           219  ; ------------------------------------------------------------------------------
000010DE                           220  SCRTIM
000010DE                           221  ; TIMED INTERRUPT SERVICE ROUTINE
000010DE                           222  ; INPUT    : NONE
000010DE                           223  ; OUTPUT   : NONE
000010DE                           224  ; MODIFIES : NONE
000010DE                           225  ; ------------------------------------------------------------------------------
000010DE  5239 000026AA            226              ADDQ.B  #1,(SCRINTCT)
000010E4  5239 000026AB            227              ADDQ.B  #1,(SCRCYCCT)
000010EA  4E73                     228              RTE
000010EC                           229              
000010EC                           230  
000010EC                           231  ; ------------------------------------------------------------------------------
000010EC                           232  SCRPLOT
000010EC                           233  ; UPDATES DOUBLE BUFFER
000010EC                           234  ; INPUT    : NONE
000010EC                           235  ; OUTPUT   : NONE
000010EC                           236  ; MODIFIES : NONE
000010EC                           237  ; ------------------------------------------------------------------------------
000010EC                           238  
000010EC  48A7 C000                239              MOVEM.W D0-D1,-(A7)
000010F0                           240              
000010F0                           241              ; SWITCH BUFFERS
000010F0  103C 005E                242              MOVE.B  #94,D0
000010F4  4E4F                     243              TRAP    #15
000010F6                           244              
000010F6                           245              ; CLEAR HIDDEN BUFFER
000010F6  103C 000B                246              MOVE.B  #11,D0
000010FA  323C FF00                247              MOVE.W  #$FF00,D1
000010FE  4E4F                     248              TRAP    #15
00001100                           249              
00001100  4C9F 0003                250              MOVEM.W (A7)+,D0-D1
00001104                           251              
00001104  4E73                     252              RTE
00001106                           253          
00001106                           254  ; ------------------------------------------------------------------------------
00001106                           255  KBDINIT
00001106                           256  ; INIT KEYBOARD
00001106                           257  ; INPUT    : NONE
00001106                           258  ; OUTPUT   : NONE
00001106                           259  ; MODIFIES : NONE
00001106                           260  ; ------------------------------------------------------------------------------
00001106                           261  
00001106  4239 000026A3            262              CLR.B   (KBDVAL)
0000110C  4239 000026A4            263              CLR.B   (KBDEDGE)
00001112  4E75                     264              RTS
00001114                           265  
00001114                           266  ; ------------------------------------------------------------------------------
00001114                           267  KBDUPD
00001114                           268  ; UPDATE KEYBOARD INFO.  
00001114                           269  ; 7 -> PAUSE
00001114                           270  ; 6 -> FIRE 3
00001114                           271  ; 5 -> FIRE 2
00001114                           272  ; 4 -> FIRE 1
00001114                           273  ; 3 -> DOWN
00001114                           274  ; 2 -> RIGHT
00001114                           275  ; 1 -> UP
00001114                           276  ; 0 -> LEFT
00001114                           277  ; INPUT    : NONE
00001114                           278  ; OUTPUT   : NONE
00001114                           279  ; MODIFIES : NONE
00001114                           280  ; ------------------------------------------------------------------------------
00001114                           281  
00001114  48E7 C000                282              MOVEM.L D0-D1,-(A7)
00001118                           283  
00001118                           284              ; LEE ESTADO DEL TECLADO
00001118  103C 0013                285              MOVE.B  #19,D0
0000111C  223C 25262728            286              MOVE.L  #KBDLEFT<<24|KBDUP<<16|KBDRIGHT<<8|KBDDOWN,D1
00001122  4E4F                     287              TRAP    #15                  ; Lee las teclas y guarda en D1
00001124                           288              
00001124  23C1 000026A4            289              MOVE.L  D1,(KBDEDGE)
0000112A                           290  
0000112A  B2BC 000000FF            291              CMP.L   #$000000FF,D1
00001130  6700 0048                292              BEQ     DWN
00001134  B2BC 0000FF00            293              CMP.L   #$0000FF00,D1
0000113A  6700 001A                294              BEQ     DER
0000113E  B2BC 00FF0000            295              CMP.L   #$00FF0000,D1
00001144  6700 001C                296              BEQ     ARR
00001148  B2BC FF000000            297              CMP.L   #$FF000000,D1
0000114E  6700 001E                298              BEQ     IZQ
00001152                           299  
00001152                           300              ; Si no hay pulsaciones, mantener estado
00001152  6000 002E                301              BRA     CONTINU
00001156                           302  
00001156  33FC 0000 000026A2       303  DER:        MOVE.W  #0,(ESTDCBZ)           ; Actualiza estado a DERECHA
0000115E  6000 0022                304              BRA     CONTINU
00001162                           305              
00001162  33FC 0001 000026A2       306  ARR:        MOVE.W  #1,(ESTDCBZ)           ; Actualiza estado a ARRIBA
0000116A  6000 0016                307              BRA     CONTINU
0000116E                           308  
0000116E  33FC 0002 000026A2       309  IZQ:        MOVE.W  #2,(ESTDCBZ)           ; Actualiza estado a IZQUIERDA
00001176  6000 000A                310              BRA     CONTINU                    
0000117A                           311  
0000117A  33FC 0003 000026A2       312  DWN:        MOVE.W  #3,(ESTDCBZ)           ; Actualiza estado a ABAJO
00001182                           313  
00001182                           314  CONTINU:
00001182  4CDF 0003                315              MOVEM.L (A7)+,D0-D1
00001186  4E73                     316              RTE
00001188                           317   
00001188                           318  -------------------- end include --------------------
00001188                           319              INCLUDE 'LIB/UTLCODE.X68'
00001188                           320  ; =============================================================================
00001188                           321  ; UTILITY CODE
00001188                           322  ; =============================================================================
00001188                           323  
00001188                           324  ; -----------------------------------------------------------------------------
00001188                           325  UTLINIT
00001188                           326  ; INITIALIZES UTILITY CODE
00001188                           327  ; INPUT    - NONE
00001188                           328  ; OUTPUT   - NONE
00001188                           329  ; MODIFIES - NONE
00001188                           330  ; -----------------------------------------------------------------------------
00001188  48E7 C000                331              MOVEM.L D0-D1,-(A7)
0000118C  103C 0008                332              MOVE.B  #8,D0
00001190  4E4F                     333              TRAP    #15
00001192  13C1 000023A0            334              MOVE.B  D1,(UTLRNDIX)
00001198  4CDF 0003                335              MOVEM.L (A7)+,D0-D1
0000119C  4E75                     336              RTS
0000119E                           337  
0000119E                           338  
0000119E                           339  ; -----------------------------------------------------------------------------
0000119E                           340  UTLPRINT
0000119E                           341  ; PRINT SCREEN CENTERED TEXT
0000119E                           342  ; INPUT    : A0 POINTER TO ZERO-TERMINATED STRING
0000119E                           343  ;            D0.B SCREEN ROW TO PRINT TEXT
0000119E                           344  ; OUTPUT   : D0.B NEXT ROW
0000119E                           345  ; MODIFIES : NONE (ASIDE OF OUTPUT)
0000119E                           346  ; -----------------------------------------------------------------------------
0000119E  48E7 C0C0                347              MOVEM.L D0-D1/A0-A1,-(A7)
000011A2  4201                     348              CLR.B   D1
000011A4  2248                     349              MOVE.L  A0,A1
000011A6  4A18                     350  .LOOP       TST.B   (A0)+
000011A8  6700 0006                351              BEQ     .ENDLOOP
000011AC  5201                     352              ADDQ.B  #1,D1
000011AE  60F6                     353              BRA     .LOOP
000011B0  E209                     354  .ENDLOOP    LSR.B   #1,D1
000011B2  0401 0028                355              SUB.B   #(PANWIDTH/UTLCHRWD)/2,D1
000011B6  4401                     356              NEG.B   D1
000011B8  E141                     357              ASL.W   #8,D1
000011BA  8240                     358              OR.W    D0,D1
000011BC  103C 000B                359              MOVE.B  #11,D0
000011C0  4E4F                     360              TRAP    #15
000011C2  103C 000D                361              MOVE.B  #13,D0
000011C6  4E4F                     362              TRAP    #15
000011C8  4CDF 0303                363              MOVEM.L (A7)+,D0-D1/A0-A1
000011CC  5200                     364              ADDQ.B  #1,D0
000011CE  4E75                     365              RTS
000011D0                           366              
000011D0                           367              
000011D0                           368  
000011D0                           369  
000011D0                           370              ; (SCRWIDTH/UTLCHRWD)/2 - D1/2
000011D0                           371  
000011D0                           372  ; -----------------------------------------------------------------------------
000011D0                           373  UTLRAND
000011D0                           374  ; PROVIDES A PSEUDO-RANDOM BYTE
000011D0                           375  ; INPUT    - NONE
000011D0                           376  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011D0                           377  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011D0                           378  ; -----------------------------------------------------------------------------
000011D0  2F08                     379              MOVE.L  A0,-(A7)
000011D2  41F9 000011EE            380              LEA     .RANDVEC,A0
000011D8  4280                     381              CLR.L   D0
000011DA  1039 000023A0            382              MOVE.B  (UTLRNDIX),D0
000011E0  1030 0800                383              MOVE.B  (A0,D0.L),D0
000011E4  5239 000023A0            384              ADDQ.B  #1,(UTLRNDIX)
000011EA  205F                     385              MOVE.L  (A7)+,A0
000011EC  4E75                     386              RTS
000011EE                           387  
000011EE                           388  
000011EE= A2 EE 9A 0C F5 24 ...    389  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
000011F6= 2A A3 51 26 E0 AC ...    390              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
000011FE= 75 51 CA FD 33 EB ...    391              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001206= 60 CC E7 B8 9A EB ...    392              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000120E= 1D 76 B5 95 B0 89 ...    393              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001216= 39 15 48 C9 6E CA ...    394              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000121E= 43 E7 E2 7C 37 25 ...    395              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001226= E9 94 CE E9 E4 52 ...    396              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000122E= 37 6D 9A 84 A2 28 ...    397              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001236= 19 E2 C6 77 80 D4 ...    398              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000123E= 0A 5A 32 67 33 C2 ...    399              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001246= 59 80 DC 0E 57 FC ...    400              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000124E= 8A AB BC F7 07 4D ...    401              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001256= EF D5 77 6E 1E BB ...    402              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000125E= D6 E0 2A 8F BD 28 ...    403              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001266= 13 4F 66 EC 0A 64 ...    404              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000126E= 56 52 9A 16 9B 90 ...    405              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
00001276= 06 8A A4 F7 01 DA ...    406              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
0000127E= F2 E7 77 28 B1 76 ...    407              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
00001286= A4 42 E3 81 B1 67 ...    408              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
0000128E= BF CE FA 16 BF 38 ...    409              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
00001296= D1 8B 50 0C 5F 49 ...    410              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
0000129E= DE 4C 14 A2 40 DC ...    411              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012A6= B6 9B 0A 38 5D AB ...    412              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012AE= E2 1B DD 75 15 82 ...    413              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012B6= 8A 26 51 30 9F 47 ...    414              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012BE= 1E 8A BB 71 C6 6E ...    415              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012C6= 9F 47 E5 34 94 27 ...    416              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012CE= 7D 06 D6 BA 30 0F ...    417              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
000012D6= EC 7F 7E 03 CF 2D ...    418              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
000012DE= 94 5B 23 F2 8B CD ...    419              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
000012E6= 74 33 EC B9 0F D5 ...    420              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
000012EE                           421  
000012EE                           422  
000012EE                           423  -------------------- end include --------------------
000012EE                           424              INCLUDE 'LIB/UTLCONST.X68'
000012EE                           425  ; ==============================================================================
000012EE                           426  ; UTIL CONSTANTS
000012EE                           427  ; ==============================================================================
000012EE                           428  
000012EE  =00000008                429  UTLCHRWD    EQU     8                       ; CHARACTER WIDTH IN PIXELS
000012EE  =00000008                430  -------------------- end include --------------------
000012EE                           431              INCLUDE 'HEADSRP.X68'
000012EE                           432  
000012EE                           433  ; ------------------------------------------------------------------------------
000012EE                           434  HEADINIT
000012EE                           435  ; INICIALIZAR CABEZA.
000012EE                           436  ; INPUT    : NONE 
000012EE                           437  ; OUTPUT   : NONE
000012EE                           438  ; MODIFIES : NONE
000012EE                           439  ; ------------------------------------------------------------------------------
000012EE  33FC 0140 0000236E       440              MOVE.W  #PANWIDTH/2,(CBZPOSX)
000012F6  33FC 00F0 00002370       441              MOVE.W  #PANHEIGH/2,(CBZPOSY)
000012FE  4279 000026A2            442              CLR.W   (ESTDCBZ)
00001304  33FC 0000 000026A2       443              MOVE.W  #0,(ESTDCBZ)
0000130C  4E75                     444              RTS
0000130E                           445              
0000130E                           446  ; ------------------------------------------------------------------------------
0000130E                           447  HEADUPD
0000130E                           448  ; ACTUALIZAR CABEZA.
0000130E                           449  ; INPUT    : NONE 
0000130E                           450  ; OUTPUT   : NONE
0000130E                           451  ; MODIFIES : NONE
0000130E                           452  ; ------------------------------------------------------------------------------
0000130E                           453  
0000130E  48E7 F1C0                454              MOVEM.L D0-D3/D7/A0-A1,-(A7)
00001312                           455  
00001312                           456              ; Marcar celda actual como vacía
00001312  3239 0000236E            457              MOVE.W  (CBZPOSX),D1
00001318  3439 00002370            458              MOVE.W  (CBZPOSY),D2
0000131E  4EB9 00001A24            459              JSR     CINDMTRZ
00001324  4EB9 00001A74            460              JSR     MCLDVCIA
0000132A                           461              
0000132A                           462              ; Actualiza la posición de la cabeza según ESTDCBZ
0000132A  3039 000026A2            463              MOVE.W  (ESTDCBZ),D0
00001330  B07C 0000                464              CMP.W   #0,D0
00001334  6700 001E                465              BEQ     SIGDER
00001338  B07C 0001                466              CMP.W   #1,D0
0000133C  6700 0022                467              BEQ     SIGARR
00001340  B07C 0002                468              CMP.W   #2,D0
00001344  6700 0026                469              BEQ     SIGIZQ
00001348  B07C 0003                470              CMP.W   #3,D0
0000134C  6700 002A                471              BEQ     SIGABA
00001350                           472  
00001350                           473              ; Si no hay dirección válida, sale
00001350  6000 01DC                474              BRA     FIN
00001354                           475  
00001354                           476  SIGDER:
00001354  0679 0014 0000236E       477              ADD.W   #CBZVEL,(CBZPOSX)
0000135C  6000 0022                478              BRA     CHKBORDE
00001360                           479  
00001360                           480  SIGARR:
00001360  0479 0014 00002370       481              SUB.W   #CBZVEL,(CBZPOSY)
00001368  6000 0016                482              BRA     CHKBORDE
0000136C                           483  
0000136C                           484  SIGIZQ:
0000136C  0479 0014 0000236E       485              SUB.W   #CBZVEL,(CBZPOSX)
00001374  6000 000A                486              BRA     CHKBORDE
00001378                           487  
00001378                           488  SIGABA:
00001378  0679 0014 00002370       489              ADD.W   #CBZVEL,(CBZPOSY)
00001380                           490              
00001380                           491  CHKBORDE:
00001380                           492              ; Verificar colisiones con los bordes
00001380  3239 0000236E            493              MOVE.W  (CBZPOSX),D1
00001386  B27C 0280                494              CMP.W   #PANWIDTH,D1                 ; Si CBZPOSX < 0
0000138A  6E00 006E                495              BGT     GAMEOVER
0000138E  B27C 0000                496              CMP.W   #0,D1          ; Si CBZPOSX >= PANWIDTH
00001392  6D00 0066                497              BLT     GAMEOVER
00001396                           498  
00001396  3239 00002370            499              MOVE.W  (CBZPOSY),D1
0000139C  B27C 0000                500              CMP.W   #0,D1                 ; Si CBZPOSY < 0
000013A0  6D00 0058                501              BLT     GAMEOVER
000013A4  B27C 01E0                502              CMP.W   #PANHEIGH,D1          ; Si CBZPOSY >= PANHEIGH
000013A8  6E00 0050                503              BGT     GAMEOVER
000013AC                           504  
000013AC                           505              ;BRA     FIN
000013AC                           506              
000013AC                           507  CHKCOL:
000013AC                           508              ; Verifica la colisión con la manzana
000013AC  3239 0000236E            509              MOVE.W  (CBZPOSX),D1
000013B2  3439 00002370            510              MOVE.W  (CBZPOSY),D2
000013B8  B279 0000236A            511              CMP.W   (MNZPOSX),D1
000013BE  6600 001E                512              BNE     NOCOL
000013C2  B479 0000236C            513              CMP.W   (MNZPOSY),D2
000013C8  6600 0014                514              BNE     NOCOL
000013CC                           515              
000013CC                           516              ; Colisión detectada
000013CC  4EB9 000017CC            517              JSR     APPLEUPD
000013D2  4EB9 000018D0            518              JSR     SCOUPD
000013D8  1E3C 0000                519              MOVE.B  #SNDEAT,D7
000013DC  4E42                     520              TRAP    #SNDPLTN
000013DE                           521  
000013DE                           522  NOCOL:
000013DE                           523              ; Convierte la posición nueva a índice
000013DE  3239 0000236E            524              MOVE.W  (CBZPOSX),D1
000013E4  3439 00002370            525              MOVE.W  (CBZPOSY),D2
000013EA  4EB9 00001A24            526              JSR     CINDMTRZ
000013F0  4EB9 00001A5E            527              JSR     CBZOCPD                 ; Marca la celda como ocupada
000013F6                           528              
000013F6  6000 0136                529              BRA     FIN
000013FA                           530  
000013FA                           531  
000013FA                           532  GAMEOVER:
000013FA  1E3C 0001                533              MOVE.B  #SNDGMOV,D7             ;PONER SONIDO GAME OVER
000013FE  4E42                     534              TRAP    #SNDPLTN
00001400  33FC 0003 0000238E       535              MOVE.W  #3,(STANEXT)
00001408                           536              
00001408  4280                     537              CLR.L   D0                      ; BORRAMOS LOS REGISTROS QUE VAMOS A UTILIZAR
0000140A  4281                     538              CLR.L   D1
0000140C  4282                     539              CLR.L   D2
0000140E  4283                     540              CLR.L   D3
00001410  42B9 00002394            541              CLR.L   (BFFLEC)
00001416                           542              
00001416                           543              ; ESCRIBIR PUNTUACIÓN
00001416  103C 0032                544              MOVE.B  #50,D0                  ; CERRAMOS TODOS LOS ARCHIVOS
0000141A  4E4F                     545              TRAP    #15
0000141C                           546  
0000141C                           547               ; Verificar si el archivo existe
0000141C  43F9 00001566            548              LEA     FILE,A1                 ; Dirección del nombre del archivo
00001422  103C 003B                549              MOVE.B  #59,D0                  ; Tarea 59: Verificar existencia del archivo
00001426  4E4F                     550              TRAP    #15
00001428  B07C 0000                551              CMP.W   #0,D0                   ; Verificar si el archivo existe
0000142C  6700 0006                552              BEQ     .ABRIR_ARCHIVO          ; Si existe, abrir archivo
00001430  6000 0062                553              BRA     .CREAR_ARCHIVO          ; Si no existe, crear archivo
00001434                           554  
00001434                           555  .ABRIR_ARCHIVO
00001434                           556              ; Abrir archivo existente
00001434  103C 0033                557              MOVE.B  #51,D0                  ; Abrir archivo existente
00001438  4E4F                     558              TRAP    #15
0000143A  B07C 0000                559              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
0000143E  6600 0120                560              BNE     ERROR                   ; Si falla, ir a ERROR
00001442  23C1 00002390            561              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001448                           562  
00001448                           563              ; Leer hasta encontrar el marcador `#`
00001448  2239 00002390            564              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
0000144E  7400                     565              MOVE.L  #0,D2                   ; Posicionarse al inicio del archivo
00001450  103C 0037                566              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001454  4E4F                     567              TRAP    #15
00001456                           568  
00001456                           569  .BUSCAR_FINAL
00001456  43F9 00002394            570              LEA     BFFLEC,A1               ; Buffer para leer datos
0000145C  2239 00002390            571              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001462  7401                     572              MOVE.L  #1,D2                   ; Leer 1 byte
00001464  103C 0035                573              MOVE.B  #53,D0                  ; Tarea 53: Leer archivo
00001468  4E4F                     574              TRAP    #15
0000146A  B07C 0001                575              CMP.W   #1,D0                   ; Verificar si alcanzamos EOF
0000146E  6700 003C                576              BEQ     .ESCRIBIR               ; Si alcanzamos EOF, escribir al final
00001472  0C39 0023 00002394       577              CMP.B   #'#',(BFFLEC)           ; Comparar con el marcador `#`
0000147A  6700 0006                578              BEQ     .POSICIONAR             ; Si encontramos el marcador, posicionarnos ahí
0000147E  5283                     579              ADDQ.L  #1,D3                   ; Incrementar contador de bytes leídos
00001480  60D4                     580              BRA     .BUSCAR_FINAL           ; Continuar buscando el marcador
00001482                           581  
00001482                           582  .POSICIONAR
00001482                           583              ; Posicionarse al marcador para sobrescribir
00001482  2403                     584              MOVE.L  D3,D2                   ; Cargar la posición del marcador desde el contador
00001484  2239 00002390            585              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
0000148A  103C 0037                586              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
0000148E  4E4F                     587              TRAP    #15
00001490  6000 001A                588              BRA     .ESCRIBIR               ; Ir a escribir datos
00001494                           589  
00001494                           590  .CREAR_ARCHIVO
00001494                           591              ; Crear archivo nuevo
00001494  103C 0034                592              MOVE.B  #52,D0                  ; Tarea 52: Abrir o crear archivo
00001498  4E4F                     593              TRAP    #15
0000149A  B07C 0000                594              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
0000149E  6600 00C0                595              BNE     ERROR                   ; Si falla, ir a ERROR
000014A2  23C1 00002390            596              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
000014A8  6000 0002                597              BRA     .ESCRIBIR               ; Ir directamente a escribir datos
000014AC                           598  
000014AC                           599  .ESCRIBIR
000014AC                           600              ; Convertir el número en caracteres ASCII y escribirlos uno por uno
000014AC  41F9 00002382            601              LEA     JGOPNTS,A0              ; Dirección del número
000014B2  3010                     602              MOVE.W  (A0),D0                 ; Cargar el número en D0
000014B4  4EB9 00001534            603              JSR     CONVERTIR_NUMERO        ; Convertir número a ASCII en el buffer
000014BA                           604  
000014BA                           605              ; Escribir los caracteres del buffer
000014BA  41F9 00002395            606              LEA     ASCBFF,A0               ; Dirección del buffer de caracteres ASCII
000014C0                           607              
000014C0                           608  
000014C0                           609  .ESCRIBIR_BUCLE:
000014C0  1010                     610              MOVE.B  (A0),D0                ; Leer carácter del buffer
000014C2  6700 0028                611              BEQ     .ESCRIBIR_FIN_BLOQUE    ; Si terminador NULL, ir al delimitador
000014C6  2403                     612              MOVE.L  D3,D2                   ; Cargar posición actual
000014C8  2239 00002390            613              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
000014CE  103C 0037                614              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
000014D2  4E4F                     615              TRAP    #15                     ; Posicionar antes de escribir
000014D4  103C 0036                616              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
000014D8  43D0                     617              LEA     (A0),A1
000014DA  7401                     618              MOVE.L  #1,D2
000014DC  4E4F                     619              TRAP    #15                     ; Escribir carácter
000014DE  B07C 0000                620              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
000014E2  6600 007C                621              BNE     ERROR                   ; Si falla, ir a ERROR
000014E6  5283                     622              ADDQ.L  #1,D3                   ; Incrementar posición
000014E8  1018                     623              MOVE.B  (A0)+,D0                ; Restaurar carácter actual
000014EA  60D4                     624              BRA     .ESCRIBIR_BUCLE         ; Continuar con el siguiente carácter
000014EC                           625  
000014EC                           626  .ESCRIBIR_FIN_BLOQUE
000014EC                           627              ; Escribir delimitador `?`
000014EC  43F9 00001571            628              LEA     TXT1,A1
000014F2  4EB9 00001508            629              JSR     ESCRIBIR_CARACTER
000014F8                           630              ; Escribir marcador `#`
000014F8  43F9 00001573            631              LEA     TXT2,A1
000014FE  4EB9 00001508            632              JSR     ESCRIBIR_CARACTER
00001504  6000 001C                633              BRA     FINESC
00001508                           634  
00001508                           635  ESCRIBIR_CARACTER:
00001508  2403                     636              MOVE.L  D3,D2                   ; Cargar posición actual
0000150A  2239 00002390            637              MOVE.L  FILEID,D1               ; File-ID del archivo
00001510  103C 0037                638              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001514  4E4F                     639              TRAP    #15                     ; Posicionar antes de escribir
00001516  103C 0036                640              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
0000151A  7401                     641              MOVE.L  #1,D2
0000151C  4E4F                     642              TRAP    #15                     ; Escribir carácter
0000151E  5283                     643              ADDQ.L  #1,D3                   ; Incrementar posición
00001520  4E75                     644              RTS                             ; Retornar
00001522                           645  
00001522                           646  FINESC
00001522                           647              ; Cerrar archivo
00001522  2239 00002390            648              MOVE.L  FILEID,D1               ; File-ID del archivo
00001528  103C 0038                649              MOVE.B  #56,D0                  ; Tarea 56: Cerrar archivo
0000152C  4E4F                     650              TRAP    #15
0000152E                           651  FIN
0000152E  4CDF 038F                652              MOVEM.L (A7)+,D0-D3/D7/A0-A1          ; Restaurar registros
00001532  4E75                     653              RTS                             ; Retornar
00001534                           654  
00001534                           655  CONVERTIR_NUMERO
00001534  48E7 F040                656               MOVEM.L D0-D3/A1,-(A7)         ; Guardar registros usados en la pila
00001538                           657  
00001538                           658      ; Inicialización
00001538  43F9 00002395            659      LEA     ASCBFF,A1              ; Dirección del buffer
0000153E  740A                     660      MOVEQ   #10,D2                 ; Base decimal (10)
00001540                           661  
00001540                           662      ; Convertir número hexadecimal a decimal y guardar dígitos
00001540                           663  .CONVERTDELO:
00001540  80C2                     664      DIVU    D2,D0                  ; Dividir D0 por 10: cociente en D0, residuo en bits bajos
00001542  3600                     665      MOVE.W  D0,D3
00001544  C0BC 0000000F            666      AND.L   #$000F,D0              ; Asegurarnos de trabajar con el residuo (0-9)
0000154A  0600 0030                667      ADD.B   #48,D0                 ; Convertir residuo a carácter ASCII ('0'-'9')
0000154E  12C0                     668      MOVE.B  D0,(A1)+               ; Almacenar carácter en el buffer
00001550  3003                     669      MOVE.W  D3,D0
00001552  4A43                     670      TST.W   D3                     ; Verificar si el cociente es 0
00001554  66EA                     671      BNE     .CONVERTDELO           ; Si no es 0, continuar con el próximo dígito
00001556                           672  
00001556                           673              
00001556                           674      ; Añadir terminador NULL al final
00001556  12FC 0000                675      MOVE.B  #0,(A1)+               ; Finalizar cadena con NULL
0000155A                           676  
0000155A  4CDF 020F                677      MOVEM.L (A7)+,D0-D3/A1         ; Restaurar registros usados
0000155E  4E75                     678              RTS                         ; Retornar              
00001560                           679  ERROR
00001560  103C 0009                680              MOVE.B  #9,D0                   ; Tarea 9: Terminar el programa
00001564  4E4F                     681              TRAP    #15
00001566                           682     
00001566                           683              
00001566                           684              
00001566= 50 55 4E 54 4F 53 ...    685  FILE        DC.B    'PUNTOS.TXT',0 
00001571= 3F 00                    686  TXT1        DC.B    '?',0
00001573= 23 00                    687  TXT2        DC.B    '#',0  
00001576                           688              DS.W    0        
00001576                           689  
00001576                           690  
00001576                           691              
00001576                           692              
00001576                           693  ; ------------------------------------------------------------------------------
00001576                           694  HEADPLOT
00001576                           695  ; DIBUJAR CABEZA.
00001576                           696  ; INPUT    : NONE 
00001576                           697  ; OUTPUT   : NONE
00001576                           698  ; MODIFIES : NONE
00001576                           699  ; ------------------------------------------------------------------------------
00001576                           700                         
00001576  3F00                     701              MOVE.W  D0,-(A7)               ; GUARDAMOS D0
00001578  3003                     702              MOVE.W  D3,D0                  ; PONEMOS EL INDICE DE LA CELDA EN D0 PARA CALCULAR SUS COORDENADAS
0000157A  4EB9 00001ACC            703              JSR     CNVICOOR
00001580  2F01                     704              MOVE.L  D1,-(A7)
00001582                           705              
00001582                           706              ; SET COLOR DEL CONTORNO CABEZA
00001582  103C 0050                707              MOVE.B  #80,D0
00001586  223C 0000FF00            708              MOVE.L  #CBZPCOL,D1
0000158C  4E4F                     709              TRAP    #15
0000158E                           710              
0000158E                           711              ; SET COLOR DEL RELLENO CABEZA
0000158E  103C 0051                712              MOVE.B  #81,D0
00001592  223C 0000AA00            713              MOVE.L  #CBZFCOL,D1
00001598  4E4F                     714              TRAP    #15
0000159A                           715              
0000159A                           716              ; DIBUJAR CABEZA
0000159A  103C 0057                717              MOVE.B  #87,D0
0000159E  221F                     718              MOVE.L  (A7)+,D1
000015A0  3F03                     719              MOVE.W  D3,-(A7)
000015A2  3601                     720              MOVE.W  D1,D3
000015A4  0643 0014                721              ADD.W   #CBZWIDTH,D3
000015A8  3802                     722              MOVE.W  D2,D4
000015AA  0644 0014                723              ADD.W   #CBZHEIGH,D4
000015AE  4E4F                     724              TRAP    #15
000015B0                           725              
000015B0  2F01                     726              MOVE.L  D1,-(A7)
000015B2                           727              
000015B2                           728              ; SET COLOR DEL CONTORNO OJO
000015B2  103C 0050                729              MOVE.B  #80,D0
000015B6  7200                     730              MOVE.L  #OJOPCOL,D1
000015B8  4E4F                     731              TRAP    #15
000015BA                           732              
000015BA                           733              ; SET COLOR DEL RELLENO OJO
000015BA  103C 0051                734              MOVE.B  #81,D0
000015BE  223C 00FFFFFF            735              MOVE.L  #OJOFCOL,D1
000015C4  4E4F                     736              TRAP    #15
000015C6                           737              
000015C6                           738              ; DIBUJAR OJO
000015C6  103C 0058                739              MOVE.B  #88,D0
000015CA  221F                     740              MOVE.L  (A7)+,D1
000015CC  2F01                     741              MOVE.L  D1,-(A7)
000015CE  2F02                     742              MOVE.L  D2,-(A7)
000015D0  5A41                     743              ADD.W   #OJOWIDTH/2,D1            
000015D2  3601                     744              MOVE.W  D1,D3
000015D4  0643 000A                745              ADD.W   #OJOWIDTH,D3
000015D8  5A42                     746              ADD.W   #OJOHEIGH/2,D2
000015DA  3802                     747              MOVE.W  D2,D4
000015DC  0644 000A                748              ADD.W   #OJOHEIGH,D4
000015E0  4E4F                     749              TRAP    #15                     ; DIBUJAMOS EL PRIMER OJO
000015E2                           750              
000015E2                           751  
000015E2                           752              ; DEFINIR COORDENADAS IRIS
000015E2  241F                     753              MOVE.L  (A7)+,D2
000015E4  221F                     754              MOVE.L  (A7)+,D1
000015E6  0641 000A                755              ADD.W   #OJOWIDTH,D1
000015EA  0642 000A                756              ADD.W   #OJOHEIGH,D2
000015EE  103C 0052                757              MOVE.B  #82,D0
000015F2  4E4F                     758              TRAP    #15                     ; DIBUJAMOS EL PRIMER IRIS
000015F4                           759              
000015F4  361F                     760              MOVE.W  (A7)+,D3
000015F6  301F                     761              MOVE.W  (A7)+,D0
000015F8                           762  
000015F8  4E75                     763              RTS
000015FA                           764  
000015FA                           765  
000015FA                           766  
000015FA                           767  
000015FA                           768  
000015FA                           769  
000015FA                           770  -------------------- end include --------------------
000015FA                           771              INCLUDE 'SEGSRP.X68'
000015FA                           772  
000015FA                           773  ; ------------------------------------------------------------------------------
000015FA                           774  SEGINIT
000015FA                           775  ; INICIALIZAR SEGMENTO.
000015FA                           776  ; INPUT    : NONE 
000015FA                           777  ; OUTPUT   : NONE
000015FA                           778  ; MODIFIES : NONE
000015FA                           779  ; ------------------------------------------------------------------------------
000015FA  33FC 012C 0000237A       780              MOVE.W  #(PANWIDTH/2)-CBZWIDTH,(SGMPOSX)
00001602  33FC 00F0 0000237C       781              MOVE.W  #PANHEIGH/2,(SGMPOSY)
0000160A  33F9 0000237A 0000237E   782              MOVE.W  (SGMPOSX),(SGMPOSX2)
00001614  33F9 0000237C 00002380   783              MOVE.W  (SGMPOSY),(SGMPOSY2)
0000161E  0479 0014 0000237E       784              SUB.W   #SGMWIDTH,(SGMPOSX2)
00001626  4E75                     785              RTS
00001628                           786              
00001628                           787  ; ------------------------------------------------------------------------------
00001628                           788  SEGUPD
00001628                           789  ; ACTUALIZAR SEGMENTO.
00001628                           790  ; INPUT    : NONE 
00001628                           791  ; OUTPUT   : NONE
00001628                           792  ; MODIFIES : NONE
00001628                           793  ; ------------------------------------------------------------------------------
00001628                           794  
00001628  48A7 6000                795              MOVEM.W D1-D2,-(A7)
0000162C                           796              
0000162C                           797              ; Marcar posición anterior del segmento como vacía
0000162C  3239 0000237A            798              MOVE.W  (SGMPOSX),D1             ; Cargar posición X actual del segmento2
00001632  3439 0000237C            799              MOVE.W  (SGMPOSY),D2             ; Cargar posición Y actual del segmento2
00001638  4EB9 00001A24            800              JSR     CINDMTRZ                ; Obtener índice de celda en D0
0000163E  4EB9 00001A74            801              JSR     MCLDVCIA                ; Marcar celda como vacía
00001644                           802              
00001644                           803              ; Marcar posición anterior del segmento como vacía
00001644  3239 0000237E            804              MOVE.W  (SGMPOSX2),D1             ; Cargar posición X actual del segmento2
0000164A  3439 00002380            805              MOVE.W  (SGMPOSY2),D2             ; Cargar posición Y actual del segmento2
00001650  4EB9 00001A24            806              JSR     CINDMTRZ                ; Obtener índice de celda en D0
00001656  4EB9 00001A74            807              JSR     MCLDVCIA                ; Marcar celda como vacía
0000165C                           808              
0000165C                           809              ; Actualizar posición del segmento para seguir a la cabeza
0000165C  33F9 0000237A 0000237E   810              MOVE.W  (SGMPOSX),(SGMPOSX2)    ; MARCAMOS LOS SEGMENTOS COMO SEGUNDA COORDENADA X
00001666  33F9 0000237C 00002380   811              MOVE.W  (SGMPOSY),(SGMPOSY2)    ; MARCAMOS LOS SEGMENTOS COMO SEGUNDA COORDENADA Y
00001670  33F9 0000236E 0000237A   812              MOVE.W  (CBZPOSX),(SGMPOSX)        ; Actualizar X del segmento con la X de la cabeza
0000167A  33F9 00002370 0000237C   813              MOVE.W  (CBZPOSY),(SGMPOSY)        ; Actualizar Y del segmento con la Y de la cabeza
00001684                           814  
00001684                           815              ; Marcar nueva posición del segmento como ocupada
00001684  3239 0000237A            816              MOVE.W  (SGMPOSX),D1             ; Cargar nueva posición X
0000168A  3439 0000237C            817              MOVE.W  (SGMPOSY),D2             ; Cargar nueva posición Y
00001690  4EB9 00001A24            818              JSR     CINDMTRZ                ; Obtener índice de celda en D0
00001696  4EB9 00001A8A            819              JSR     SGMOCPD                 ; Marcar celda como ocupada por segmento
0000169C                           820              
0000169C  3239 0000237E            821              MOVE.W  (SGMPOSX2),D1             ; Cargar nueva posición X DEL SEGMENTO 2
000016A2  3439 00002380            822              MOVE.W  (SGMPOSY2),D2             ; Cargar nueva posición Y DEL SEGMENTO 2
000016A8  4EB9 00001A24            823              JSR     CINDMTRZ                ; Obtener índice de celda en D0
000016AE  4EB9 00001A8A            824              JSR     SGMOCPD                 ; Marcar celda como ocupada por segmento
000016B4                           825              
000016B4  4C9F 0006                826              MOVEM.W (A7)+,D1-D2            
000016B8  4E75                     827              RTS
000016BA                           828  ;CODIGO ANTIGUO
000016BA                           829              
000016BA                           830              
000016BA                           831              
000016BA                           832  ; ------------------------------------------------------------------------------
000016BA                           833  SEGPLOT
000016BA                           834  ; DIBUJAR SEGMENTO.
000016BA                           835  ; INPUT    : NONE 
000016BA                           836  ; OUTPUT   : NONE
000016BA                           837  ; MODIFIES : NONE
000016BA                           838  ; ------------------------------------------------------------------------------
000016BA  3F00                     839              MOVE.W  D0,-(A7)
000016BC  3003                     840              MOVE.W  D3,D0
000016BE  4EB9 00001ACC            841              JSR     CNVICOOR
000016C4  2F01                     842              MOVE.L  D1,-(A7)
000016C6                           843              
000016C6  103C 0050                844              MOVE.B  #80,D0
000016CA  223C 0000FF00            845              MOVE.L  #SGMPCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL CONTORNO DEL SEGMENTO
000016D0  4E4F                     846              TRAP    #15
000016D2                           847              
000016D2  103C 0051                848              MOVE.B  #81,D0
000016D6  223C 0000AA00            849              MOVE.L  #SGMFCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL RELLENO DEL SEGMENTO
000016DC  4E4F                     850              TRAP    #15
000016DE                           851              
000016DE  103C 0057                852              MOVE.B  #87,D0
000016E2  221F                     853              MOVE.L  (A7)+,D1
000016E4  3F03                     854              MOVE.W  D3,-(A7)
000016E6  3601                     855              MOVE.W  D1,D3
000016E8  0643 0014                856              ADD.W   #SIZECLDA,D3
000016EC  3802                     857              MOVE.W  D2,D4                    ; DIBUJAMOS EL CUADRADO
000016EE  0644 0014                858              ADD.W   #SIZECLDA,D4
000016F2  4E4F                     859              TRAP    #15                     
000016F4                           860                          
000016F4  361F                     861              MOVE.W  (A7)+,D3  
000016F6  301F                     862              MOVE.W  (A7)+,D0
000016F8                           863  
000016F8  4E75                     864              RTS
000016FA                           865  
000016FA                           866  -------------------- end include --------------------
000016FA                           867              INCLUDE 'TAILSRP.X68'
000016FA                           868     
000016FA                           869  ; ------------------------------------------------------------------------------
000016FA                           870  TAILINIT
000016FA                           871  ; INICIALIZAR COLA.
000016FA                           872  ; INPUT    : NONE 
000016FA                           873  ; OUTPUT   : NONE
000016FA                           874  ; MODIFIES : NONE
000016FA                           875  ; ------------------------------------------------------------------------------
000016FA                           876  
000016FA  33FC 011D 00002376       877              MOVE.W  #(PANWIDTH/2)-CBZWIDTH-SGMWIDTH+(COLWIDTH/2),(COLPOSX)
00001702  33FC 00F0 00002378       878              MOVE.W  #(PANHEIGH/2),(COLPOSY)
0000170A                           879              
0000170A  4E75                     880              RTS
0000170C                           881              
0000170C                           882              
0000170C                           883  ; ------------------------------------------------------------------------------
0000170C                           884  TAILUPD
0000170C                           885  ; ACTUALIZAR COLA.
0000170C                           886  ; INPUT    : NONE 
0000170C                           887  ; OUTPUT   : NONE
0000170C                           888  ; MODIFIES : NONE
0000170C                           889  ; ------------------------------------------------------------------------------
0000170C  48A7 6000                890              MOVEM.W D1-D2,-(A7)
00001710                           891              
00001710                           892              ; Marca la posición actual de la cola como vacía
00001710  3239 00002376            893              MOVE.W  (COLPOSX),D1
00001716  3439 00002378            894              MOVE.W  (COLPOSY),D2
0000171C  4EB9 00001A24            895              JSR     CINDMTRZ
00001722  4EB9 00001A74            896              JSR     MCLDVCIA
00001728                           897              ; Actualiza la posición de la cola para seguir al último segmento
00001728  33F9 0000237E 00002376   898              MOVE.W  (SGMPOSX2),(COLPOSX)
00001732  33F9 00002380 00002378   899              MOVE.W  (SGMPOSY2),(COLPOSY)    ; MARCAMOS LA COOORDENADA DE LA COLA COMO COORDENADA DEL SEGMENTO 2
0000173C                           900              ; Marca la nueva posición como cola
0000173C  3239 00002376            901              MOVE.W  (COLPOSX),D1
00001742  3439 00002378            902              MOVE.W  (COLPOSY),D2
00001748  4EB9 00001A24            903              JSR     CINDMTRZ
0000174E  4EB9 00001AA0            904              JSR     COLOCPD
00001754                           905  
00001754                           906  FINUPD
00001754  4C9F 0006                907              MOVEM.W (A7)+,D1-D2
00001758  4E75                     908              RTS
0000175A                           909              
0000175A                           910  ; ------------------------------------------------------------------------------
0000175A                           911  TAILPLOT
0000175A                           912  ; DIBUJAR COLA
0000175A                           913  ; INPUT    : NONE 
0000175A                           914  ; OUTPUT   : NONE
0000175A                           915  ; MODIFIES : NONE
0000175A                           916  ; ------------------------------------------------------------------------------
0000175A                           917  
0000175A  3F00                     918              MOVE.W  D0,-(A7)
0000175C  3003                     919              MOVE.W  D3,D0
0000175E  4EB9 00001ACC            920              JSR     CNVICOOR
00001764  2F01                     921              MOVE.L  D1,-(A7)
00001766                           922              
00001766  103C 0050                923              MOVE.B  #80,D0
0000176A  223C 0000FF00            924              MOVE.L  #COLPCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL CONTORNO DE LA COLA
00001770  4E4F                     925              TRAP    #15
00001772                           926              
00001772  103C 0051                927              MOVE.B  #81,D0
00001776  223C 0000AA00            928              MOVE.L  #COLFCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL RELLENO DE LA COLA
0000177C  4E4F                     929              TRAP    #15
0000177E                           930              
0000177E  103C 0057                931              MOVE.B  #87,D0
00001782  221F                     932              MOVE.L  (A7)+,D1
00001784  3F03                     933              MOVE.W  D3,-(A7)
00001786  3601                     934              MOVE.W  D1,D3
00001788  0643 0014                935              ADD.W   #SIZECLDA,D3
0000178C  3802                     936              MOVE.W  D2,D4                    
0000178E  0644 0014                937              ADD.W   #SIZECLDA,D4
00001792  4E4F                     938              TRAP    #15                    ; DIBUJAMOS EL CUADRADO 
00001794                           939                          
00001794  361F                     940              MOVE.W  (A7)+,D3  
00001796  301F                     941              MOVE.W  (A7)+,D0
00001798                           942  
00001798  4E75                     943              RTS
0000179A                           944  
0000179A                           945  
0000179A                           946  -------------------- end include --------------------
0000179A                           947              INCLUDE 'APPLE.X68'
0000179A                           948     
0000179A                           949  ; ------------------------------------------------------------------------------
0000179A                           950  APPLEINIT
0000179A                           951  ; Inicializa la manzana en una posición aleatoria
0000179A                           952  ; INPUT    : NONE 
0000179A                           953  ; OUTPUT   : NONE
0000179A                           954  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
0000179A                           955  ; ------------------------------------------------------------------------------
0000179A                           956  
0000179A                           957              ; Llama a la función para generar la posición aleatoria
0000179A  4EB9 00001888            958              JSR     GENPOSMNZ
000017A0                           959  
000017A0                           960              ; Convierte las coordenadas de la manzana a índice de la matriz
000017A0  4EB9 00001A24            961              JSR     CINDMTRZ
000017A6                           962  
000017A6                           963              ; Verifica si la celda está ocupada o libre
000017A6                           964  CHECK:
000017A6  4EB9 00001B08            965              JSR     CHECKCLD
000017AC  6700 0010                966              BEQ     MARKMNZ                  ; Si está libre
000017B0                           967  
000017B0                           968              ; Si la celda está ocupada
000017B0  4EB9 00001888            969              JSR     GENPOSMNZ                ; Genera una nueva posición
000017B6  4EB9 00001A24            970              JSR     CINDMTRZ                 ; Convierte las nuevas coordenadas
000017BC  60E8                     971              BRA     CHECK                    ; Repite la comprobación
000017BE                           972  
000017BE                           973  MARKMNZ:
000017BE                           974              ; Marca la celda como ocupada con la manzana (estado 4)
000017BE  4EB9 00001AB6            975              JSR     MNZOCPD
000017C4                           976  
000017C4                           977              ; Dibuja la manzana en la pantalla
000017C4  4EB9 0000180A            978              JSR     APPLEPLOT
000017CA                           979  
000017CA  4E75                     980              RTS
000017CC                           981  
000017CC                           982  ; ------------------------------------------------------------------------------
000017CC                           983  APPLEUPD
000017CC                           984  ; Actualiza la posición de la manzana cuando la serpiente come
000017CC                           985  ; INPUT    : NONE 
000017CC                           986  ; OUTPUT   : NONE
000017CC                           987  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
000017CC                           988  ; ------------------------------------------------------------------------------
000017CC                           989  
000017CC                           990  
000017CC                           991              ; Convierte las coordenadas actuales de la manzana a índice de la matriz
000017CC  4EB9 00001A24            992              JSR     CINDMTRZ
000017D2                           993  
000017D2                           994              ; Marca la celda anterior como vacía
000017D2  4EB9 00001A74            995              JSR     MCLDVCIA
000017D8                           996  
000017D8                           997              ; Llama a la función para generar una nueva posición aleatoria
000017D8  4EB9 00001888            998              JSR     GENPOSMNZ
000017DE                           999  
000017DE                          1000              ; Convierte las nuevas coordenadas de la manzana a índice de la matriz
000017DE  4EB9 00001A24           1001              JSR     CINDMTRZ
000017E4                          1002  
000017E4                          1003  CHCKUPDT:
000017E4  4EB9 00001B08           1004              JSR     CHECKCLD             ; Verifica si la celda está libre
000017EA  6700 0010               1005              BEQ     NEWMNZ               ; Si está libre
000017EE                          1006  
000017EE                          1007              ; Si la celda está ocupada
000017EE  4EB9 00001888           1008              JSR     GENPOSMNZ            ; Genera una nueva posición
000017F4  4EB9 00001A24           1009              JSR     CINDMTRZ             ; Convierte las nuevas coordenadas
000017FA  60E8                    1010              BRA     CHCKUPDT             ; Repite la comprobación
000017FC                          1011  
000017FC                          1012  NEWMNZ:
000017FC                          1013              ; Marca la celda como ocupada con la manzana (estado 4)
000017FC  4EB9 00001AB6           1014              JSR     MNZOCPD
00001802                          1015  
00001802                          1016              ; Dibuja la nueva manzana en la pantalla
00001802  4EB9 0000180A           1017              JSR     APPLEPLOT
00001808                          1018  
00001808  4E75                    1019              RTS
0000180A                          1020              
0000180A                          1021  ; ------------------------------------------------------------------------------
0000180A                          1022  APPLEPLOT
0000180A                          1023  ; Dibuja la manzana
0000180A                          1024  ; INPUT    : NONE 
0000180A                          1025  ; OUTPUT   : NONE
0000180A                          1026  ; MODIFIES : NONE
0000180A                          1027  ; ------------------------------------------------------------------------------
0000180A  3F00                    1028              MOVE.W  D0,-(A7)
0000180C  3003                    1029              MOVE.W  D3,D0
0000180E  4EB9 00001ACC           1030              JSR     CNVICOOR
00001814  2F01                    1031              MOVE.L  D1,-(A7)                ; PRIMERO DEBEMOS DIBUJAR EL FONDO Y LUEGO LA MANZANA
00001816                          1032              
00001816  103C 0050               1033              MOVE.B  #80,D0
0000181A  223C 0090EE90           1034              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
00001820  4E4F                    1035              TRAP    #15
00001822                          1036              
00001822  103C 0051               1037              MOVE.B  #81,D0
00001826  223C 0090EE90           1038              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
0000182C  4E4F                    1039              TRAP    #15
0000182E                          1040              
0000182E  103C 0057               1041              MOVE.B  #87,D0
00001832  221F                    1042              MOVE.L  (A7)+,D1
00001834  3F03                    1043              MOVE.W  D3,-(A7)
00001836  3601                    1044              MOVE.W  D1,D3
00001838  0643 0014               1045              ADD.W   #SIZECLDA,D3
0000183C  3802                    1046              MOVE.W  D2,D4                    ; DIBUJAMOS EL CUADRADO
0000183E  0644 0014               1047              ADD.W   #SIZECLDA,D4
00001842  4E4F                    1048              TRAP    #15                     
00001844                          1049                          
00001844  361F                    1050              MOVE.W  (A7)+,D3  
00001846  301F                    1051              MOVE.W  (A7)+,D0
00001848                          1052  
00001848  3F00                    1053              MOVE.W  D0,-(A7)
0000184A  3003                    1054              MOVE.W  D3,D0
0000184C  4EB9 00001ACC           1055              JSR     CNVICOOR
00001852  2F01                    1056              MOVE.L  D1,-(A7)
00001854                          1057              
00001854  103C 0050               1058              MOVE.B  #80,D0
00001858  223C 0000AAFF           1059              MOVE.L  #MNZPCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL CONTORNO DE LA MANZANA
0000185E  4E4F                    1060              TRAP    #15
00001860                          1061              
00001860  103C 0051               1062              MOVE.B  #81,D0
00001864  223C 000000FF           1063              MOVE.L  #MNZFCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL RELLENO DE LA MANZANA
0000186A  4E4F                    1064              TRAP    #15
0000186C                          1065              
0000186C  103C 0058               1066              MOVE.B  #88,D0
00001870  221F                    1067              MOVE.L  (A7)+,D1
00001872  3F03                    1068              MOVE.W  D3,-(A7)
00001874  3601                    1069              MOVE.W  D1,D3
00001876  0643 0014               1070              ADD.W   #SIZECLDA,D3
0000187A  3802                    1071              MOVE.W  D2,D4                    ; DIBUJAMOS EL CIRCULO
0000187C  0644 0014               1072              ADD.W   #SIZECLDA,D4
00001880  4E4F                    1073              TRAP    #15                     
00001882                          1074                          
00001882  361F                    1075              MOVE.W  (A7)+,D3  
00001884  301F                    1076              MOVE.W  (A7)+,D0
00001886                          1077  
00001886                          1078  
00001886  4E75                    1079              RTS
00001888                          1080  ; ----------------------------------------------------------------------------
00001888                          1081  GENPOSMNZ
00001888                          1082  ; Genera una posición aleatoria para la manzana
00001888                          1083  ; INPUT: NONE
00001888                          1084  ; OUTPUT:
00001888                          1085  ; MODIFIES: MNZPOSX, MNZPOSY
00001888                          1086  ; ----------------------------------------------------------------------------
00001888                          1087  
00001888  48E7 8000               1088              MOVEM.L D0,-(A7)
0000188C                          1089  
0000188C                          1090              ; Genera la coordenada X aleatoria
0000188C  4EB8 11D0               1091              JSR     UTLRAND
00001890  0240 001F               1092              ANDI.W  #NUMCLMNS-1, D0       ; Asegura que esté en [0, NUMCLMNS-1]
00001894  C0FC 0014               1093              MULU    #SIZECLDA, D0         ; Escala al tamaño real de las celdas
00001898  3200                    1094              MOVE.W  D0,D1
0000189A  33C0 0000236A           1095              MOVE.W  D0, MNZPOSX           ; Guarda la coordenada X generada
000018A0                          1096              
000018A0                          1097              ; Generar coordenada Y aleatoria
000018A0  4EB8 11D0               1098              JSR     UTLRAND
000018A4  0240 0017               1099              ANDI.W  #NUMFILAS-1, D0       ; Asegura que esté en el rango [0, NUMFILAS-1]
000018A8  C0FC 0014               1100              MULU    #SIZECLDA, D0         ; Escala al tamaño real de las celdas
000018AC  3400                    1101              MOVE.W  D0,D2
000018AE  33C0 0000236C           1102              MOVE.W  D0, MNZPOSY           ; Guarda la coordenada Y generada
000018B4                          1103              
000018B4  4CDF 0001               1104              MOVEM.L (A7)+,D0
000018B8  4E75                    1105              RTS 
000018BA                          1106  
000018BA                          1107  
000018BA                          1108  
000018BA                          1109  
000018BA                          1110  
000018BA                          1111  
000018BA                          1112  -------------------- end include --------------------
000018BA                          1113              INCLUDE 'SCORE.X68'
000018BA                          1114     
000018BA                          1115  ; ------------------------------------------------------------------------------
000018BA                          1116  SCOINIT
000018BA                          1117  ; INICIALIZAR MARCADOR.
000018BA                          1118  ; INPUT    : NONE 
000018BA                          1119  ; OUTPUT   : NONE
000018BA                          1120  ; MODIFIES : NONE
000018BA                          1121  ; ------------------------------------------------------------------------------
000018BA  4279 00002382           1122              CLR.W   (JGOPNTS)
000018C0  4279 00002384           1123              CLR.W   (JGOTIM)
000018C6  33FC 0096 00002384      1124              MOVE.W  #150,(JGOTIM)
000018CE  4E75                    1125              RTS
000018D0                          1126              
000018D0                          1127  ; ------------------------------------------------------------------------------
000018D0                          1128  SCOUPD
000018D0                          1129  ; ACTUALIZAR MARCADOR.
000018D0                          1130  ; INPUT    : NONE 
000018D0                          1131  ; OUTPUT   : NONE
000018D0                          1132  ; MODIFIES : NONE
000018D0                          1133  ; ------------------------------------------------------------------------------
000018D0                          1134              
000018D0  48E7 8000               1135              MOVEM.L D0,-(A7)
000018D4                          1136              
000018D4                          1137              ;Incrementa el marcador
000018D4  3039 00002382           1138              MOVE.W  (JGOPNTS),D0
000018DA  0640 000A               1139              ADD.W  #10,D0
000018DE  33C0 00002382           1140              MOVE.W  D0,(JGOPNTS)
000018E4                          1141              
000018E4  4CDF 0001               1142              MOVEM.L (A7)+,D0
000018E8                          1143  
000018E8  4E75                    1144              RTS
000018EA                          1145              
000018EA                          1146  ; ------------------------------------------------------------------------------
000018EA                          1147  SCOPLOT
000018EA                          1148  ; DIBUJAR MARCADOR.
000018EA                          1149  ; INPUT    : NONE 
000018EA                          1150  ; OUTPUT   : NONE
000018EA                          1151  ; MODIFIES : NONE
000018EA                          1152  ; ------------------------------------------------------------------------------
000018EA  48E7 C040               1153             MOVEM.L  D0-D1/A1,-(A7)
000018EE                          1154             ; SET COLOR DE FONDO
000018EE  103C 0051               1155             MOVE.B   #81,D0
000018F2  223C 0090EE90           1156             MOVE.L   #COLFND,D1
000018F8  4E4F                    1157             TRAP     #15
000018FA                          1158           
000018FA                          1159             ; PONEMOS EN LA ESQUINA EL APUNTADOR
000018FA  4241                    1160             CLR.W    D1
000018FC  103C 000B               1161             MOVE.B   #11,D0
00001900  4E4F                    1162             TRAP     #15
00001902                          1163             ; DIBUJAR LINEA DE PUNTUACIÓN
00001902  43F9 0000193A           1164              LEA     .TXT1,A1
00001908  4281                    1165              CLR.L   D1
0000190A  3239 00002382           1166              MOVE.W  (JGOPNTS),D1
00001910  103C 0011               1167              MOVE.B  #17,D0
00001914  4E4F                    1168              TRAP    #15
00001916                          1169              
00001916                          1170             ; BAJAMOS UNA LÍNEA 
00001916  323C 0001               1171             MOVE.W   #1,D1
0000191A  103C 000B               1172             MOVE.B   #11,D0
0000191E  4E4F                    1173             TRAP     #15
00001920                          1174              ; DIBUJAR LINEA DE TIEMPO
00001920  43F9 00001944           1175              LEA     .TXT2,A1
00001926  4281                    1176              CLR.L   D1
00001928  3239 00002384           1177              MOVE.W  (JGOTIM),D1
0000192E  103C 0011               1178              MOVE.B  #17,D0
00001932  4E4F                    1179              TRAP    #15
00001934                          1180  
00001934                          1181              
00001934  4CDF 0203               1182              MOVEM.L (A7)+,D0-D1/A1
00001938  4E75                    1183              RTS
0000193A                          1184  
0000193A                          1185  
0000193A= 50 55 4E 54 4F 53 ...   1186  .TXT1       DC.B    'PUNTOS : ',0
00001944= 54 49 45 4D 50 4F ...   1187  .TXT2       DC.B    'TIEMPO : ',0
0000194E                          1188              DS.W    0
0000194E                          1189  
0000194E                          1190  
0000194E                          1191  
0000194E                          1192  
0000194E                          1193  
0000194E                          1194  
0000194E                          1195  -------------------- end include --------------------
0000194E                          1196              INCLUDE 'GAME.X68'
0000194E                          1197  ; ==============================================================================
0000194E                          1198  ; GAME MANAGEMENT
0000194E                          1199  ; ==============================================================================
0000194E                          1200  
0000194E                          1201  ; ------------------------------------------------------------------------------
0000194E                          1202  GAMINIT
0000194E                          1203  ; INITIALIZES GAME.
0000194E                          1204  ; INPUT    : NONE
0000194E                          1205  ; OUTPUT   : NONE
0000194E                          1206  ; MODIFIES : NONE
0000194E                          1207  ; ------------------------------------------------------------------------------
0000194E  4EB9 00001992           1208              JSR     MTZINIT
00001954  4EB8 12EE               1209              JSR     HEADINIT
00001958  4EB8 15FA               1210              JSR     SEGINIT
0000195C  4EB8 16FA               1211              JSR     TAILINIT
00001960  4EB8 18BA               1212              JSR     SCOINIT
00001964  6000 FE34               1213              BRA     APPLEINIT
00001968                          1214  
00001968                          1215  ; ------------------------------------------------------------------------------
00001968                          1216  GAMUPD
00001968                          1217  ; UPDATES THE GAME
00001968                          1218  ; INPUT    : NONE
00001968                          1219  ; OUTPUT   : NONE
00001968                          1220  ; MODIFIES : NONE
00001968                          1221  ; ------------------------------------------------------------------------------
00001968  4EB8 170C               1222              JSR     TAILUPD
0000196C  4EB8 1628               1223              JSR     SEGUPD
00001970  4EB8 130E               1224              JSR     HEADUPD
00001974  6000 01EE               1225              BRA     MTZUPD       
00001978                          1226  
00001978                          1227  ; ------------------------------------------------------------------------------
00001978                          1228  GAMPLOT
00001978                          1229  ; PLOTS THE GAME
00001978                          1230  ; INPUT    : NONE
00001978                          1231  ; OUTPUT   : NONE
00001978                          1232  ; MODIFIES : NONE
00001978                          1233  ; ------------------------------------------------------------------------------
00001978  4EB8 1576               1234              JSR    HEADPLOT
0000197C  4EB8 16BA               1235              JSR    SEGPLOT
00001980  4EB8 175A               1236              JSR    TAILPLOT
00001984  4EB8 180A               1237              JSR    APPLEPLOT
00001988  4EB9 00001D68           1238              JSR    MTZPLOT
0000198E  6000 FF5A               1239              BRA    SCOPLOT
00001992                          1240  
00001992                          1241  
00001992                          1242  
00001992                          1243  
00001992                          1244  
00001992                          1245  -------------------- end include --------------------
00001992                          1246              INCLUDE 'MATRIZ.X68'
00001992                          1247  ; ----------------------------------------------------------------------------
00001992                          1248  ; MATRIZ
00001992                          1249  ; ----------------------------------------------------------------------------
00001992                          1250  
00001992                          1251  ;-----------------------------------------------------------------------------
00001992                          1252  MTZINIT
00001992                          1253  ; INICIALIZA LA MATRIZ, AL PRINCIPIO ESTÁ VACÍA
00001992                          1254  ; INPUT    : NONE
00001992                          1255  ; OUTPUT   : NONE
00001992                          1256  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001992                          1257  ; ----------------------------------------------------------------------------
00001992                          1258              
00001992  48A7 E080               1259              MOVEM.W D0-D2/A0,-(A7)
00001996                          1260              
00001996  41F9 000023A2           1261              LEA ESTDCLDS,A0       ; Apunta al inicio de ESTDCLDS
0000199C  303C 0300               1262              MOVE.W #TCELDAS,D0    ; Número total de celdas
000019A0                          1263  
000019A0                          1264  CLNCLDS:
000019A0  4218                    1265              CLR.B (A0)+            ; Coloca 0 en cada celda
000019A2  5340                    1266              SUBI.W #1, D0          ; Decrementa el contador de celdas
000019A4  66FA                    1267              BNE CLNCLDS            ; Repite hasta que esten vacías
000019A6                          1268              
000019A6                          1269              
000019A6  3239 0000236E           1270              MOVE.W  (CBZPOSX),D1             ; VEMOS LA POSICION INICIAL DE LA CABEZA             
000019AC  3439 00002370           1271              MOVE.W  (CBZPOSY),D2
000019B2  4EB9 00001A24           1272              JSR     CINDMTRZ
000019B8  4EB9 00001A5E           1273              JSR     CBZOCPD                 ; MARCAMOS LA POSICIÓN COMO CABEZA
000019BE                          1274              
000019BE  3239 0000237A           1275              MOVE.W  (SGMPOSX),D1
000019C4  3439 0000237C           1276              MOVE.W  (SGMPOSY),D2             ; VEMOS LA POSICIÓN DEL SEGMENTO
000019CA  4EB9 00001A24           1277              JSR     CINDMTRZ
000019D0  4EB9 00001A8A           1278              JSR     SGMOCPD                 ; MARCAMOS LA POSICIÓN DEL SEGMENTO
000019D6                          1279              
000019D6  3239 0000237E           1280              MOVE.W  (SGMPOSX2),D1
000019DC  3439 00002380           1281              MOVE.W  (SGMPOSY2),D2            ; VEMOS LA POSICIÓN DEL SEGMENTO 2
000019E2  4EB9 00001A24           1282              JSR     CINDMTRZ
000019E8  4EB9 00001A8A           1283              JSR     SGMOCPD                 ; MARCAMOS LA POSICION DEL SEGMENTO 2
000019EE                          1284              
000019EE  3239 00002376           1285              MOVE.W  (COLPOSX),D1             ; VEMOS LA POSICIÓN DE LA COLA
000019F4  3439 00002378           1286              MOVE.W  (COLPOSY),D2
000019FA  4EB9 00001A24           1287              JSR     CINDMTRZ
00001A00  4EB9 00001AA0           1288              JSR     COLOCPD                 ; MARCAMOS LA POSICIÓN DE LA COLA
00001A06                          1289              
00001A06  3239 0000236A           1290              MOVE.W  (MNZPOSX),D1             ; VEMOS LA POSICIÓN INICIAL DE LA MANZANA
00001A0C  3439 0000236C           1291              MOVE.W  (MNZPOSY),D2
00001A12  4EB9 00001A24           1292              JSR     CINDMTRZ
00001A18  4EB9 00001AB6           1293              JSR     MNZOCPD                 ; MARCAMOS LA POSICIÓN DE LA MANZANA
00001A1E                          1294              
00001A1E                          1295              
00001A1E  4C9F 0107               1296              MOVEM.W (A7)+,D0-D2/A0
00001A22                          1297  
00001A22  4E75                    1298              RTS
00001A24                          1299  
00001A24                          1300  ;-----------------------------------------------------------------------------
00001A24                          1301  CINDMTRZ
00001A24                          1302  ; CALCULA EL ÍNDICE DE UNA CELDA
00001A24                          1303  ; INPUT    : D1 = coordenada X pantalla, D2 = coordenada Y pantalla
00001A24                          1304  ; OUTPUT   : D0 = índice de la celda en ESTDCLDS
00001A24                          1305  ; MODIFIES : NONE
00001A24                          1306  ; ----------------------------------------------------------------------------
00001A24                          1307  
00001A24  48A7 7000               1308               MOVEM.W D1-D3,-(A7)     ; Guarda los registros D1-D3 en la pila
00001A28                          1309  
00001A28                          1310              ; Divide X por SIZECLDA
00001A28  3601                    1311              MOVE.W  D1,D3          ; Copia X a D3
00001A2A  4241                    1312              CLR.W   D1              ; Inicializa el cociente de X
00001A2C                          1313  
00001A2C  B67C 0014               1314  DIVX:       CMP.W   #SIZECLDA,D3    ; Compara D3 con SIZECLDA
00001A30  6D00 000A               1315              BLT     ENDDIVX         ; Si D3 < SIZECLDA, salta a ENDDIVX
00001A34  0443 0014               1316              SUB.W   #SIZECLDA,D3   ; Resta SIZECLDA de D3
00001A38  5241                    1317              ADDQ.W  #1,D1          ; Incrementa el cociente de X
00001A3A  60F0                    1318              BRA     DIVX            ; Repite el bucle
00001A3C                          1319  
00001A3C                          1320  ENDDIVX:
00001A3C                          1321  
00001A3C                          1322              ; Divide Y por SIZECLDA
00001A3C  3602                    1323              MOVE.W  D2,D3          ; Copia Y a D3
00001A3E  4242                    1324              CLR.W   D2              ; Inicializa el cociente de Y
00001A40                          1325  
00001A40  B67C 0014               1326  DIVY:       CMP.W   #SIZECLDA,D3    ; Compara D3 con SIZECLDA
00001A44  6D00 000A               1327              BLT     ENDDIVY         ; Si D3 < SIZECLDA, salta a ENDDIVY
00001A48  0443 0014               1328              SUB.W   #SIZECLDA,D3   ; Resta SIZECLDA de D3
00001A4C  5242                    1329              ADDQ.W  #1, D2          ; Incrementa el cociente de Y
00001A4E  60F0                    1330              BRA     DIVY            ; Repite el bucle
00001A50                          1331  
00001A50                          1332  ENDDIVY:
00001A50                          1333  
00001A50                          1334              ; Calcula el índice
00001A50  4240                    1335              CLR.W   D0
00001A52  3002                    1336              MOVE.W  D2, D0          ; D0 = Y_CELDA
00001A54  EB40                    1337              ASL.W   #5, D0          ; D0 = Y_CELDA * NUMCLMNS (32 = 2^5)
00001A56  D041                    1338              ADD.W   D1, D0          ; D0 = Y_CELDA * NUMCLMNS + X_CELDA
00001A58                          1339  
00001A58  4C9F 000E               1340              MOVEM.W (A7)+,D1-D3     ; Restaura los registros D1-D3 desde la pila
00001A5C                          1341  
00001A5C  4E75                    1342              RTS  
00001A5E                          1343              
00001A5E                          1344  ;-----------------------------------------------------------------------------
00001A5E                          1345  CBZOCPD
00001A5E                          1346  ; MARCA UNA CELDA COMO OCUPADA POR LA CABEZA
00001A5E                          1347  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A5E                          1348  ; OUTPUT   : NONE
00001A5E                          1349  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A5E                          1350  ; ----------------------------------------------------------------------------
00001A5E                          1351  
00001A5E  48A7 0080               1352              MOVEM.W A0,-(A7)
00001A62                          1353  
00001A62  41F9 000023A2           1354              LEA     ESTDCLDS,A0                ; Dirección de la matriz en A0
00001A68  11BC 0003 0000          1355              MOVE.B  #3,(A0, D0.W)           ; Marca la celda como ocupada
00001A6E                          1356              
00001A6E  4C9F 0100               1357              MOVEM.W (A7)+,A0
00001A72                          1358              
00001A72  4E75                    1359              RTS
00001A74                          1360              
00001A74                          1361              
00001A74                          1362              
00001A74                          1363             
00001A74                          1364  ;-----------------------------------------------------------------------------
00001A74                          1365  MCLDVCIA
00001A74                          1366  ; MARCA UNA CELDA COMO VACÍA
00001A74                          1367  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A74                          1368  ; OUTPUT   : NONE
00001A74                          1369  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A74                          1370  ; ----------------------------------------------------------------------------
00001A74                          1371  
00001A74  48A7 0080               1372              MOVEM.W A0,-(A7)
00001A78                          1373  
00001A78  41F9 000023A2           1374              LEA     ESTDCLDS,A0                ; Direccion de la matriz en A0
00001A7E  11BC 0000 0000          1375              MOVE.B  #0,(A0,D0.W)           ; Marca la celda como vacía
00001A84                          1376              
00001A84  4C9F 0100               1377              MOVEM.W (A7)+,A0
00001A88                          1378              
00001A88  4E75                    1379              RTS
00001A8A                          1380  
00001A8A                          1381  ;-----------------------------------------------------------------------------
00001A8A                          1382  SGMOCPD
00001A8A                          1383  ; MARCA UNA CELDA COMO OCUPADA POR EL SEGMENTO
00001A8A                          1384  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A8A                          1385  ; OUTPUT   : NONE
00001A8A                          1386  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A8A                          1387  ; ----------------------------------------------------------------------------
00001A8A                          1388  
00001A8A  48A7 0080               1389              MOVEM.W A0,-(A7)
00001A8E                          1390  
00001A8E  41F9 000023A2           1391              LEA ESTDCLDS,A0                ; Dirección de la matriz en A0
00001A94  11BC 0002 0000          1392              MOVE.B #2,(A0,D0.W)           ; Marca la celda como ocupada
00001A9A                          1393              
00001A9A  4C9F 0100               1394              MOVEM.W (A7)+,A0
00001A9E                          1395              
00001A9E  4E75                    1396              RTS
00001AA0                          1397              
00001AA0                          1398  ;-----------------------------------------------------------------------------
00001AA0                          1399  COLOCPD
00001AA0                          1400  ; MARCA UNA CELDA COMO OCUPADA POR LA COLA
00001AA0                          1401  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001AA0                          1402  ; OUTPUT   : NONE
00001AA0                          1403  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001AA0                          1404  ; ----------------------------------------------------------------------------
00001AA0                          1405  
00001AA0  48A7 0080               1406              MOVEM.W A0,-(A7)
00001AA4                          1407  
00001AA4  41F9 000023A2           1408              LEA ESTDCLDS,A0                ; Dirección de la matriz en A0
00001AAA  11BC 0001 0000          1409              MOVE.B #1,(A0,D0.W)           ; Marca la celda como ocupada
00001AB0                          1410              
00001AB0  4C9F 0100               1411              MOVEM.W (A7)+,A0
00001AB4                          1412              
00001AB4  4E75                    1413              RTS
00001AB6                          1414  
00001AB6                          1415  
00001AB6                          1416  ;-----------------------------------------------------------------------------
00001AB6                          1417  MNZOCPD
00001AB6                          1418  ; MARCA UNA CELDA COMO OCUPADA POR LA MANZANA
00001AB6                          1419  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001AB6                          1420  ; OUTPUT   : NONE
00001AB6                          1421  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001AB6                          1422  ; ----------------------------------------------------------------------------
00001AB6                          1423  
00001AB6  48A7 0080               1424              MOVEM.W A0,-(A7)
00001ABA                          1425  
00001ABA  41F9 000023A2           1426              LEA ESTDCLDS,A0                ; Dirección de la matriz en A0
00001AC0  11BC 0004 0000          1427              MOVE.B #4,(A0,D0.W)           ; Marca la celda como ocupada
00001AC6                          1428              
00001AC6  4C9F 0100               1429              MOVEM.W (A7)+,A0
00001ACA                          1430              
00001ACA  4E75                    1431              RTS
00001ACC                          1432  
00001ACC                          1433              
00001ACC                          1434  ;-----------------------------------------------------------------------------
00001ACC                          1435  CNVICOOR
00001ACC                          1436  ; Convierte un índice de celda a coordenadas de pantalla (X, Y)
00001ACC                          1437  ; INPUT    : D0 = índice de la celda en ESTADO_CELDAS
00001ACC                          1438  ; OUTPUT   : D1 = coordenada X, D2 = coordenada Y
00001ACC                          1439  ; MODIFIES : NONE
00001ACC                          1440  ; ----------------------------------------------------------------------------
00001ACC                          1441  
00001ACC  48A7 9800               1442              MOVEM.W D0/D3-D4,-(A7)
00001AD0                          1443  
00001AD0  3400                    1444              MOVE.W  D0,D2         ; Copia índice a D2 para calcular la fila
00001AD2  EA4A                    1445              LSR.W   #5,D2         ; D2 = índice / NUM_COLUMNAS (32 = 2^5)
00001AD4  3200                    1446              MOVE.W  D0,D1         ; Copia índice a D1 para calcular la columna
00001AD6  C27C 001F               1447              AND.W   #$1F,D1       ; D1 = índice % NUM_COLUMNAS (31 = 0x1F) (CREO)
00001ADA                          1448  
00001ADA                          1449              ; Multiplica por TAMAÑO_CELDA = 10
00001ADA  363C 0014               1450              MOVE.W  #SIZECLDA, D3
00001ADE  3801                    1451              MOVE.W  D1,D4         ; Copia D1 para multiplicar por 10
00001AE0  4241                    1452              CLR.W   D1            ; Inicializa resultado
00001AE2                          1453  
00001AE2                          1454  
00001AE2                          1455  MULTLOOPX: 
00001AE2  B87C 0000               1456              CMP.W   #0,D4        ; ¿Quedan iteraciones?
00001AE6  6700 0008               1457              BEQ     ENDMULTX
00001AEA  D243                    1458              ADD.W   D3,D1         ; Suma TAMANO_CELDA (10) repetidamente
00001AEC                          1459  
00001AEC  5344                    1460              SUBQ.W  #1,D4         ; Cuenta las iteraciones restantes
00001AEE  60F2                    1461              BRA     MULTLOOPX     ; Repite mientras no sea 0
00001AF0                          1462  ENDMULTX: 
00001AF0  3802                    1463              MOVE.W  D2,D4         ; Copia D2 para multiplicar por 10
00001AF2  4242                    1464              CLR.W   D2            ; Inicializa resultado
00001AF4                          1465  
00001AF4                          1466  MULTLOOPY: 
00001AF4  B87C 0000               1467              CMP.W   #0,D4        ; ¿Quedan iteraciones?
00001AF8  6700 0008               1468              BEQ     ENDMULTY
00001AFC  D443                    1469              ADD.W   D3,D2         ; Suma TAMANO_CELDA (10) repetidamente
00001AFE  5344                    1470              SUBQ.W  #1,D4         ; Cuenta las iteraciones restantes
00001B00  60F2                    1471              BRA     MULTLOOPY     ; Repite mientras no sea 0
00001B02                          1472  ENDMULTY:
00001B02  4C9F 0019               1473              MOVEM.W (A7)+,D0/D3-D4
00001B06                          1474  
00001B06  4E75                    1475              RTS
00001B08                          1476  
00001B08                          1477  ; ----------------------------------------------------------------------------
00001B08                          1478  CHECKCLD
00001B08                          1479  ; INPUT: D0 = índice de la celda
00001B08                          1480  ; OUTPUT: D0 = 0 si está vacía, 1 si está ocupada
00001B08                          1481  ; MODIFIES: Ninguno
00001B08                          1482  ; ----------------------------------------------------------------------------
00001B08                          1483  
00001B08  41F9 000023A2           1484              LEA     ESTDCLDS,A0    ; Carga la dirección de la matriz ESTDCLDS
00001B0E  1230 0000               1485              MOVE.B  (A0,D0.W),D1   ; Carga el estado de la celda en D1
00001B12  B23C 0000               1486              CMP.B   #0,D1          ; Compara si está vacía (0)
00001B16  6700 0008               1487              BEQ     CLDFREE         ; Si está vacía
00001B1A  303C 0001               1488              MOVE.W  #1,D0          ; Si está ocupada, devuelve 1 (ocupada)
00001B1E                          1489  
00001B1E  4E75                    1490              RTS
00001B20                          1491  
00001B20                          1492  CLDFREE:
00001B20  303C 0000               1493              MOVE.W  #0,D0                 ; Devuelve 0 (libre)
00001B24                          1494  
00001B24  4E75                    1495              RTS
00001B26                          1496  
00001B26                          1497  
00001B26                          1498  ;-----------------------------------------------------------------------------
00001B26                          1499  FONPLOT
00001B26                          1500  ; DIBUJADO DEL FONDO
00001B26                          1501  ; INPUT    : NONE
00001B26                          1502  ; OUTPUT   : NONE
00001B26                          1503  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001B26                          1504  ; ----------------------------------------------------------------------------
00001B26                          1505  
00001B26  3F00                    1506              MOVE.W  D0,-(A7)
00001B28  3003                    1507              MOVE.W  D3,D0
00001B2A  4EB8 1ACC               1508              JSR     CNVICOOR
00001B2E  2F01                    1509              MOVE.L  D1,-(A7)
00001B30                          1510              
00001B30  103C 0050               1511              MOVE.B  #80,D0
00001B34  223C 0090EE90           1512              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
00001B3A  4E4F                    1513              TRAP    #15
00001B3C                          1514              
00001B3C  103C 0051               1515              MOVE.B  #81,D0
00001B40  223C 0090EE90           1516              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
00001B46  4E4F                    1517              TRAP    #15
00001B48                          1518              
00001B48  103C 0057               1519              MOVE.B  #87,D0
00001B4C  221F                    1520              MOVE.L  (A7)+,D1
00001B4E  3F03                    1521              MOVE.W  D3,-(A7)
00001B50  3601                    1522              MOVE.W  D1,D3
00001B52  0643 0014               1523              ADD.W   #SIZECLDA,D3
00001B56  3802                    1524              MOVE.W  D2,D4                    ; DIBUJAMOS EL CUADRADO
00001B58  0644 0014               1525              ADD.W   #SIZECLDA,D4
00001B5C  4E4F                    1526              TRAP    #15                     
00001B5E                          1527                          
00001B5E  361F                    1528              MOVE.W  (A7)+,D3  
00001B60  301F                    1529              MOVE.W  (A7)+,D0
00001B62  4E75                    1530              RTS         
00001B64                          1531  
00001B64                          1532  
00001B64                          1533  
00001B64                          1534  ;-----------------------------------------------------------------------------
00001B64                          1535  MTZUPD
00001B64                          1536  ; ACTUALIZA LA MATRIZ CASILLA A CASILLA
00001B64                          1537  ; INPUT    : NONE
00001B64                          1538  ; OUTPUT   : NONE
00001B64                          1539  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001B64                          1540  ; ----------------------------------------------------------------------------
00001B64                          1541  
00001B64                          1542  
00001B64  48E7 F1C0               1543              MOVEM.L D0-D3/D7/A0-A1,-(A7)
00001B68                          1544              
00001B68  41F9 000023A2           1545              LEA ESTDCLDS,A0       ; Apunta al inicio de ESTDCLDS
00001B6E  303C 0300               1546              MOVE.W #TCELDAS,D0    ; Número total de celdas
00001B72                          1547  
00001B72                          1548  .CLNCLDS:
00001B72  4218                    1549              CLR.B (A0)+            ; Coloca 0 en cada celda
00001B74  5340                    1550              SUBI.W #1,D0          ; Decrementa el contador de celdas
00001B76  66FA                    1551              BNE .CLNCLDS           ; Repite hasta que esten vacías
00001B78                          1552              
00001B78                          1553              
00001B78  3239 0000236E           1554              MOVE.W  (CBZPOSX),D1             ; VEMOS LA POSICION INICIAL DE LA CABEZA             
00001B7E  3439 00002370           1555              MOVE.W  (CBZPOSY),D2
00001B84  4EB8 1A24               1556              JSR     CINDMTRZ
00001B88  4EB8 1A5E               1557              JSR     CBZOCPD                 ; MARCAMOS LA POSICIÓN COMO CABEZA
00001B8C                          1558              
00001B8C  3239 0000237A           1559              MOVE.W  (SGMPOSX),D1
00001B92  3439 0000237C           1560              MOVE.W  (SGMPOSY),D2             ; VEMOS LA POSICIÓN INICIAL DEL SEGMENTO
00001B98  4EB8 1A24               1561              JSR     CINDMTRZ
00001B9C  4EB8 1A8A               1562              JSR     SGMOCPD                 ; MARCAMOS LA POSICIÓN DEL SEGMENTO
00001BA0                          1563              
00001BA0  3239 0000237E           1564              MOVE.W  (SGMPOSX2),D1
00001BA6  3439 00002380           1565              MOVE.W  (SGMPOSY2),D2             ; VEMOS LA POSICIÓN INICIAL DEL SEGMENTO
00001BAC  4EB8 1A24               1566              JSR     CINDMTRZ
00001BB0  4EB8 1A8A               1567              JSR     SGMOCPD                 ; MARCAMOS LA POSICIÓN DEL SEGMENTO
00001BB4                          1568              
00001BB4  3239 00002376           1569              MOVE.W  (COLPOSX),D1             ; VEMOS LA POSICIÓN INICIAL DE LA COLA
00001BBA  3439 00002378           1570              MOVE.W  (COLPOSY),D2
00001BC0  4EB8 1A24               1571              JSR     CINDMTRZ
00001BC4  4EB8 1AA0               1572              JSR     COLOCPD                 ; MARCAMOS LA POSICIÓN DE LA COLA
00001BC8                          1573              
00001BC8  3239 0000236A           1574              MOVE.W  (MNZPOSX),D1             ; VEMOS LA POSICIÓN INICIAL DE LA MANZANA
00001BCE  3439 0000236C           1575              MOVE.W  (MNZPOSY),D2
00001BD4  4EB8 1A24               1576              JSR     CINDMTRZ
00001BD8  4EB8 1AB6               1577              JSR     MNZOCPD                 ; MARCAMOS LA POSICIÓN DE LA MANZANA
00001BDC                          1578              
00001BDC                          1579              
00001BDC                          1580              
00001BDC  5379 00002384           1581              SUBQ.W  #1,(JGOTIM)             ; RESTAMOS 1 AL TIMER
00001BE2  0C79 0000 00002384      1582              CMP     #0,(JGOTIM)             ; VEMOS SI HA ACABADO EL TIEMPO
00001BEA  6700 0006               1583              BEQ     .GAMEOVER
00001BEE  6000 0130               1584              BRA     .FIN                     ; SALTAMOS DEPENDIENDO DEL VALOR
00001BF2                          1585              
00001BF2  33FC 0003 0000238E      1586  .GAMEOVER    MOVE.W  #3,(STANEXT)
00001BFA  4280                    1587              CLR.L   D0                      ; BORRAMOS LOS REGISTROS QUE VAMOS A UTILIZAR
00001BFC  4281                    1588              CLR.L   D1
00001BFE  4282                    1589              CLR.L   D2
00001C00  4283                    1590              CLR.L   D3
00001C02  42B9 00002394           1591              CLR.L   (BFFLEC)
00001C08                          1592              
00001C08                          1593              ; ESCRIBIR PUNTUACIÓN
00001C08  103C 0032               1594              MOVE.B  #50,D0                  ; CERRAMOS TODOS LOS ARCHIVOS
00001C0C  4E4F                    1595              TRAP    #15
00001C0E                          1596  
00001C0E                          1597               ; Verificar si el archivo existe
00001C0E  43F9 00001D58           1598              LEA     .FILE,A1                 ; Dirección del nombre del archivo
00001C14  103C 003B               1599              MOVE.B  #59,D0                  ; Tarea 59: Verificar existencia del archivo
00001C18  4E4F                    1600              TRAP    #15
00001C1A  B07C 0000               1601              CMP.W   #0,D0                   ; Verificar si el archivo existe
00001C1E  6700 0006               1602              BEQ     .ABRIR_ARCHIVO          ; Si existe, abrir archivo
00001C22  6000 0062               1603              BRA     .CREAR_ARCHIVO          ; Si no existe, crear archivo
00001C26                          1604  
00001C26                          1605  .ABRIR_ARCHIVO
00001C26                          1606              ; Abrir archivo existente
00001C26  103C 0033               1607              MOVE.B  #51,D0                  ; Abrir archivo existente
00001C2A  4E4F                    1608              TRAP    #15
00001C2C  B07C 0000               1609              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001C30  6600 0120               1610              BNE     .ERROR                   ; Si falla, ir a ERROR
00001C34  23C1 00002390           1611              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001C3A                          1612  
00001C3A                          1613              ; Leer hasta encontrar el marcador `#`
00001C3A  2239 00002390           1614              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C40  7400                    1615              MOVE.L  #0,D2                   ; Posicionarse al inicio del archivo
00001C42  103C 0037               1616              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001C46  4E4F                    1617              TRAP    #15
00001C48                          1618  
00001C48                          1619  .BUSCAR_FINAL
00001C48  43F9 00002394           1620              LEA     BFFLEC,A1               ; Buffer para leer datos
00001C4E  2239 00002390           1621              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C54  7401                    1622              MOVE.L  #1,D2                   ; Leer 1 byte
00001C56  103C 0035               1623              MOVE.B  #53,D0                  ; Tarea 53: Leer archivo
00001C5A  4E4F                    1624              TRAP    #15
00001C5C  B07C 0001               1625              CMP.W   #1,D0                   ; Verificar si alcanzamos EOF
00001C60  6700 003C               1626              BEQ     .ESCRIBIR               ; Si alcanzamos EOF, escribir al final
00001C64  0C39 0023 00002394      1627              CMP.B   #'#',(BFFLEC)           ; Comparar con el marcador `#`
00001C6C  6700 0006               1628              BEQ     .POSICIONAR             ; Si encontramos el marcador, posicionarnos ahí
00001C70  5283                    1629              ADDQ.L  #1,D3                   ; Incrementar contador de bytes leídos
00001C72  60D4                    1630              BRA     .BUSCAR_FINAL           ; Continuar buscando el marcador
00001C74                          1631  
00001C74                          1632  .POSICIONAR
00001C74                          1633              ; Posicionarse al marcador para sobrescribir
00001C74  2403                    1634              MOVE.L  D3,D2                   ; Cargar la posición del marcador desde el contador
00001C76  2239 00002390           1635              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C7C  103C 0037               1636              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001C80  4E4F                    1637              TRAP    #15
00001C82  6000 001A               1638              BRA     .ESCRIBIR               ; Ir a escribir datos
00001C86                          1639  
00001C86                          1640  .CREAR_ARCHIVO
00001C86                          1641              ; Crear archivo nuevo
00001C86  103C 0034               1642              MOVE.B  #52,D0                  ; Tarea 52: Abrir o crear archivo
00001C8A  4E4F                    1643              TRAP    #15
00001C8C  B07C 0000               1644              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001C90  6600 00C0               1645              BNE     .ERROR                   ; Si falla, ir a ERROR
00001C94  23C1 00002390           1646              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001C9A  6000 0002               1647              BRA     .ESCRIBIR               ; Ir directamente a escribir datos
00001C9E                          1648  
00001C9E                          1649  .ESCRIBIR
00001C9E                          1650              ; Convertir el número en caracteres ASCII y escribirlos uno por uno
00001C9E  41F9 00002382           1651              LEA     JGOPNTS,A0              ; Dirección del número
00001CA4  3010                    1652              MOVE.W  (A0),D0                 ; Cargar el número en D0
00001CA6  4EB9 00001D26           1653              JSR     .CONVERTIR_NUMERO        ; Convertir número a ASCII en el buffer
00001CAC                          1654  
00001CAC                          1655              ; Escribir los caracteres del buffer
00001CAC  41F9 00002395           1656              LEA     ASCBFF,A0               ; Dirección del buffer de caracteres ASCII
00001CB2                          1657              
00001CB2                          1658  
00001CB2                          1659  .ESCRIBIR_BUCLE:
00001CB2  1010                    1660              MOVE.B  (A0),D0                ; Leer carácter del buffer
00001CB4  6700 0028               1661              BEQ     .ESCRIBIR_FIN_BLOQUE    ; Si terminador NULL, ir al delimitador
00001CB8  2403                    1662              MOVE.L  D3,D2                   ; Cargar posición actual
00001CBA  2239 00002390           1663              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001CC0  103C 0037               1664              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001CC4  4E4F                    1665              TRAP    #15                     ; Posicionar antes de escribir
00001CC6  103C 0036               1666              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001CCA  43D0                    1667              LEA     (A0),A1
00001CCC  7401                    1668              MOVE.L  #1,D2
00001CCE  4E4F                    1669              TRAP    #15                     ; Escribir carácter
00001CD0  B07C 0000               1670              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001CD4  6600 007C               1671              BNE     .ERROR                   ; Si falla, ir a ERROR
00001CD8  5283                    1672              ADDQ.L  #1,D3                   ; Incrementar posición
00001CDA  1018                    1673              MOVE.B  (A0)+,D0                ; Restaurar carácter actual
00001CDC  60D4                    1674              BRA     .ESCRIBIR_BUCLE         ; Continuar con el siguiente carácter
00001CDE                          1675  
00001CDE                          1676  .ESCRIBIR_FIN_BLOQUE
00001CDE                          1677              ; Escribir delimitador `?`
00001CDE  43F9 00001D63           1678              LEA     .TXT1,A1
00001CE4  4EB9 00001CFA           1679              JSR     .ESCRIBIR_CARACTER
00001CEA                          1680              ; Escribir marcador `#`
00001CEA  43F9 00001D65           1681              LEA     .TXT2,A1
00001CF0  4EB9 00001CFA           1682              JSR     .ESCRIBIR_CARACTER
00001CF6  6000 001C               1683              BRA     .FINESC
00001CFA                          1684  
00001CFA                          1685  .ESCRIBIR_CARACTER:
00001CFA  2403                    1686              MOVE.L  D3,D2                   ; Cargar posición actual
00001CFC  2239 00002390           1687              MOVE.L  FILEID,D1               ; File-ID del archivo
00001D02  103C 0037               1688              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001D06  4E4F                    1689              TRAP    #15                     ; Posicionar antes de escribir
00001D08  103C 0036               1690              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001D0C  7401                    1691              MOVE.L  #1,D2
00001D0E  4E4F                    1692              TRAP    #15                     ; Escribir carácter
00001D10  5283                    1693              ADDQ.L  #1,D3                   ; Incrementar posición
00001D12  4E75                    1694              RTS                             ; Retornar
00001D14                          1695  
00001D14                          1696  .FINESC
00001D14                          1697              ; Cerrar archivo
00001D14  2239 00002390           1698              MOVE.L  FILEID,D1               ; File-ID del archivo
00001D1A  103C 0038               1699              MOVE.B  #56,D0                  ; Tarea 56: Cerrar archivo
00001D1E  4E4F                    1700              TRAP    #15
00001D20                          1701  .FIN
00001D20  4CDF 038F               1702              MOVEM.L (A7)+,D0-D3/D7/A0-A1          ; Restaurar registros
00001D24  4E75                    1703              RTS                             ; Retornar
00001D26                          1704  
00001D26                          1705  .CONVERTIR_NUMERO
00001D26  48E7 F040               1706               MOVEM.L D0-D3/A1,-(A7)         ; Guardar registros usados en la pila
00001D2A                          1707  
00001D2A                          1708      ; Inicialización
00001D2A  43F9 00002395           1709      LEA     ASCBFF,A1              ; Dirección del buffer
00001D30  740A                    1710      MOVEQ   #10,D2                 ; Base decimal (10)
00001D32                          1711  
00001D32                          1712      ; Convertir número hexadecimal a decimal y guardar dígitos
00001D32                          1713  .CONVERTDELO:
00001D32  80C2                    1714      DIVU    D2,D0                  ; Dividir D0 por 10: cociente en D0, residuo en bits bajos
00001D34  3600                    1715      MOVE.W  D0,D3
00001D36  C0BC 0000000F           1716      AND.L   #$000F,D0              ; Asegurarnos de trabajar con el residuo (0-9)
00001D3C  0600 0030               1717      ADD.B   #48,D0                 ; Convertir residuo a carácter ASCII ('0'-'9')
00001D40  12C0                    1718      MOVE.B  D0,(A1)+               ; Almacenar carácter en el buffer
00001D42  3003                    1719      MOVE.W  D3,D0
00001D44  4A43                    1720      TST.W   D3                     ; Verificar si el cociente es 0
00001D46  66EA                    1721      BNE     .CONVERTDELO           ; Si no es 0, continuar con el próximo dígito
00001D48                          1722  
00001D48                          1723              
00001D48                          1724      ; Añadir terminador NULL al final
00001D48  12FC 0000               1725      MOVE.B  #0,(A1)+               ; Finalizar cadena con NULL
00001D4C                          1726  
00001D4C  4CDF 020F               1727      MOVEM.L (A7)+,D0-D3/A1         ; Restaurar registros usados
00001D50  4E75                    1728              RTS                         ; Retornar              
00001D52                          1729  .ERROR
00001D52  103C 0009               1730              MOVE.B  #9,D0                   ; Tarea 9: Terminar el programa
00001D56  4E4F                    1731              TRAP    #15
00001D58                          1732     
00001D58                          1733              
00001D58                          1734              
00001D58= 50 55 4E 54 4F 53 ...   1735  .FILE        DC.B    'PUNTOS.TXT',0 
00001D63= 3F 00                   1736  .TXT1       DC.B    '?',0
00001D65= 23 00                   1737  .TXT2       DC.B    '#',0  
00001D68                          1738              DS.W    0        
00001D68                          1739  
00001D68                          1740  
00001D68                          1741  
00001D68                          1742  
00001D68                          1743  
00001D68                          1744  ;-----------------------------------------------------------------------------
00001D68                          1745  MTZPLOT
00001D68                          1746  ; DIBUJA LA MATRIZ CASILLA A CASILLA
00001D68                          1747  ; INPUT    : NONE
00001D68                          1748  ; OUTPUT   : NONE
00001D68                          1749  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001D68                          1750  ; ----------------------------------------------------------------------------
00001D68  48E7 F080               1751              MOVEM.L D0-D3/A0,-(A7)
00001D6C                          1752  
00001D6C  4240                    1753              CLR.W   D0
00001D6E  4243                    1754              CLR.W   D3
00001D70  41F9 000023A2           1755              LEA     ESTDCLDS,A0            ; Apunta al inicio de ESTDCLDS
00001D76  303C 0300               1756              MOVE.W  #TCELDAS,D0            ; Número total de celdas
00001D7A  363C 0000               1757              MOVE.W  #0,D3                   ; LO UTILIZAMOS PARA SABER EL INDICE EN EL QUE NOS ENCONTRAMOS
00001D7E  4241                    1758              CLR.W   D1
00001D80  4242                    1759              CLR.W   D2
00001D82                          1760              
00001D82                          1761  
00001D82                          1762  PLOTCLDS:
00001D82  1218                    1763              MOVE.B  (A0)+,D1                ; MOVEMOS EL VALOR DE LA CELDA A D1
00001D84  B23C 0000               1764              CMP.B   #0,D1
00001D88  6700 0034               1765              BEQ     PLOTVAC                 ; SALTA A DIBUJAR POSICIÓN VACÍA
00001D8C  B23C 0001               1766              CMP.B   #1,D1 
00001D90  6700 0032               1767              BEQ     PLOTCOL                 ; SALTA A DIBUJAR COLA
00001D94  B23C 0002               1768              CMP.B   #2,D1
00001D98  6700 0030               1769              BEQ     PLOTSEG                 ; SALTA A DIBUJAR SEGMENTO
00001D9C  B23C 0003               1770              CMP.B   #3,D1
00001DA0  6700 0016               1771              BEQ     PLOTCBZ                 ; SALTA A DIBUJAR CABEZA
00001DA4  B23C 0004               1772              CMP.B   #4,D1                 
00001DA8  6700 0026               1773              BEQ     PLOTAPPLE               ; SALTA A DIBUJAR MANZANA
00001DAC                          1774    
00001DAC                          1775  DONEPLOT            
00001DAC  5243                    1776              ADDQ    #1,D3                   ; AUMENTAMOS EL INDICE DE CELDA PARA LA SIGUIENTE
00001DAE  5340                    1777              SUBI.W  #1,D0                  ; Decrementa el contador de celdas
00001DB0  66D0                    1778              BNE     PLOTCLDS                ; Repite hasta que esten vacías
00001DB2  4CDF 010F               1779              MOVEM.L (A7)+,D0-D3/A0
00001DB6  4E75                    1780              RTS
00001DB8                          1781  PLOTCBZ:
00001DB8  4EB8 1576               1782              JSR     HEADPLOT
00001DBC  60EE                    1783              BRA     DONEPLOT
00001DBE                          1784  
00001DBE                          1785  PLOTVAC:    
00001DBE  4EB8 1B26               1786              JSR     FONPLOT
00001DC2  60E8                    1787              BRA     DONEPLOT                ; DIBUJADO HECHO 
00001DC4                          1788  
00001DC4                          1789  PLOTCOL:   
00001DC4  4EB8 175A               1790              JSR     TAILPLOT 
00001DC8  60E2                    1791              BRA     DONEPLOT                ; DIBUJADO HECHO 
00001DCA                          1792              
00001DCA                          1793  PLOTSEG:    
00001DCA  4EB8 16BA               1794              JSR     SEGPLOT
00001DCE  60DC                    1795              BRA     DONEPLOT                ; DIBUJADO HECHO    
00001DD0                          1796  
00001DD0                          1797  PLOTAPPLE:
00001DD0  4EB8 180A               1798              JSR     APPLEPLOT
00001DD4  60D6                    1799              BRA     DONEPLOT            
00001DD6                          1800  
00001DD6                          1801  
00001DD6                          1802  
00001DD6                          1803  
00001DD6                          1804  
00001DD6                          1805  
00001DD6                          1806  
00001DD6                          1807  
00001DD6                          1808  
00001DD6                          1809  
00001DD6                          1810  
00001DD6                          1811  
00001DD6                          1812  
00001DD6                          1813  
00001DD6                          1814  
00001DD6                          1815  
00001DD6                          1816  
00001DD6                          1817  
00001DD6                          1818  
00001DD6                          1819  
00001DD6                          1820  
00001DD6                          1821  
00001DD6                          1822  
00001DD6                          1823  -------------------- end include --------------------
00001DD6                          1824              INCLUDE 'INTRO.X68'
00001DD6                          1825  ; ==============================================================================
00001DD6                          1826  ; INTRO SCREEN
00001DD6                          1827  ; ==============================================================================
00001DD6                          1828  
00001DD6                          1829  ; ------------------------------------------------------------------------------
00001DD6                          1830  ISCINIT
00001DD6                          1831  ; INTRO SCREEN INIT
00001DD6                          1832  ; INPUT    : NONE
00001DD6                          1833  ; OUTPUT   : NONE
00001DD6                          1834  ; MODIFIES : NONE
00001DD6                          1835  ; ------------------------------------------------------------------------------
00001DD6                          1836  
00001DD6  4279 00002386           1837              CLR.W   (ISCTIMER)
00001DDC                          1838              
00001DDC  4E75                    1839              RTS
00001DDE                          1840  
00001DDE                          1841  ; ------------------------------------------------------------------------------
00001DDE                          1842  ISCUPD
00001DDE                          1843  ; INTRO SCREEN UPDATE
00001DDE                          1844  ; INPUT    : NONE
00001DDE                          1845  ; OUTPUT   : NONE
00001DDE                          1846  ; MODIFIES : NONE
00001DDE                          1847  ; ------------------------------------------------------------------------------
00001DDE                          1848  
00001DDE  48E7 FC00               1849              MOVEM.L D0-D5,-(A7)
00001DE2                          1850              
00001DE2  323C 0107               1851              MOVE.W  #$0107,D1               ;HABILITAR IRQ
00001DE6  303C 003C               1852              MOVE.W  #60,D0
00001DEA  4E4F                    1853              TRAP    #15
00001DEC                          1854              
00001DEC                          1855  .MAINLOOP            
00001DEC  123C 0000               1856              MOVE.B  #0,D1                   ;LEER ESTADO ACTUAL RATON
00001DF0  303C 003D               1857              MOVE.   #61,D0
00001DF4  4E4F                    1858              TRAP    #15
00001DF6                          1859              
00001DF6  2401                    1860              MOVE.L  D1,D2                   ;GUARDAR COORDENADAS RATON EN D2
00001DF8  0200 0001               1861              ANDI.B  #1,D0                   ;COMPROBAR click izquierdo
00001DFC  4A40                    1862              TST     D0
00001DFE  6700 0032               1863              BEQ     .CONT
00001E02                          1864              
00001E02                          1865              ;MIRAMOS SI SE HA PULSADO EN EL TEXTO CORRESPONDIENTE
00001E02  263C 00000108           1866              MOVE.L  #$108,D3                 ;(640 - 112) / 2 = 264 PIXELES -> COORDENADA X
00001E08  7819                    1867              MOVE.L  #$19,D4                  ;COORDENADA Y DEL TEXTO 25
00001E0A                          1868              
00001E0A  2A02                    1869              MOVE.L  D2,D5                   ;COORDENADA Y RATON
00001E0C  0285 0000FFFF           1870              ANDI.L  #$0000FFFF,D5
00001E12  BA84                    1871              CMP.L   D4,D5
00001E14  6D00 001C               1872              BLT     .CONT                   ;SI Y < TEXTO
00001E18                          1873  
00001E18  2A02                    1874              MOVE.L  D2,D5                   ;COORDENADA X RATON
00001E1A  0285 0000FFFF           1875              ANDI.L  #$FFFF,D5               ;EXTRAER X (BITS BAJOS)
00001E20  BA83                    1876              CMP.L   D3,D5
00001E22  6D00 000E               1877              BLT     .CONT                   ;SI X < TEXTO
00001E26                          1878              
00001E26                          1879              ;SI EL CLICK ESTA DENTRO DEL AREA DEL TEXTO
00001E26  33FC 0002 0000238E      1880              MOVE.W  #2,(STANEXT)            ; SI COINCIDE INICIAR JUEGO
00001E2E  6000 0034               1881              BRA     .DONE            
00001E32                          1882              
00001E32                          1883  .CONT       
00001E32                          1884  
00001E32  103C 0013               1885              MOVE.B  #19,D0                  ; Tarea 19: Detectar teclas
00001E36  7250                    1886              MOVE.L  #'P',D1                 ; Código ASCII de la tecla P
00001E38  4E4F                    1887              TRAP    #15
00001E3A  0801 0000               1888              BTST.L  #0,D1                   ; Verificar si la tecla P está presionada
00001E3E  6700 000A               1889              BEQ     .END                    ; Si no está presionada, continuar
00001E42  33FC 0004 0000238E      1890              MOVE.W  #4,(STANEXT)            ; Cambiar STANEXT a 4 si la tecla P está presionada
00001E4A                          1891  .END            
00001E4A  5279 00002386           1892              ADDQ.W  #1,(ISCTIMER)
00001E50  0C79 01F4 00002386      1893              CMP.W   #ISCMAXTM,(ISCTIMER)
00001E58  6D00 000A               1894              BLT     .DONE
00001E5C  33FC 0001 0000238E      1895              MOVE.W  #1,(STANEXT)
00001E64                          1896              
00001E64                          1897  .DONE       
00001E64  4CDF 003F               1898              MOVEM.L (A7)+,D0-D5
00001E68  4E75                    1899              RTS
00001E6A                          1900  
00001E6A                          1901  ; ------------------------------------------------------------------------------
00001E6A                          1902  ISCPLOT
00001E6A                          1903  ; INTRO SCREEN PLOT
00001E6A                          1904  ; INPUT    : NONE
00001E6A                          1905  ; OUTPUT   : NONE
00001E6A                          1906  ; MODIFIES : NONE
00001E6A                          1907  ; ------------------------------------------------------------------------------
00001E6A  48E7 C080               1908              MOVEM.L D0-D1/A0,-(A7)
00001E6E                          1909              
00001E6E                          1910              ;JSR     FONPLOT
00001E6E                          1911              
00001E6E  4281                    1912              CLR.L   D1
00001E70  103C 0051               1913              MOVE.B  #81,D0
00001E74  4E4F                    1914              TRAP    #15
00001E76                          1915              
00001E76  41F9 00001EAE           1916              LEA     .TXT1,A0
00001E7C  103C 000A               1917              MOVE.B  #10,D0
00001E80  4EB8 119E               1918              JSR     UTLPRINT
00001E84                          1919              
00001E84  0839 0004 000026AB      1920              BTST.B  #4,(SCRCYCCT)
00001E8C  6700 001A               1921              BEQ     .DONE
00001E90                          1922              
00001E90  41F9 00001EC0           1923              LEA     .TXT2,A0
00001E96  103C 0017               1924              MOVE.B  #23,D0
00001E9A  4EB8 119E               1925              JSR     UTLPRINT
00001E9E                          1926              
00001E9E  41F9 00001ED4           1927              LEA     .TXT3,A0
00001EA4  4EB8 119E               1928              JSR     UTLPRINT
00001EA8                          1929              
00001EA8  4CDF 0103               1930  .DONE       MOVEM.L (A7)+,D0-D1/A0
00001EAC                          1931  
00001EAC  4E75                    1932              RTS
00001EAE                          1933              
00001EAE= 53 4E 41 4B 45 20 ...   1934  .TXT1       DC.B    'SNAKE TIMER 68000',0
00001EC0= 43 4C 49 43 4B 20 ...   1935  .TXT2       DC.B    'CLICK HERE TO START',0
00001ED4= 50 52 45 53 53 20 ...   1936  .TXT3       DC.B    'PRESS KEY P TO SEE SCORE TABLE',0
00001EF4                          1937              DS.W    0
00001EF4                          1938  
00001EF4                          1939  
00001EF4                          1940  
00001EF4                          1941  
00001EF4                          1942  
00001EF4                          1943  
00001EF4                          1944  
00001EF4                          1945  
00001EF4                          1946  
00001EF4                          1947  
00001EF4                          1948  
00001EF4                          1949  
00001EF4                          1950  
00001EF4                          1951  
00001EF4                          1952  
00001EF4                          1953  
00001EF4                          1954  -------------------- end include --------------------
00001EF4                          1955              INCLUDE 'INSTRUCTIONS.X68'
00001EF4                          1956  ; ==============================================================================
00001EF4                          1957  ; INSTRUCTIONS SCREEN
00001EF4                          1958  ; ==============================================================================
00001EF4                          1959  
00001EF4                          1960  ; ------------------------------------------------------------------------------
00001EF4                          1961  INSINIT
00001EF4                          1962  ; INSTRUCTIONS SCREEN INIT
00001EF4                          1963  ; INPUT    : NONE
00001EF4                          1964  ; OUTPUT   : NONE
00001EF4                          1965  ; MODIFIES : NONE
00001EF4                          1966  ; ------------------------------------------------------------------------------
00001EF4                          1967  
00001EF4  4279 00002388           1968              CLR.W   (INSTIMER)
00001EFA                          1969              ;INSMAXTM
00001EFA                          1970  
00001EFA  4E75                    1971              RTS
00001EFC                          1972  
00001EFC                          1973  ; ------------------------------------------------------------------------------
00001EFC                          1974  INSUPD
00001EFC                          1975  ; INSTRUCTIONS SCREEN UPDATE
00001EFC                          1976  ; INPUT    : NONE
00001EFC                          1977  ; OUTPUT   : NONE
00001EFC                          1978  ; MODIFIES : NONE
00001EFC                          1979  ; ------------------------------------------------------------------------------
00001EFC                          1980  
00001EFC  5279 00002388           1981              ADDQ.W  #1,(INSTIMER)
00001F02  0C79 01F4 00002388      1982              CMP.W   #INSMAXTM,(INSTIMER)
00001F0A  6D00 0008               1983              BLT     .DONE
00001F0E  4279 0000238E           1984              CLR.W   (STANEXT)
00001F14                          1985  .DONE
00001F14  4E75                    1986              RTS
00001F16                          1987  
00001F16                          1988  ; ------------------------------------------------------------------------------
00001F16                          1989  INSPLOT
00001F16                          1990  ; INSTRUCTIONS SCREEN PLOT
00001F16                          1991  ; INPUT    : NONE
00001F16                          1992  ; OUTPUT   : NONE
00001F16                          1993  ; MODIFIES : NONE
00001F16                          1994  ; ------------------------------------------------------------------------------
00001F16                          1995  
00001F16  48E7 C0C0               1996              MOVEM.L D0-D1/A0-A1,-(A7)
00001F1A                          1997              
00001F1A                          1998              ;JSR     FONPLOT
00001F1A                          1999              
00001F1A  103C 000B               2000              MOVE.B  #11,D0
00001F1E  43F9 00002098           2001              LEA     .TXTLST,A1
00001F24  2219                    2002  .LOOP       MOVE.L  (A1)+,D1
00001F26  6700 000A               2003              BEQ     .DONE
00001F2A  2041                    2004              MOVE.L  D1,A0
00001F2C  4EB8 119E               2005              JSR     UTLPRINT
00001F30  60F2                    2006              BRA     .LOOP
00001F32                          2007              
00001F32  4CDF 0303               2008  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
00001F36  4E75                    2009              RTS
00001F38= 57 45 4C 43 4F 4D ...   2010  .TXT1       DC.B    'WELCOME TO THE GAME OF SNAKE TIMER 68000!',0
00001F62= 59 4F 55 52 20 47 ...   2011  .TXT2       DC.B    'YOUR GOAL IN THIS GAME IS TO EAT AS MUCH APPLES AS THE TIMER ALLOWS YOU',0
00001FAA= 45 41 43 48 20 41 ...   2012  .TXT3       DC.B    'EACH APPLE EATEN INCREASES THE TIME YOU CAN PLAY',0
00001FDB= 54 4F 20 54 48 49 ...   2013  .TXT4       DC.B    'TO THIS END, MOVE THE SNAKE WITH THE ARROWS',0
00002007= 48 4F 57 20 54 4F ...   2014  .TXT5       DC.B    'HOW TO DO IT? YOU MAY ASK.',0
00002022= 49 54 20 49 53 20 ...   2015  .TXT6       DC.B    'IT IS EASY: JUST USE THE UP, DOWN, LEFT, RIGHT KEYS TO MOVE THE SNAKE',0
00002068= 42 45 20 43 41 52 ...   2016  .TXT7       DC.B    'BE CAREFUL WITH THE WALLS! TRY NOT TO HIT THEM.',0
00002098= 00001F38 00001F62 ...   2017  .TXTLST     DC.L    .TXT1,.TXT2,.TXT3,.TXT4,.TXT5,.TXT6,.TXT7,0
000020B8                          2018  
000020B8                          2019  
000020B8                          2020  
000020B8                          2021  
000020B8                          2022  
000020B8                          2023  
000020B8                          2024  
000020B8                          2025  
000020B8                          2026  
000020B8                          2027  
000020B8                          2028  
000020B8                          2029  
000020B8                          2030  
000020B8                          2031  
000020B8                          2032  -------------------- end include --------------------
000020B8                          2033              INCLUDE 'GAMEOVER.X68'
000020B8                          2034  ; ==============================================================================
000020B8                          2035  ; GAME OVER SCREEN
000020B8                          2036  ; ==============================================================================
000020B8                          2037  
000020B8                          2038  ; ------------------------------------------------------------------------------
000020B8                          2039  GOVINIT
000020B8                          2040  ; GAME OVER SCREEN INIT
000020B8                          2041  ; INPUT    : NONE
000020B8                          2042  ; OUTPUT   : NONE
000020B8                          2043  ; MODIFIES : NONE
000020B8                          2044  ; ------------------------------------------------------------------------------
000020B8                          2045  
000020B8  4279 0000238A           2046              CLR.W  (GOVTIMER)
000020BE  4E75                    2047              RTS
000020C0                          2048  
000020C0                          2049  ; ------------------------------------------------------------------------------
000020C0                          2050  GOVUPD
000020C0                          2051  ; GAME OVER SCREEN UPDATE
000020C0                          2052  ; INPUT    : NONE
000020C0                          2053  ; OUTPUT   : NONE
000020C0                          2054  ; MODIFIES : NONE
000020C0                          2055  ; ------------------------------------------------------------------------------
000020C0  48E7 C000               2056              MOVEM.L D0-D1,-(A7)
000020C4                          2057              
000020C4  103C 0013               2058              MOVE.B  #19,D0                  ; Detectar teclas
000020C8  7253                    2059              MOVE.L  #'S',D1                 ; Código ASCII de la tecla S
000020CA  4E4F                    2060              TRAP    #15
000020CC  0801 0000               2061              BTST.L  #0,D1                   ; Verificar si la tecla S está presionada
000020D0  6700 0008               2062              BEQ     CONT                    ; Si no está presionada, continuar
000020D4                          2063  
000020D4  4279 0000238E           2064              CLR.W (STANEXT)                 ; Cambiar STANEXT a 0 si la tecla P está presionada
000020DA                          2065  
000020DA                          2066  
000020DA                          2067  CONT
000020DA                          2068  
000020DA                          2069              
000020DA                          2070              
000020DA  5279 0000238A           2071              ADDQ.W  #1,(GOVTIMER)
000020E0  0C79 01F4 0000238A      2072              CMP.W   #500,(GOVTIMER)
000020E8  6D00 0008               2073              BLT     .DONE
000020EC  4279 0000238E           2074              CLR.W   (STANEXT)
000020F2                          2075  .DONE
000020F2                          2076  
000020F2  4CDF 0003               2077              MOVEM.L (A7)+,D0-D1
000020F6                          2078              
000020F6  4E75                    2079              RTS
000020F8                          2080              
000020F8                          2081  ; ------------------------------------------------------------------------------
000020F8                          2082  GOVPLOT
000020F8                          2083  ; GAME OVER SCREEN PLOT
000020F8                          2084  ; INPUT    : NONE
000020F8                          2085  ; OUTPUT   : NONE
000020F8                          2086  ; MODIFIES : NONE
000020F8                          2087  ; ------------------------------------------------------------------------------
000020F8  48E7 C080               2088              MOVEM.L D0-D1/A0,-(A7)
000020FC                          2089              
000020FC                          2090              ;JSR     FONPLOT
000020FC                          2091              
000020FC  4281                    2092              CLR.L   D1
000020FE  103C 0051               2093              MOVE.B  #81,D0
00002102  4E4F                    2094              TRAP    #15
00002104                          2095              
00002104  41F9 00002126           2096              LEA     .TXT1,A0
0000210A  103C 000A               2097              MOVE.B  #10,D0
0000210E  4EB8 119E               2098              JSR     UTLPRINT
00002112                          2099              
00002112  41F9 00002130           2100              LEA     .TXT2,A0
00002118  103C 0014               2101              MOVE.B  #20,D0
0000211C  4EB8 119E               2102              JSR     UTLPRINT
00002120                          2103              
00002120  4CDF 0103               2104  .DONE       MOVEM.L (A7)+,D0-D1/A0
00002124                          2105  
00002124  4E75                    2106              RTS
00002126= 47 41 4D 45 20 4F ...   2107  .TXT1       DC.B    'GAME OVER',0
00002130= 57 41 49 54 20 54 ...   2108  .TXT2       DC.B    'WAIT TO RETURN TO MAIN PAGE OR PRESS KEY S',0
0000215C                          2109              DS.W    0
0000215C                          2110  
0000215C                          2111  
0000215C                          2112  
0000215C                          2113  
0000215C                          2114  
0000215C                          2115  
0000215C                          2116  
0000215C                          2117  
0000215C                          2118  
0000215C                          2119  
0000215C                          2120  
0000215C                          2121  
0000215C                          2122  
0000215C                          2123  
0000215C                          2124  
0000215C                          2125  
0000215C                          2126  
0000215C                          2127  
0000215C                          2128  
0000215C                          2129  -------------------- end include --------------------
0000215C                          2130              INCLUDE 'TABLE.X68'
0000215C                          2131  ; ==============================================================================
0000215C                          2132  ; TABLE SCREEN
0000215C                          2133  ; ==============================================================================
0000215C                          2134  
0000215C                          2135  ; ------------------------------------------------------------------------------
0000215C                          2136  TABINIT
0000215C                          2137  ; TABLE SCREEN INIT
0000215C                          2138  ; INPUT    : NONE
0000215C                          2139  ; OUTPUT   : NONE
0000215C                          2140  ; MODIFIES : NONE
0000215C                          2141  ; ------------------------------------------------------------------------------
0000215C                          2142  
0000215C                          2143             
0000215C  4E75                    2144              RTS
0000215E                          2145  
0000215E                          2146  ; ------------------------------------------------------------------------------
0000215E                          2147  TABUPD
0000215E                          2148  ; TABLE SCREEN UPDATE
0000215E                          2149  ; INPUT    : NONE
0000215E                          2150  ; OUTPUT   : NONE
0000215E                          2151  ; MODIFIES : NONE
0000215E                          2152  ; ------------------------------------------------------------------------------
0000215E  103C 0013               2153              MOVE.B  #19,D0                  ; Detectar teclas
00002162  7253                    2154              MOVE.L  #'S',D1                 ; Código ASCII de la tecla S
00002164  4E4F                    2155              TRAP    #15
00002166  0801 0000               2156              BTST.L  #0,D1                   ; Verificar si la tecla S está presionada
0000216A  6700 0008               2157              BEQ     END                     ; Si no está presionada, continuar
0000216E                          2158  
0000216E  4279 0000238E           2159              CLR.W (STANEXT)                 ; Cambiar STANEXT a 4 si la tecla P está presionada
00002174                          2160  
00002174                          2161  
00002174                          2162  END:
00002174                          2163             
00002174  4E75                    2164              RTS
00002176                          2165  
00002176                          2166  ; ------------------------------------------------------------------------------
00002176                          2167  TABPLOT
00002176                          2168  ; TABLE SCREEN PLOT
00002176                          2169  ; INPUT    : NONE
00002176                          2170  ; OUTPUT   : NONE
00002176                          2171  ; MODIFIES : NONE
00002176                          2172  ; ------------------------------------------------------------------------------
00002176                          2173  
00002176                          2174              
00002176  48E7 F0C0               2175              MOVEM.L D0-D3/A0-A1,-(A7)
0000217A                          2176  
0000217A  4243                    2177              CLR.W   D3                        ; Inicializar contador de partidas
0000217C                          2178              ; Cerrar todos los archivos abiertos al inicio
0000217C                          2179  
0000217C  103C 0032               2180              MOVE.B  #50,D0                    ; Cerrar todos los archivos
00002180  4E4F                    2181              TRAP    #15
00002182                          2182  
00002182                          2183              ; Abrir archivo existente
00002182  43F9 00002268           2184              LEA     .FILE,A1                  ; Dirección del nombre del archivo
00002188  103C 0033               2185              MOVE.B  #51,D0                    ; Abrir archivo existente
0000218C  4E4F                    2186              TRAP    #15
0000218E  B07C 0000               2187              CMP.W   #0,D0                     ; Verificar si la operación fue exitosa
00002192  6600 F3CC               2188              BNE     ERROR                     ; Saltar a error si D0 != 0
00002196  23C1 00002390           2189              MOVE.L  D1,FILEID                 ; Guardar el File-ID para operaciones posteriores
0000219C                          2190  
0000219C  4281                    2191              CLR.L   D1                        ; Limpiar acumulador para número actual
0000219E  41F9 00002395           2192              LEA     ASCBFF,A0           ; Puntero al buffer donde acumularemos el número
000021A4                          2193  
000021A4                          2194  .LEC
000021A4                          2195              ; Leer un byte del archivo
000021A4  43F9 00002394           2196              LEA     BFFLEC,A1                 ; Dirección del buffer temporal para lectura
000021AA  2239 00002390           2197              MOVE.L  FILEID,D1                 ; File-ID del archivo abierto
000021B0  7401                    2198              MOVE.L  #1,D2                     ; Leer 1 byte
000021B2  103C 0035               2199              MOVE.B  #53,D0                    ; Tarea 53: Leer archivo
000021B6  4E4F                    2200              TRAP    #15
000021B8  B07C 0001               2201              CMP.W   #1,D0                     ; Verificar si alcanzamos EOF
000021BC  6700 007C               2202              BEQ     .EOF                      ; Si D0 = 1, finalizar lectura
000021C0                          2203  
000021C0  1011                    2204              MOVE.B  (A1),D0                   ; Mover el byte leído a D0 para procesarlo
000021C2                          2205  
000021C2                          2206              ; Verificar si es marcador de fin de fichero `#`
000021C2  B03C 0023               2207              CMP.B   #'#',D0                   ; Comparar el byte leído con `#`
000021C6  6700 0072               2208              BEQ     .EOF                      ; Si es `#`, finalizar lectura
000021CA                          2209  
000021CA                          2210              ; Verificar si es delimitador de bloque `?`
000021CA  B03C 003F               2211              CMP.B   #'?',D0                   ; Comparar el byte leído con `?`
000021CE  6700 0012               2212              BEQ     .MOSTRAR_PARTIDA          ; Si es `?`, procesar el número acumulado
000021D2                          2213  
000021D2                          2214              ; Si es un número ASCII, acumular en el buffer
000021D2  B03C 0030               2215              CMP.B   #'0',D0                   ; Verificar si es un número (>= '0')
000021D6  6DCC                    2216              BLT     .LEC                      ; Si es menor, ignorar y leer el siguiente
000021D8  B03C 0039               2217              CMP.B   #'9',D0                   ; Verificar si es un número (<= '9')
000021DC  6EC6                    2218              BGT     .LEC                      ; Si es mayor, ignorar y leer el siguiente
000021DE  10C0                    2219              MOVE.B  D0,(A0)+                  ; Acumular carácter en el buffer
000021E0  60C2                    2220              BRA     .LEC                      ; Continuar leyendo
000021E2                          2221  
000021E2                          2222  .MOSTRAR_PARTIDA
000021E2                          2223              ; Terminar la cadena acumulada con un NULL
000021E2  10BC 0000               2224              MOVE.B  #0,(A0)                   ; Añadir NULL al final del buffer
000021E6                          2225  
000021E6                          2226              ; Mostrar "PARTIDA : " antes del número
000021E6  43F9 00002273           2227              LEA     .TXT1,A1                  ; Dirección del texto base
000021EC  103C 000E               2228              MOVE.B  #14,D0                    ; Tarea 14: Mostrar texto sin CR, LF
000021F0  4E4F                    2229              TRAP    #15
000021F2                          2230  
000021F2                          2231              ; Convertir número del buffer de ASCII a decimal
000021F2  4281                    2232              CLR.L   D1                        ; Acumulador para el número convertido
000021F4  41F9 00002395           2233              LEA     ASCBFF,A0           ; Dirección del buffer
000021FA                          2234  .CONVERTIR
000021FA  1018                    2235              MOVE.B  (A0)+,D0                  ; Leer carácter del buffer
000021FC  B03C 0000               2236              CMP.B   #0,D0                     ; Verificar si es NULL (fin de cadena)
00002200  6700 000E               2237              BEQ     .MOSTRAR_NUMERO           ; Si es NULL, ir a mostrar el número
00002204  0400 0030               2238              SUB.B   #48,D0                    ; Convertir de ASCII a decimal
00002208  C2FC 000A               2239              MULU    #10,D1                    ; Multiplicar acumulador por 10
0000220C  D240                    2240              ADD.W   D0,D1                     ; Sumar el dígito convertido
0000220E  60EA                    2241              BRA     .CONVERTIR                ; Continuar con el siguiente carácter
00002210                          2242  
00002210                          2243  .MOSTRAR_NUMERO
00002210                          2244              ; Mostrar el número convertido en D1
00002210  2001                    2245              MOVE.L  D1,D0                     ; Mover número convertido a D0
00002212  103C 000F               2246              MOVE.B  #15,D0                    ; Tarea 15: Mostrar número en base 10
00002216  143C 000A               2247              MOVE.B  #10,D2                    ; Base 10
0000221A  4E4F                    2248              TRAP    #15
0000221C                          2249  
0000221C                          2250              ; Separar líneas
0000221C  43F9 0000227E           2251              LEA     .TXT2,A1
00002222  103C 000D               2252              MOVE.B  #13,D0                    ; Carriage return
00002226  4E4F                    2253              TRAP    #15
00002228  103C 000A               2254              MOVE.B  #10,D0                    ; Line feed
0000222C  4E4F                    2255              TRAP    #15
0000222E                          2256  
0000222E                          2257              ; Reiniciar el buffer para el siguiente número
0000222E  41F9 00002395           2258              LEA     ASCBFF,A0           ; Reiniciar puntero del buffer
00002234  5243                    2259              ADDQ.W  #1,D3                     ; Incrementar número de partida
00002236  6000 FF6C               2260              BRA     .LEC                      ; Continuar lectura
0000223A                          2261  
0000223A                          2262  .EOF
0000223A                          2263              ; Cerrar archivo
0000223A  2239 00002390           2264              MOVE.L  FILEID,D1                 ; File-ID del archivo
00002240  103C 0038               2265              MOVE.B  #56,D0                    ; Tarea 56: Cerrar archivo
00002244  4E4F                    2266              TRAP    #15
00002246                          2267  
00002246  4281                    2268              CLR.L   D1
00002248  103C 0051               2269              MOVE.B  #81,D0
0000224C  4E4F                    2270              TRAP    #15
0000224E                          2271              
0000224E  41F9 0000227F           2272              LEA     .TXT3,A0
00002254  103C 0014               2273              MOVE.B  #20,D0
00002258  4EB8 119E               2274              JSR     UTLPRINT
0000225C                          2275  
0000225C                          2276  
0000225C  4CDF 030F               2277              MOVEM.L (A7)+,D0-D3/A0-A1
00002260  4E75                    2278              RTS                               ; Retornar
00002262                          2279  
00002262                          2280  .ERROR
00002262  103C 0009               2281              MOVE.B  #9,D0                     ; Terminar el programa
00002266  4E4F                    2282              TRAP    #15
00002268= 50 55 4E 54 4F 53 ...   2283  .FILE       DC.B    'PUNTOS.TXT',0 ; Nombre del archivo, null-terminated
00002273= 50 41 52 54 49 44 ...   2284  .TXT1       DC.B    'PARTIDA : ',0
0000227E= 00                      2285  .TXT2       DC.B    '',0
0000227F= 50 52 45 53 53 20 ...   2286  .TXT3       DC.B    'PRESS S TO RETURN',0
00002292                          2287              DS.W    0
00002292                          2288  
00002292                          2289  -------------------- end include --------------------
00002292                          2290              INCLUDE 'STATES.X68'
00002292                          2291  ; =============================================================================
00002292                          2292  ; GAME STATE MANAGEMENT
00002292                          2293  ; =============================================================================
00002292                          2294  
00002292                          2295  ; -----------------------------------------------------------------------------
00002292                          2296  STAINIT
00002292                          2297  ; INITALIZES THE STATE MANAGER
00002292                          2298  ; INPUT    - NONE
00002292                          2299  ; OUTPUT   - NONE
00002292                          2300  ; MODIFIES - NONE
00002292                          2301  ; -----------------------------------------------------------------------------
00002292  33FC FFFF 0000238C      2302              MOVE.W  #STANONE,(STACUR)
0000229A  4279 0000238E           2303              CLR.W   (STANEXT)
000022A0  4E75                    2304              RTS
000022A2                          2305  
000022A2                          2306  ; -----------------------------------------------------------------------------
000022A2                          2307  STAUPD
000022A2                          2308  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000022A2                          2309  ; INPUT    - NONE
000022A2                          2310  ; OUTPUT   - NONE
000022A2                          2311  ; MODIFIES - NONE
000022A2                          2312  ; -----------------------------------------------------------------------------
000022A2  48E7 8080               2313              MOVEM.L D0/A0,-(A7)
000022A6                          2314              
000022A6  4280                    2315              CLR.L   D0
000022A8  3039 0000238E           2316              MOVE.W  (STANEXT),D0
000022AE  B079 0000238C           2317              CMP.W   (STACUR),D0
000022B4  6700 0012               2318              BEQ     .DOUPD
000022B8  33C0 0000238C           2319              MOVE.W  D0,(STACUR)             ; IF STATE CHANGED, DO INIT
000022BE  E588                    2320              LSL.L   #2,D0
000022C0  2040                    2321              MOVE.L  D0,A0
000022C2  2068 22E0               2322              MOVE.L  .INITBL(A0),A0
000022C6  4E90                    2323              JSR     (A0)
000022C8  4280                    2324  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000022CA  3039 0000238C           2325              MOVE.W  (STACUR),D0
000022D0  E588                    2326              LSL.L   #2,D0
000022D2  2040                    2327              MOVE.L  D0,A0
000022D4  2068 22F4               2328              MOVE.L  .UPDTBL(A0),A0
000022D8  4E90                    2329              JSR     (A0)
000022DA                          2330              
000022DA  4CDF 0101               2331              MOVEM.L (A7)+,D0/A0
000022DE  4E75                    2332              RTS
000022E0= 00001DD6 00001EF4 ...   2333  .INITBL     DC.L    ISCINIT,INSINIT,GAMINIT,GOVINIT,TABINIT
000022F4= 00001DDE 00001EFC ...   2334  .UPDTBL     DC.L    ISCUPD,INSUPD,GAMUPD,GOVUPD,TABUPD
00002308                          2335  
00002308                          2336  ; -----------------------------------------------------------------------------
00002308                          2337  STAPLOT
00002308                          2338  ; PERFORMS STATE PLOT
00002308                          2339  ; INPUT    - NONE
00002308                          2340  ; OUTPUT   - NONE
00002308                          2341  ; MODIFIES - NONE
00002308                          2342  ; -----------------------------------------------------------------------------
00002308  48E7 8080               2343              MOVEM.L D0/A0,-(A7)
0000230C  4280                    2344              CLR.L   D0
0000230E  3039 0000238C           2345              MOVE.W  (STACUR),D0
00002314  E588                    2346              LSL.L   #2,D0
00002316  2040                    2347              MOVE.L  D0,A0
00002318  2068 2324               2348              MOVE.L  .PLTTBL(A0),A0
0000231C  4E90                    2349              JSR     (A0)
0000231E  4CDF 0101               2350              MOVEM.L (A7)+,D0/A0
00002322  4E75                    2351              RTS
00002324= 00001E6A 00001F16 ...   2352  .PLTTBL     DC.L    ISCPLOT,INSPLOT,GAMPLOT,GOVPLOT,TABPLOT
00002338                          2353  
00002338                          2354  ; -----------------------------------------------------------------------------
00002338                          2355  STAEMPTY
00002338                          2356  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00002338                          2357  ; INPUT    - NONE
00002338                          2358  ; OUTPUT   - NONE
00002338                          2359  ; MODIFIES - NONE
00002338                          2360  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00002338                          2361  ; -----------------------------------------------------------------------------
00002338  4E75                    2362              RTS
0000233A                          2363  
0000233A                          2364  
0000233A                          2365  
0000233A                          2366  
0000233A                          2367  
0000233A                          2368  
0000233A                          2369  
0000233A                          2370  
0000233A                          2371  
0000233A                          2372  
0000233A                          2373  
0000233A                          2374  
0000233A                          2375  
0000233A                          2376  -------------------- end include --------------------
0000233A                          2377              
0000233A                          2378              
0000233A                          2379  START:
0000233A                          2380                  
0000233A                          2381  ; --- INIZIALIZACIÓN ---------------------------------------------------------
0000233A                          2382  
0000233A  007C 0700               2383              ORI.W   #$0700,SR
0000233E  4EB8 1000               2384              JSR     SYSINIT
00002342  4EB8 1188               2385              JSR     UTLINIT
00002346                          2386              ;JSR     GAMINIT
00002346  4EB8 2292               2387              JSR     STAINIT
0000234A                          2388  
0000234A                          2389  
0000234A                          2390  .LOOP
0000234A                          2391  
0000234A                          2392  ; --- ACTUALIZAR -------------------------------------------------------------
0000234A                          2393  
0000234A                          2394  ; LEER DISPOSITIVOS DE ENTRADA
0000234A                          2395  
0000234A  4E41                    2396              TRAP    #KBDUPTN
0000234C                          2397  
0000234C                          2398  ; ACTUALIZAR LÓGICA DEL JUEGO
0000234C                          2399              ;JSR     GAMUPD
0000234C  4EB8 22A2               2400              JSR     STAUPD
00002350                          2401              
00002350                          2402  ; --- SINCRONIZACIÓN ---------------------------------------------------------
00002350                          2403              
00002350  4A39 000026AA           2404  .WINT       TST.B   (SCRINTCT)
00002356  67F8                    2405              BEQ     .WINT   
00002358  4239 000026AA           2406              CLR.B   (SCRINTCT)         
0000235E                          2407  
0000235E                          2408  
0000235E                          2409  ; --- DIBUJAR ----------------------------------------------------------------
0000235E                          2410              
0000235E                          2411              ;JSR     GAMPLOT
0000235E  4EB8 2308               2412              JSR     STAPLOT
00002362                          2413              
00002362                          2414              
00002362  4E40                    2415              TRAP    #SCRUPTN                      ; ACTUALIZA DOBLE BUFFER
00002364                          2416  
00002364                          2417  
00002364  60E4                    2418              BRA     .LOOP
00002366                          2419  
00002366  FFFF FFFF               2420              SIMHALT
0000236A                          2421  
0000236A                          2422              INCLUDE 'VARS.X68'
0000236A                          2423  ; ----------------------------------------------------------------------------
0000236A                          2424  ; VARIABLES DEL JUEGO
0000236A                          2425  ; ----------------------------------------------------------------------------
0000236A                          2426  
0000236A                          2427  ; --- VARIABLES DE LA MANZANA ------------------------------------------------
0000236A                          2428  
0000236A                          2429  MNZPOSX     DS.W    1                       ; COORDENADA X DE LA MANZANA
0000236C                          2430  MNZPOSY     DS.W    1                       ; COORDENADA Y DE LA MANZANA
0000236E                          2431  
0000236E                          2432  ; --- VARIABLES DE LA SERPIENTE ----------------------------------------------
0000236E                          2433  
0000236E                          2434  CBZPOSX     DS.W    1                       ; COORDENADA X CABEZA
00002370                          2435  CBZPOSY     DS.W    1                       ; COORDENADA Y CABEZA
00002372                          2436  CBZVELX     DS.W    1                       ; VELOCIDAD X CABEZA
00002374                          2437  CBZVELY     DS.W    1                       ; VELOCIDAD Y CABEZA
00002376                          2438  COLPOSX     DS.W    1                       ; COORDENADA X COLA
00002378                          2439  COLPOSY     DS.W    1                       ; COORDENADA Y COLA
0000237A                          2440  SGMPOSX     DS.W    1                       ; COORDENADA X SEGMENTO
0000237C                          2441  SGMPOSY     DS.W    1                       ; COORDENADA Y SEGMENTO
0000237E                          2442  SGMPOSX2    DS.W    1                       ; COORDENADA X SEGMENTO 2
00002380                          2443  SGMPOSY2    DS.W    1                       ; COORDENADA Y SEGMENTO 2
00002382                          2444  
00002382                          2445  ; --- VARIABLES DEL MARCADOR -------------------------------------------------
00002382                          2446  
00002382                          2447  JGOPNTS     DS.W    1                       ; PUNTUACIÓN DEL JUEGO
00002384                          2448  JGOTIM      DS.W    1                       ; TEMPORIZADOR DEL JUEGO
00002386                          2449  
00002386                          2450  ; --- INTRO STATE RELATED VARIABLES ------------------------------------------
00002386                          2451  
00002386                          2452  ISCTIMER    DS.W    1                       ; INTRO TIMER
00002388                          2453  
00002388                          2454  ; --- INSTRUCTIONS  STATE RELATED VARIABLES ----------------------------------
00002388                          2455  INSTIMER    DS.W    1                       ;INTRUCTIONS TIMER
0000238A                          2456  
0000238A                          2457  ; -- GAME OVER STATE RELATED VARIABLES ---------------------------------------
0000238A                          2458  
0000238A                          2459  GOVTIMER    DS.W    1
0000238C                          2460  
0000238C                          2461  ; --- VARIABLES RELACIONADAS CON LOS ESTADOS ---------------------------------
0000238C                          2462  
0000238C                          2463  STACUR      DS.W    1                       ; ESTADO ACTUAL
0000238E                          2464  STANEXT     DS.W    1                       ; ESTADO SIGUIENTE
00002390                          2465  
00002390                          2466  ; --- VARIABLES PARA LEER/ESCRIBIR ARCHIVOS ----------------------------------
00002390                          2467  
00002390                          2468  FILEID      DS.L    1                       ; ID DEL ARCHIVO
00002394                          2469  BFFLEC      DS.B    1                       ; BUFFER PARA LEER ARCHIVO
00002395                          2470  ASCBFF      DS.B    10                      ; BUFFER PARA CONVERTIR A ASCII
000023A0                          2471              DS.W    0
000023A0                          2472  
000023A0                          2473  
000023A0                          2474  
000023A0                          2475  
000023A0                          2476  
000023A0                          2477  
000023A0                          2478  
000023A0                          2479  
000023A0                          2480  
000023A0                          2481  
000023A0                          2482  
000023A0                          2483  
000023A0                          2484  
000023A0                          2485  
000023A0                          2486  
000023A0                          2487  
000023A0                          2488  
000023A0                          2489  
000023A0                          2490  
000023A0                          2491  
000023A0                          2492  
000023A0                          2493  -------------------- end include --------------------
000023A0                          2494              INCLUDE 'LIB/UTLVARS.X68'
000023A0                          2495  ; =============================================================================
000023A0                          2496  ; UTILITY VARIABLES
000023A0                          2497  ; =============================================================================
000023A0                          2498  
000023A0                          2499  UTLRNDIX    DS.B    1                       ; NEXT INDEX TO RANDOM NUMBER
000023A2                          2500              DS.W    0
000023A2                          2501  -------------------- end include --------------------
000023A2                          2502              INCLUDE 'SYSVARS.X68'
000023A2                          2503  ; ----------------------------------------------------------------------------
000023A2                          2504  ; VARIABLES DEL SISTEMA
000023A2                          2505  ; ----------------------------------------------------------------------------
000023A2                          2506  
000023A2                          2507  ; --- VARIABLES DE LA MATRIZ -------------------------------------------------
000023A2                          2508  
000023A2                          2509  ESTDCLDS    DS.B    TCELDAS                 ; ESTADO DE LAS CELDAS 0=VACÍO  1=COLA   2=SEGMENTO  TRZPLOT=CABEZA  4?=MANZANA    
000026A2                          2510  ESTDCBZ     DS.B    1                       ; 0= DERECHA, 1=ARRIBA, 2=IZQUIERDA, 3=ABAJO
000026A3                          2511  
000026A3                          2512  ; --- VARIABLES DE TECLADO ---------------------------------------------------
000026A3                          2513  
000026A3                          2514  KBDVAL      DS.B    1
000026A4                          2515  KBDEDGE     DS.B    1                       ; KEY EDGE
000026A6                          2516  LASTKEY     DS.L    1                       
000026AA                          2517  
000026AA                          2518  ;--- TIMED INTERRUPT RELATED VARIABLES ---------------------------------------
000026AA                          2519              
000026AA                          2520  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER
000026AB                          2521  SCRCYCCT    DS.B    1                       ;CYCLE COUNTER
000026AC                          2522              DS.W    0
000026AC                          2523  
000026AC                          2524  
000026AC                          2525  
000026AC                          2526  
000026AC                          2527  
000026AC                          2528  
000026AC                          2529  
000026AC                          2530  
000026AC                          2531  
000026AC                          2532  
000026AC                          2533  
000026AC                          2534  
000026AC                          2535  
000026AC                          2536  
000026AC                          2537  
000026AC                          2538  -------------------- end include --------------------
000026AC                          2539      
000026AC                          2540      
000026AC                          2541              END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
APPLEINIT           179A
APPLEPLOT           180A
APPLEUPD            17CC
ARR                 1162
ASCBFF              2395
BFFLEC              2394
CBZFCOL             AA00
CBZHEIGH            14
CBZOCPD             1A5E
CBZPCOL             FF00
CBZPOSX             236E
CBZPOSY             2370
CBZVEL              14
CBZVELX             2372
CBZVELY             2374
CBZWIDTH            14
CHCKUPDT            17E4
CHECK               17A6
CHECKCLD            1B08
CHKBORDE            1380
CHKCOL              13AC
CINDMTRZ            1A24
CLDFREE             1B20
CLNCLDS             19A0
CNVICOOR            1ACC
COLFCOL             AA00
COLFND              90EE90
COLHEIGH            A
COLOCPD             1AA0
COLPCOL             FF00
COLPOSX             2376
COLPOSY             2378
COLWIDTH            A
CONT                20DA
CONT:DONE           20F2
CONTINU             1182
CONVERTIR_NUMERO    1534
CONVERTIR_NUMERO:CONVERTDELO  1540
DER                 1156
DIVX                1A2C
DIVY                1A40
DONEPLOT            1DAC
DWN                 117A
END                 2174
ENDDIVX             1A3C
ENDDIVY             1A50
ENDMULTX            1AF0
ENDMULTY            1B02
ERROR               1560
ESCRIBIR_CARACTER   1508
ESTDCBZ             26A2
ESTDCLDS            23A2
FILE                1566
FILEID              2390
FIN                 152E
FINESC              1522
FINUPD              1754
FONPLOT             1B26
GAMEOVER            13FA
GAMEOVER:ABRIR_ARCHIVO  1434
GAMEOVER:BUSCAR_FINAL  1456
GAMEOVER:CREAR_ARCHIVO  1494
GAMEOVER:ESCRIBIR   14AC
GAMEOVER:ESCRIBIR_BUCLE  14C0
GAMEOVER:ESCRIBIR_FIN_BLOQUE  14EC
GAMEOVER:POSICIONAR  1482
GAMINIT             194E
GAMPLOT             1978
GAMUPD              1968
GENPOSMNZ           1888
GOVINIT             20B8
GOVPLOT             20F8
GOVPLOT:DONE        2120
GOVPLOT:TXT1        2126
GOVPLOT:TXT2        2130
GOVTIMER            238A
GOVUPD              20C0
HEADINIT            12EE
HEADPLOT            1576
HEADUPD             130E
INSINIT             1EF4
INSMAXTM            1F4
INSPLOT             1F16
INSPLOT:DONE        1F32
INSPLOT:LOOP        1F24
INSPLOT:TXT1        1F38
INSPLOT:TXT2        1F62
INSPLOT:TXT3        1FAA
INSPLOT:TXT4        1FDB
INSPLOT:TXT5        2007
INSPLOT:TXT6        2022
INSPLOT:TXT7        2068
INSPLOT:TXTLST      2098
INSTIMER            2388
INSUPD              1EFC
INSUPD:DONE         1F14
ISCINIT             1DD6
ISCMAXTM            1F4
ISCPLOT             1E6A
ISCPLOT:DONE        1EA8
ISCPLOT:TXT1        1EAE
ISCPLOT:TXT2        1EC0
ISCPLOT:TXT3        1ED4
ISCTIMER            2386
ISCUPD              1DDE
ISCUPD:CONT         1E32
ISCUPD:DONE         1E64
ISCUPD:END          1E4A
ISCUPD:MAINLOOP     1DEC
IZQ                 116E
JGOPNTS             2382
JGOTIM              2384
KBDDOWN             28
KBDEDGE             26A4
KBDINIT             1106
KBDLEFT             25
KBDRIGHT            27
KBDUP               26
KBDUPD              1114
KBDUPTN             1
KBDVAL              26A3
LASTKEY             26A6
LNGINI              1
MARKMNZ             17BE
MAXSGM              1
MCLDVCIA            1A74
MNZFCOL             FF
MNZHEIGH            14
MNZOCPD             1AB6
MNZPCOL             AAFF
MNZPOSX             236A
MNZPOSY             236C
MNZWIDTH            14
MTZINIT             1992
MTZPLOT             1D68
MTZUPD              1B64
MTZUPD:ABRIR_ARCHIVO  1C26
MTZUPD:BUSCAR_FINAL  1C48
MTZUPD:CLNCLDS      1B72
MTZUPD:CONVERTDELO  1D32
MTZUPD:CONVERTIR_NUMERO  1D26
MTZUPD:CREAR_ARCHIVO  1C86
MTZUPD:ERROR        1D52
MTZUPD:ESCRIBIR     1C9E
MTZUPD:ESCRIBIR_BUCLE  1CB2
MTZUPD:ESCRIBIR_CARACTER  1CFA
MTZUPD:ESCRIBIR_FIN_BLOQUE  1CDE
MTZUPD:FILE         1D58
MTZUPD:FIN          1D20
MTZUPD:FINESC       1D14
MTZUPD:GAMEOVER     1BF2
MTZUPD:POSICIONAR   1C74
MTZUPD:TXT1         1D63
MTZUPD:TXT2         1D65
MULTLOOPX           1AE2
MULTLOOPY           1AF4
NEWMNZ              17FC
NOCOL               13DE
NUMCLMNS            20
NUMFILAS            18
OJOFCOL             FFFFFF
OJOHEIGH            A
OJOPCOL             0
OJOWIDTH            A
PANHEIGH            1E0
PANWIDTH            280
PLOTAPPLE           1DD0
PLOTCBZ             1DB8
PLOTCLDS            1D82
PLOTCOL             1DC4
PLOTSEG             1DCA
PLOTVAC             1DBE
PNTSFCOL            0
PNTSTEXT            65
SCOINIT             18BA
SCOPLOT             18EA
SCOPLOT:TXT1        193A
SCOPLOT:TXT2        1944
SCOUPD              18D0
SCRCYCCT            26AB
SCRFPS              32
SCRINIT             109A
SCRINTCT            26AA
SCRINTN             1
SCRPLOT             10EC
SCRTIM              10DE
SCRUPTN             0
SEGINIT             15FA
SEGPLOT             16BA
SEGUPD              1628
SGMFCOL             AA00
SGMHEIGH            14
SGMOCPD             1A8A
SGMPCOL             FF00
SGMPOSX             237A
SGMPOSX2            237E
SGMPOSY             237C
SGMPOSY2            2380
SGMWIDTH            14
SIGABA              1378
SIGARR              1360
SIGDER              1354
SIGIZQ              136C
SIZECLDA            14
SNDEAT              0
SNDGMOV             1
SNDINIT             103A
SNDINIT:DONE        1058
SNDINIT:LOOP        1046
SNDINIT:SNDEAT      105E
SNDINIT:SNDGMOV     106A
SNDINIT:SNDLIST     107C
SNDPLAY             1088
SNDPLTN             2
STACUR              238C
STAEMPTY            2338
STAINIT             2292
STANEXT             238E
STANONE             FFFFFFFF
STAPLOT             2308
STAPLOT:PLTTBL      2324
START               233A
START:LOOP          234A
START:WINT          2350
STAUPD              22A2
STAUPD:DOUPD        22C8
STAUPD:INITBL       22E0
STAUPD:UPDTBL       22F4
SYSINIT             1000
TABINIT             215C
TABPLOT             2176
TABPLOT:CONVERTIR   21FA
TABPLOT:EOF         223A
TABPLOT:ERROR       2262
TABPLOT:FILE        2268
TABPLOT:LEC         21A4
TABPLOT:MOSTRAR_NUMERO  2210
TABPLOT:MOSTRAR_PARTIDA  21E2
TABPLOT:TXT1        2273
TABPLOT:TXT2        227E
TABPLOT:TXT3        227F
TABUPD              215E
TAILINIT            16FA
TAILPLOT            175A
TAILUPD             170C
TCELDAS             300
TXT1                1571
TXT2                1573
UTLCHRWD            8
UTLINIT             1188
UTLPRINT            119E
UTLPRINT:ENDLOOP    11B0
UTLPRINT:LOOP       11A6
UTLRAND             11D0
UTLRAND:RANDVEC     11EE
UTLRNDIX            23A0
