00002102 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 02/01/2025 0:17:38

00000000                             1  *-----------------------------------------------------------------------------
00000000                             2  * Title      : MAIN
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------------------------
00000000                             7  
00001000                             8              ORG    $1000
00001000                             9              
00001000                            10              INCLUDE 'CONST.X68'
00001000                            11  ; ----------------------------------------------------------------------------
00001000                            12  ; CONSTANTES DEL JUEGO
00001000                            13  ; ----------------------------------------------------------------------------
00001000                            14     
00001000                            15  ; --- CONSTANTES DE LA MANZANA -----------------------------------------------
00001000                            16  
00001000  =00000014                 17  MNZWIDTH    EQU     20                      ; ANCHURA DE LA MANZANA (a determinar)
00001000  =00000014                 18  MNZHEIGH    EQU     20                      ; ALTURA DE LA MANZANA (a determinar)
00001000  =0000AAFF                 19  MNZPCOL     EQU     $0000AAFF               ; COLOR CONTORNO MANZANA (a determinar)
00001000  =000000FF                 20  MNZFCOL     EQU     $000000FF               ; COLOR RELLENO MANZANA (a determinar)
00001000                            21  
00001000                            22  ; --- CONSTANTES DE LA SERPIENTE ---------------------------------------------
00001000                            23  
00001000  =00000001                 24  MAXSGM      EQU     1                       ; TAMAÑO MÁXIMO DE SEGMENTOS (a determinar)
00001000  =00000001                 25  LNGINI      EQU     1                       ; LONGITUD INICIAL SERPIENTE (a determinar)
00001000  =00000014                 26  CBZVEL      EQU     20                      ; VELOCIDAD DE LA CABEZA (a determinar)
00001000  =00000014                 27  SGMWIDTH    EQU     20                      ; ANCHURA DE UN SEGMENTO (PROVISIONAL)
00001000  =00000014                 28  SGMHEIGH    EQU     20                      ; ALTURA DE UN SEGMENTO (PROVISIONAL)
00001000  =0000FF00                 29  SGMPCOL     EQU     $0000FF00               ; COLOR CONTORNO SEGMENTO (PROVISIONAL)
00001000  =0000AA00                 30  SGMFCOL     EQU     $0000AA00               ; COLOR RELLENO SEGMENTO (PROVISIONAL)
00001000  =0000000A                 31  COLWIDTH    EQU     10                      ; ANCHURA DE LA COLA (PROVISIONAL)
00001000  =0000000A                 32  COLHEIGH    EQU     10                      ; ALTURA DE LA COLA (PROVISIONAL)
00001000  =0000FF00                 33  COLPCOL     EQU     $0000FF00               ; COLOR CONTORNO COLA (PROVISIONAL)
00001000  =0000AA00                 34  COLFCOL     EQU     $0000AA00               ; COLOR RELLENO COLA (PROVISIONAL)
00001000  =00000014                 35  CBZWIDTH    EQU     20                      ; ANCHURA DE LA CABEZA (PROVISIONAL)
00001000  =00000014                 36  CBZHEIGH    EQU     20                      ; ALTURA DE LA CABEZA (PROVISIONAL)
00001000  =0000FF00                 37  CBZPCOL     EQU     $0000FF00               ; COLOR CONTORNO CABEZA (PROVISIONAL)
00001000  =0000AA00                 38  CBZFCOL     EQU     $0000AA00               ; COLOR RELLENO CABEZA (PROVISIONAL)
00001000  =0000000A                 39  OJOWIDTH    EQU     10                      ; ANCHURA DE OJO DE SERPIENTE
00001000  =0000000A                 40  OJOHEIGH    EQU     10                      ; ALTURA DE OJO DE SERPIENTE
00001000  =00000000                 41  OJOPCOL     EQU     $00000000               ; COLOR CONTORNO OJO
00001000  =00FFFFFF                 42  OJOFCOL     EQU     $00FFFFFF               ; COLOR RELLENO OJO            
00001000                            43  
00001000                            44  ; --- CONSTANTES MARCADOR ----------------------------------------------------
00001000                            45  
00001000  =00000000                 46  PNTSFCOL    EQU     $00000000               ; COLOR FONDO MARCADOR (a determinar)
00001000  =00000065                 47  PNTSTEXT    EQU     0101                    ; COORDENADAS DEL MARCADOR (a determinar)
00001000                            48  
00001000                            49  ; --- CONSTANTES RELACIONADAS CON LOS ESTADOS --------------------------------
00001000                            50  
00001000  =FFFFFFFF                 51  STANONE     EQU     -1                      ; NÚMERO DE ESTADO NO EXISTENTE
00001000  =000001F4                 52  ISCMAXTM    EQU     500                     ;INTRO SCREEN WAITING CYCLES
00001000  =000001F4                 53  INSMAXTM    EQU     500                     ;INTRUCTIONS SCREEN WAINTING CYCLES
00001000                            54  
00001000                            55  
00001000                            56  
00001000                            57  
00001000                            58  -------------------- end include --------------------
00001000                            59              INCLUDE 'SYSCONST.X68'
00001000                            60  ; ----------------------------------------------------------------------------
00001000                            61  ; CONSTANTES DEL SISTEMA
00001000                            62  ; ----------------------------------------------------------------------------
00001000                            63  
00001000                            64  ; ---CONSTANTES DE LA PANTALLA------------------------------------------------
00001000                            65  
00001000  =00000280                 66  PANWIDTH    EQU     640                     ; ANCHO DE LA PANTALLA
00001000  =000001E0                 67  PANHEIGH    EQU     480                     ; ALTURA DE LA PANTALLA
00001000  =0090EE90                 68  COLFND      EQU     $90EE90                 ; COLOR DEL FONDO DE LA PANTALLA
00001000  =00000032                 69  SCRFPS      EQU     50
00001000                            70  
00001000                            71  ; ---CONSTANTES DE LA MATRIZ--------------------------------------------------
00001000                            72  
00001000  =00000014                 73  SIZECLDA    EQU     20                      ; TAMAÑO DE CADA CELDA EN PIXELES
00001000  =00000020                 74  NUMCLMNS    EQU     32                      ; COLUMNAS DE CELDAS (640/10)
00001000  =00000018                 75  NUMFILAS    EQU     24                      ; FILAS DE CELDAS (480/10)
00001000  =00000300                 76  TCELDAS     EQU     768                     ; TOTAL DE CELDAS (64 * 48)
00001000                            77  
00001000                            78  ; ---CÓDIGOS DE TECLADO-------------------------------------------------------
00001000                            79  
00001000  =00000025                 80  KBDLEFT     EQU     $25
00001000  =00000026                 81  KBDUP       EQU     $26
00001000  =00000027                 82  KBDRIGHT    EQU     $27
00001000  =00000028                 83  KBDDOWN     EQU     $28
00001000                            84  
00001000                            85  ; --- IDENTIFICADORES DE SONIDO ----------------------------------------------
00001000                            86  
00001000  =00000000                 87  SNDEAT      EQU     0
00001000  =00000001                 88  SNDGMOV     EQU     1
00001000                            89  
00001000                            90  ; --- NÚMEROS DE TRAP --------------------------------------------------------
00001000                            91  
00001000  =00000000                 92  SCRUPTN     EQU     0                       ; SCREEN UPDATE TRAP NUMBER
00001000  =00000001                 93  KBDUPTN     EQU     1                       ; KEYBOARD TRAP NUMBER
00001000  =00000002                 94  SNDPLTN     EQU     2                       ; SOUND TRAP NUMBER
00001000                            95  
00001000                            96  ; --- NÚMEROS DE INTERRUPCIÓN ------------------------------------------------
00001000                            97  
00001000  =00000001                 98  SCRINTN     EQU     1     
00001000                            99  
00001000                           100  
00001000                           101  
00001000                           102  
00001000                           103  
00001000                           104  
00001000                           105  -------------------- end include --------------------
00001000                           106              INCLUDE 'SYSTEM.X68'
00001000                           107   
00001000                           108   
00001000                           109  SYSINIT
00001000                           110  ; INICIA EL  SISTEMA
00001000                           111  ; INPUT    : NONE
00001000                           112  ; OUTPUT   : NONE
00001000                           113  ; MODIFIES : NONE
00001000                           114  ; ----------------------------------------------------------------------------
00001000                           115              
00001000  21FC 000010EC 0080       116              MOVE.L  #SCRPLOT,($80+SCRUPTN*4)
00001008  21FC 00001114 0084       117              MOVE.L  #KBDUPD,($80+KBDUPTN*4)
00001010  21FC 00001088 0088       118              MOVE.L  #SNDPLAY,($80+SNDPLTN*4)
00001018  21FC 000010DE 0064       119              MOVE.L  #SCRTIM,($60+SCRINTN*4)
00001020                           120              
00001020  4EB9 0000109A            121              JSR     SCRINIT
00001026  4EB9 00001106            122              JSR     KBDINIT
0000102C  4EB9 0000103A            123              JSR     SNDINIT
00001032                           124              
00001032  40E7                     125              MOVE.W  SR,-(A7)
00001034  0257 D8FF                126              ANDI.W  #$D8FF,(A7)
00001038                           127              
00001038  4E73                     128              RTE
0000103A                           129              
0000103A                           130  ; ----------------------------------------------------------------------------
0000103A                           131  SNDINIT
0000103A                           132  ; SOUND SYSTEM INIT
0000103A                           133  ; INPUT    : NONE
0000103A                           134  ; OUTPUT   : NONE
0000103A                           135  ; MODIFIES : NONE
0000103A                           136  ; ----------------------------------------------------------------------------
0000103A                           137  
0000103A  48E7 C0C0                138              MOVEM.L D0-D1/A0-A1,-(A7)
0000103E                           139  
0000103E  4201                     140              CLR.B   D1
00001040  41F9 0000107C            141              LEA     .SNDLIST,A0
00001046  2018                     142  .LOOP       MOVE.L  (A0)+,D0
00001048  6700 000E                143              BEQ     .DONE
0000104C  2240                     144              MOVE.L  D0,A1
0000104E  103C 0047                145              MOVE.B  #71,D0
00001052  4E4F                     146              TRAP    #15
00001054  5201                     147              ADDQ.B  #1,D1
00001056  60EE                     148              BRA     .LOOP
00001058                           149              
00001058  4CDF 0303                150  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
0000105C  4E75                     151              RTS
0000105E                           152              
0000105E= 53 4E 44 2F 45 41 ...    153  .SNDEAT     DC.B    'SND/EAT.wav',0
0000106A= 53 4E 44 2F 47 41 ...    154  .SNDGMOV    DC.B    'SND/GAMEOVER.wav',0
0000107C= 0000105E 0000106A ...    155  .SNDLIST    DC.L    .SNDEAT,.SNDGMOV,0
00001088                           156              
00001088                           157  ; ----------------------------------------------------------------------------
00001088                           158  SNDPLAY
00001088                           159  ; PLAY SOUND
00001088                           160  ; INPUT    : D7 SOUND ID
00001088                           161  ; OUTPUT   : NONE
00001088                           162  ; MODIFIES : NONE
00001088                           163  ; ----------------------------------------------------------------------------            
00001088                           164              
00001088  48A7 C000                165              MOVEM.W D0-D1,-(A7)
0000108C                           166              
0000108C  103C 0048                167              MOVE.B  #72,D0
00001090  1207                     168              MOVE.B  D7,D1
00001092  4E4F                     169              TRAP    #15
00001094                           170              
00001094  4C9F 0003                171              MOVEM.W (A7)+,D0-D1
00001098  4E73                     172              RTE
0000109A                           173               
0000109A                           174              
0000109A                           175  ; ----------------------------------------------------------------------------
0000109A                           176  SCRINIT
0000109A                           177  ; INIT SCREEN. SET SCREEN RESOLUTION, SET WINDOWED MODE, CLEAR SCREEN,
0000109A                           178  ; ENABLE DOUBLE BUFFER, ENABLED TIMED INTERRUPT.
0000109A                           179  ; INPUT    : NONE
0000109A                           180  ; OUTPUT   : NONE
0000109A                           181  ; MODIFIES : NONE
0000109A                           182  ; ----------------------------------------------------------------------------
0000109A                           183  
0000109A  48E7 C000                184              MOVEM.L D0-D1,-(A7)
0000109E                           185  
0000109E                           186              ; SET SCREEN RESOLUTION
0000109E  103C 0021                187              MOVE.B  #33,D0
000010A2  223C 028001E0            188              MOVE.L  #PANWIDTH<<16|PANHEIGH,D1
000010A8  4E4F                     189              TRAP    #15
000010AA                           190              
000010AA                           191              ; SET WINDOWED MODE
000010AA  7201                     192              MOVE.L  #1,D1
000010AC  4E4F                     193              TRAP    #15
000010AE                           194              
000010AE                           195              ; CLEAR SCREEN
000010AE  103C 000B                196              MOVE.B  #11,D0
000010B2  323C FF00                197              MOVE.W  #$FF00,D1
000010B6  4E4F                     198              TRAP    #15
000010B8                           199              
000010B8                           200              ; ENABLE DOUBLE BUFFER
000010B8  103C 005C                201              MOVE.B  #92,D0
000010BC  123C 0011                202              MOVE.B  #17,D1
000010C0  4E4F                     203              TRAP    #15
000010C2                           204              
000010C2                           205              ; ENABLE TIMED INTERRUPT
000010C2  103C 0020                206              MOVE.B  #32,D0
000010C6  123C 0006                207              MOVE.B  #6,D1
000010CA  143C 0081                208              MOVE.B  #$80|SCRINTN,D2
000010CE  7614                     209              MOVE.L  #1000/SCRFPS,D3                  ; CON 20 SE CONSIUGUEN 50 FPS
000010D0  4E4F                     210              TRAP    #15
000010D2                           211              
000010D2                           212              ; CLEAR INTERRUPT COUNTER
000010D2  4279 00002466            213              CLR.W   (SCRINTCT)
000010D8                           214              
000010D8  4CDF 0003                215              MOVEM.L (A7)+,D0-D1
000010DC                           216              
000010DC  4E75                     217              RTS    
000010DE                           218              
000010DE                           219  ; ------------------------------------------------------------------------------
000010DE                           220  SCRTIM
000010DE                           221  ; TIMED INTERRUPT SERVICE ROUTINE
000010DE                           222  ; INPUT    : NONE
000010DE                           223  ; OUTPUT   : NONE
000010DE                           224  ; MODIFIES : NONE
000010DE                           225  ; ------------------------------------------------------------------------------
000010DE  5239 00002466            226              ADDQ.B  #1,(SCRINTCT)
000010E4  5239 00002467            227              ADDQ.B  #1,(SCRCYCCT)
000010EA  4E73                     228              RTE
000010EC                           229              
000010EC                           230  
000010EC                           231  ; ------------------------------------------------------------------------------
000010EC                           232  SCRPLOT
000010EC                           233  ; UPDATES DOUBLE BUFFER
000010EC                           234  ; INPUT    : NONE
000010EC                           235  ; OUTPUT   : NONE
000010EC                           236  ; MODIFIES : NONE
000010EC                           237  ; ------------------------------------------------------------------------------
000010EC                           238  
000010EC  48A7 C000                239              MOVEM.W D0-D1,-(A7)
000010F0                           240              
000010F0                           241              ; SWITCH BUFFERS
000010F0  103C 005E                242              MOVE.B  #94,D0
000010F4  4E4F                     243              TRAP    #15
000010F6                           244              
000010F6                           245              ; CLEAR HIDDEN BUFFER
000010F6  103C 000B                246              MOVE.B  #11,D0
000010FA  323C FF00                247              MOVE.W  #$FF00,D1
000010FE  4E4F                     248              TRAP    #15
00001100                           249              
00001100  4C9F 0003                250              MOVEM.W (A7)+,D0-D1
00001104                           251              
00001104  4E73                     252              RTE
00001106                           253          
00001106                           254  ; ------------------------------------------------------------------------------
00001106                           255  KBDINIT
00001106                           256  ; INIT KEYBOARD
00001106                           257  ; INPUT    : NONE
00001106                           258  ; OUTPUT   : NONE
00001106                           259  ; MODIFIES : NONE
00001106                           260  ; ------------------------------------------------------------------------------
00001106                           261  
00001106  4239 0000245F            262              CLR.B   (KBDVAL)
0000110C  4239 00002460            263              CLR.B   (KBDEDGE)
00001112  4E75                     264              RTS
00001114                           265  
00001114                           266  ; ------------------------------------------------------------------------------
00001114                           267  KBDUPD
00001114                           268  ; UPDATE KEYBOARD INFO.  
00001114                           269  ; 7 -> PAUSE
00001114                           270  ; 6 -> FIRE 3
00001114                           271  ; 5 -> FIRE 2
00001114                           272  ; 4 -> FIRE 1
00001114                           273  ; 3 -> DOWN
00001114                           274  ; 2 -> RIGHT
00001114                           275  ; 1 -> UP
00001114                           276  ; 0 -> LEFT
00001114                           277  ; INPUT    : NONE
00001114                           278  ; OUTPUT   : NONE
00001114                           279  ; MODIFIES : NONE
00001114                           280  ; ------------------------------------------------------------------------------
00001114                           281  
00001114  48E7 C000                282              MOVEM.L D0-D1,-(A7)
00001118                           283  
00001118                           284              ; LEE ESTADO DEL TECLADO
00001118  103C 0013                285              MOVE.B  #19,D0
0000111C  223C 25262728            286              MOVE.L  #KBDLEFT<<24|KBDUP<<16|KBDRIGHT<<8|KBDDOWN,D1
00001122  4E4F                     287              TRAP    #15                  ; Lee las teclas y guarda en D1
00001124                           288              
00001124  23C1 00002460            289              MOVE.L  D1,(KBDEDGE)
0000112A                           290  
0000112A  B2BC 000000FF            291              CMP.L   #$000000FF,D1
00001130  6700 0048                292              BEQ     DWN
00001134  B2BC 0000FF00            293              CMP.L   #$0000FF00,D1
0000113A  6700 001A                294              BEQ     DER
0000113E  B2BC 00FF0000            295              CMP.L   #$00FF0000,D1
00001144  6700 001C                296              BEQ     ARR
00001148  B2BC FF000000            297              CMP.L   #$FF000000,D1
0000114E  6700 001E                298              BEQ     IZQ
00001152                           299  
00001152                           300              ; Si no hay pulsaciones, mantener estado
00001152  6000 002E                301              BRA     CONTINU
00001156                           302  
00001156  33FC 0000 0000245E       303  DER:        MOVE.W  #0,(ESTDCBZ)           ; Actualiza estado a DERECHA
0000115E  6000 0022                304              BRA     CONTINU
00001162                           305              
00001162  33FC 0001 0000245E       306  ARR:        MOVE.W  #1,(ESTDCBZ)           ; Actualiza estado a ARRIBA
0000116A  6000 0016                307              BRA     CONTINU
0000116E                           308  
0000116E  33FC 0002 0000245E       309  IZQ:        MOVE.W  #2,(ESTDCBZ)           ; Actualiza estado a IZQUIERDA
00001176  6000 000A                310              BRA     CONTINU                    
0000117A                           311  
0000117A  33FC 0003 0000245E       312  DWN:        MOVE.W  #3,(ESTDCBZ)           ; Actualiza estado a ABAJO
00001182                           313  
00001182                           314  CONTINU:
00001182  4CDF 0003                315              MOVEM.L (A7)+,D0-D1
00001186  4E73                     316              RTE
00001188                           317   
00001188                           318  -------------------- end include --------------------
00001188                           319              INCLUDE 'LIB/UTLCODE.X68'
00001188                           320  ; =============================================================================
00001188                           321  ; UTILITY CODE
00001188                           322  ; =============================================================================
00001188                           323  
00001188                           324  ; -----------------------------------------------------------------------------
00001188                           325  UTLINIT
00001188                           326  ; INITIALIZES UTILITY CODE
00001188                           327  ; INPUT    - NONE
00001188                           328  ; OUTPUT   - NONE
00001188                           329  ; MODIFIES - NONE
00001188                           330  ; -----------------------------------------------------------------------------
00001188  48E7 C000                331              MOVEM.L D0-D1,-(A7)
0000118C  103C 0008                332              MOVE.B  #8,D0
00001190  4E4F                     333              TRAP    #15
00001192  13C1 0000215C            334              MOVE.B  D1,(UTLRNDIX)
00001198  4CDF 0003                335              MOVEM.L (A7)+,D0-D1
0000119C  4E75                     336              RTS
0000119E                           337  
0000119E                           338  
0000119E                           339  ; -----------------------------------------------------------------------------
0000119E                           340  UTLPRINT
0000119E                           341  ; PRINT SCREEN CENTERED TEXT
0000119E                           342  ; INPUT    : A0 POINTER TO ZERO-TERMINATED STRING
0000119E                           343  ;            D0.B SCREEN ROW TO PRINT TEXT
0000119E                           344  ; OUTPUT   : D0.B NEXT ROW
0000119E                           345  ; MODIFIES : NONE (ASIDE OF OUTPUT)
0000119E                           346  ; -----------------------------------------------------------------------------
0000119E  48E7 C0C0                347              MOVEM.L D0-D1/A0-A1,-(A7)
000011A2  4201                     348              CLR.B   D1
000011A4  2248                     349              MOVE.L  A0,A1
000011A6  4A18                     350  .LOOP       TST.B   (A0)+
000011A8  6700 0006                351              BEQ     .ENDLOOP
000011AC  5201                     352              ADDQ.B  #1,D1
000011AE  60F6                     353              BRA     .LOOP
000011B0  E209                     354  .ENDLOOP    LSR.B   #1,D1
000011B2  0401 0028                355              SUB.B   #(PANWIDTH/UTLCHRWD)/2,D1
000011B6  4401                     356              NEG.B   D1
000011B8  E141                     357              ASL.W   #8,D1
000011BA  8240                     358              OR.W    D0,D1
000011BC  103C 000B                359              MOVE.B  #11,D0
000011C0  4E4F                     360              TRAP    #15
000011C2  103C 000D                361              MOVE.B  #13,D0
000011C6  4E4F                     362              TRAP    #15
000011C8  4CDF 0303                363              MOVEM.L (A7)+,D0-D1/A0-A1
000011CC  5200                     364              ADDQ.B  #1,D0
000011CE  4E75                     365              RTS
000011D0                           366              
000011D0                           367              
000011D0                           368  
000011D0                           369  
000011D0                           370              ; (SCRWIDTH/UTLCHRWD)/2 - D1/2
000011D0                           371  
000011D0                           372  ; -----------------------------------------------------------------------------
000011D0                           373  UTLRAND
000011D0                           374  ; PROVIDES A PSEUDO-RANDOM BYTE
000011D0                           375  ; INPUT    - NONE
000011D0                           376  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011D0                           377  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011D0                           378  ; -----------------------------------------------------------------------------
000011D0  2F08                     379              MOVE.L  A0,-(A7)
000011D2  41F9 000011EE            380              LEA     .RANDVEC,A0
000011D8  4280                     381              CLR.L   D0
000011DA  1039 0000215C            382              MOVE.B  (UTLRNDIX),D0
000011E0  1030 0800                383              MOVE.B  (A0,D0.L),D0
000011E4  5239 0000215C            384              ADDQ.B  #1,(UTLRNDIX)
000011EA  205F                     385              MOVE.L  (A7)+,A0
000011EC  4E75                     386              RTS
000011EE                           387  
000011EE                           388  
000011EE= A2 EE 9A 0C F5 24 ...    389  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
000011F6= 2A A3 51 26 E0 AC ...    390              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
000011FE= 75 51 CA FD 33 EB ...    391              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001206= 60 CC E7 B8 9A EB ...    392              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000120E= 1D 76 B5 95 B0 89 ...    393              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001216= 39 15 48 C9 6E CA ...    394              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000121E= 43 E7 E2 7C 37 25 ...    395              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001226= E9 94 CE E9 E4 52 ...    396              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000122E= 37 6D 9A 84 A2 28 ...    397              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001236= 19 E2 C6 77 80 D4 ...    398              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000123E= 0A 5A 32 67 33 C2 ...    399              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001246= 59 80 DC 0E 57 FC ...    400              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000124E= 8A AB BC F7 07 4D ...    401              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001256= EF D5 77 6E 1E BB ...    402              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000125E= D6 E0 2A 8F BD 28 ...    403              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001266= 13 4F 66 EC 0A 64 ...    404              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000126E= 56 52 9A 16 9B 90 ...    405              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
00001276= 06 8A A4 F7 01 DA ...    406              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
0000127E= F2 E7 77 28 B1 76 ...    407              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
00001286= A4 42 E3 81 B1 67 ...    408              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
0000128E= BF CE FA 16 BF 38 ...    409              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
00001296= D1 8B 50 0C 5F 49 ...    410              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
0000129E= DE 4C 14 A2 40 DC ...    411              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012A6= B6 9B 0A 38 5D AB ...    412              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012AE= E2 1B DD 75 15 82 ...    413              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012B6= 8A 26 51 30 9F 47 ...    414              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012BE= 1E 8A BB 71 C6 6E ...    415              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012C6= 9F 47 E5 34 94 27 ...    416              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012CE= 7D 06 D6 BA 30 0F ...    417              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
000012D6= EC 7F 7E 03 CF 2D ...    418              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
000012DE= 94 5B 23 F2 8B CD ...    419              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
000012E6= 74 33 EC B9 0F D5 ...    420              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
000012EE                           421  
000012EE                           422  
000012EE                           423  -------------------- end include --------------------
000012EE                           424              INCLUDE 'LIB/UTLCONST.X68'
000012EE                           425  ; ==============================================================================
000012EE                           426  ; UTIL CONSTANTS
000012EE                           427  ; ==============================================================================
000012EE                           428  
000012EE  =00000008                429  UTLCHRWD    EQU     8                       ; CHARACTER WIDTH IN PIXELS
000012EE  =00000008                430  -------------------- end include --------------------
000012EE                           431              INCLUDE 'HEADSRP.X68'
000012EE                           432  
000012EE                           433  ; ------------------------------------------------------------------------------
000012EE                           434  HEADINIT
000012EE                           435  ; INICIALIZAR CABEZA.
000012EE                           436  ; INPUT    : NONE 
000012EE                           437  ; OUTPUT   : NONE
000012EE                           438  ; MODIFIES : NONE
000012EE                           439  ; ------------------------------------------------------------------------------
000012EE  33FC 0140 00002136       440              MOVE.W  #PANWIDTH/2,(CBZPOSX)
000012F6  33FC 00F0 00002138       441              MOVE.W  #PANHEIGH/2,(CBZPOSY)
000012FE  4279 0000245E            442              CLR.W   (ESTDCBZ)
00001304  33FC 0000 0000245E       443              MOVE.W  #0,(ESTDCBZ)
0000130C  4E75                     444              RTS
0000130E                           445              
0000130E                           446  ; ------------------------------------------------------------------------------
0000130E                           447  HEADUPD
0000130E                           448  ; ACTUALIZAR CABEZA.
0000130E                           449  ; INPUT    : NONE 
0000130E                           450  ; OUTPUT   : NONE
0000130E                           451  ; MODIFIES : NONE
0000130E                           452  ; ------------------------------------------------------------------------------
0000130E                           453  
0000130E  48A7 E100                454              MOVEM.W D0-D2/D7,-(A7)
00001312                           455  
00001312                           456              ; Marcar celda actual como vacía
00001312  3239 00002136            457              MOVE.W  (CBZPOSX),D1
00001318  3439 00002138            458              MOVE.W  (CBZPOSY),D2
0000131E  4EB9 000018BC            459              JSR     CINDMTRZ
00001324  4EB9 0000190C            460              JSR     MCLDVCIA
0000132A                           461              
0000132A                           462              ; Actualiza la posición de la cabeza según ESTDCBZ
0000132A  3039 0000245E            463              MOVE.W  (ESTDCBZ),D0
00001330  B07C 0000                464              CMP.W   #0,D0
00001334  6700 001E                465              BEQ     SIGDER
00001338  B07C 0001                466              CMP.W   #1,D0
0000133C  6700 0022                467              BEQ     SIGARR
00001340  B07C 0002                468              CMP.W   #2,D0
00001344  6700 0026                469              BEQ     SIGIZQ
00001348  B07C 0003                470              CMP.W   #3,D0
0000134C  6700 002A                471              BEQ     SIGABA
00001350                           472  
00001350                           473              ; Si no hay dirección válida, sale
00001350  6000 00B6                474              BRA     FIN
00001354                           475  
00001354                           476  SIGDER:
00001354  0679 0014 00002136       477              ADD.W   #CBZVEL,(CBZPOSX)
0000135C  6000 0022                478              BRA     CHKBORDE
00001360                           479  
00001360                           480  SIGARR:
00001360  0479 0014 00002138       481              SUB.W   #CBZVEL,(CBZPOSY)
00001368  6000 0016                482              BRA     CHKBORDE
0000136C                           483  
0000136C                           484  SIGIZQ:
0000136C  0479 0014 00002136       485              SUB.W   #CBZVEL,(CBZPOSX)
00001374  6000 000A                486              BRA     CHKBORDE
00001378                           487  
00001378                           488  SIGABA:
00001378  0679 0014 00002138       489              ADD.W   #CBZVEL,(CBZPOSY)
00001380                           490              
00001380                           491  CHKBORDE:
00001380                           492              ; Verificar colisiones con los bordes
00001380  3239 00002136            493              MOVE.W  (CBZPOSX),D1
00001386  B27C 0280                494              CMP.W   #PANWIDTH,D1                 ; Si CBZPOSX < 0
0000138A  6E00 006E                495              BGT     GAMEOVER
0000138E  B27C 0000                496              CMP.W   #0,D1          ; Si CBZPOSX >= PANWIDTH
00001392  6D00 0066                497              BLT     GAMEOVER
00001396                           498  
00001396  3239 00002138            499              MOVE.W  (CBZPOSY),D1
0000139C  B27C 0000                500              CMP.W   #0,D1                 ; Si CBZPOSY < 0
000013A0  6D00 0058                501              BLT     GAMEOVER
000013A4  B27C 01E0                502              CMP.W   #PANHEIGH,D1          ; Si CBZPOSY >= PANHEIGH
000013A8  6E00 0050                503              BGT     GAMEOVER
000013AC                           504  
000013AC                           505              ;BRA     FIN
000013AC                           506              
000013AC                           507  CHKCOL:
000013AC                           508              ; Verifica la colisión con la manzana
000013AC  3239 00002136            509              MOVE.W  (CBZPOSX),D1
000013B2  3439 00002138            510              MOVE.W  (CBZPOSY),D2
000013B8  B279 00002132            511              CMP.W   (MNZPOSX),D1
000013BE  6600 001E                512              BNE     NOCOL
000013C2  B479 00002134            513              CMP.W   (MNZPOSY),D2
000013C8  6600 0014                514              BNE     NOCOL
000013CC                           515              
000013CC                           516              ; Colisión detectada
000013CC  4EB9 00001664            517              JSR     APPLEUPD
000013D2  4EB9 00001768            518              JSR     SCOUPD
000013D8  1E3C 0000                519              MOVE.B  #SNDEAT,D7
000013DC  4E42                     520              TRAP    #SNDPLTN
000013DE                           521  
000013DE                           522  NOCOL:
000013DE                           523              ; Convierte la posición nueva a índice
000013DE  3239 00002136            524              MOVE.W  (CBZPOSX),D1
000013E4  3439 00002138            525              MOVE.W  (CBZPOSY),D2
000013EA  4EB9 000018BC            526              JSR     CINDMTRZ
000013F0  4EB9 000018F6            527              JSR     CBZOCPD                 ; Marca la celda como ocupada
000013F6                           528              
000013F6  6000 0010                529              BRA     FIN
000013FA                           530  
000013FA                           531  
000013FA                           532  GAMEOVER:
000013FA  1E3C 0001                533              MOVE.B  #SNDGMOV,D7             ;PONER SONIDO GAME OVER
000013FE  4E42                     534              TRAP    #SNDPLTN
00001400  33FC 0003 00002156       535              MOVE.W  #3,(STANEXT)
00001408                           536  
00001408                           537  FIN:
00001408  4C9F 0087                538              MOVEM.W (A7)+,D0-D2/D7
0000140C                           539  
0000140C  4E75                     540              RTS
0000140E                           541              
0000140E                           542  ; ------------------------------------------------------------------------------
0000140E                           543  HEADPLOT
0000140E                           544  ; DIBUJAR CABEZA.
0000140E                           545  ; INPUT    : NONE 
0000140E                           546  ; OUTPUT   : NONE
0000140E                           547  ; MODIFIES : NONE
0000140E                           548  ; ------------------------------------------------------------------------------
0000140E                           549                         
0000140E  3F00                     550              MOVE.W  D0,-(A7)               ; GUARDAMOS D0
00001410  3003                     551              MOVE.W  D3,D0                  ; PONEMOS EL INDICE DE LA CELDA EN D0 PARA CALCULAR SUS COORDENADAS
00001412  4EB9 00001964            552              JSR     CNVICOOR
00001418  2F01                     553              MOVE.L  D1,-(A7)
0000141A                           554              
0000141A                           555              ; SET COLOR DEL CONTORNO CABEZA
0000141A  103C 0050                556              MOVE.B  #80,D0
0000141E  223C 0000FF00            557              MOVE.L  #CBZPCOL,D1
00001424  4E4F                     558              TRAP    #15
00001426                           559              
00001426                           560              ; SET COLOR DEL RELLENO CABEZA
00001426  103C 0051                561              MOVE.B  #81,D0
0000142A  223C 0000AA00            562              MOVE.L  #CBZFCOL,D1
00001430  4E4F                     563              TRAP    #15
00001432                           564              
00001432                           565              ; DIBUJAR CABEZA
00001432  103C 0057                566              MOVE.B  #87,D0
00001436  221F                     567              MOVE.L  (A7)+,D1
00001438  3F03                     568              MOVE.W  D3,-(A7)
0000143A  3601                     569              MOVE.W  D1,D3
0000143C  0643 0014                570              ADD.W   #CBZWIDTH,D3
00001440  3802                     571              MOVE.W  D2,D4
00001442  0644 0014                572              ADD.W   #CBZHEIGH,D4
00001446  4E4F                     573              TRAP    #15
00001448                           574              
00001448  2F01                     575              MOVE.L  D1,-(A7)
0000144A                           576              
0000144A                           577              ; SET COLOR DEL CONTORNO OJO
0000144A  103C 0050                578              MOVE.B  #80,D0
0000144E  7200                     579              MOVE.L  #OJOPCOL,D1
00001450  4E4F                     580              TRAP    #15
00001452                           581              
00001452                           582              ; SET COLOR DEL RELLENO OJO
00001452  103C 0051                583              MOVE.B  #81,D0
00001456  223C 00FFFFFF            584              MOVE.L  #OJOFCOL,D1
0000145C  4E4F                     585              TRAP    #15
0000145E                           586              
0000145E                           587              ; DIBUJAR OJO
0000145E  103C 0058                588              MOVE.B  #88,D0
00001462  221F                     589              MOVE.L  (A7)+,D1
00001464  2F01                     590              MOVE.L  D1,-(A7)
00001466  2F02                     591              MOVE.L  D2,-(A7)
00001468  5A41                     592              ADD.W   #OJOWIDTH/2,D1            
0000146A  3601                     593              MOVE.W  D1,D3
0000146C  0643 000A                594              ADD.W   #OJOWIDTH,D3
00001470  5A42                     595              ADD.W   #OJOHEIGH/2,D2
00001472  3802                     596              MOVE.W  D2,D4
00001474  0644 000A                597              ADD.W   #OJOHEIGH,D4
00001478  4E4F                     598              TRAP    #15                     ; DIBUJAMOS EL PRIMER OJO
0000147A                           599              
0000147A                           600  
0000147A                           601              ; DEFINIR COORDENADAS IRIS
0000147A  241F                     602              MOVE.L  (A7)+,D2
0000147C  221F                     603              MOVE.L  (A7)+,D1
0000147E  0641 000A                604              ADD.W   #OJOWIDTH,D1
00001482  0642 000A                605              ADD.W   #OJOHEIGH,D2
00001486  103C 0052                606              MOVE.B  #82,D0
0000148A  4E4F                     607              TRAP    #15                     ; DIBUJAMOS EL PRIMER IRIS
0000148C                           608              
0000148C  361F                     609              MOVE.W  (A7)+,D3
0000148E  301F                     610              MOVE.W  (A7)+,D0
00001490                           611  
00001490  4E75                     612              RTS
00001492                           613  
00001492                           614  
00001492                           615  
00001492                           616  
00001492                           617  
00001492                           618  -------------------- end include --------------------
00001492                           619              INCLUDE 'SEGSRP.X68'
00001492                           620  
00001492                           621  ; ------------------------------------------------------------------------------
00001492                           622  SEGINIT
00001492                           623  ; INICIALIZAR SEGMENTO.
00001492                           624  ; INPUT    : NONE 
00001492                           625  ; OUTPUT   : NONE
00001492                           626  ; MODIFIES : NONE
00001492                           627  ; ------------------------------------------------------------------------------
00001492  33FC 012C 00002142       628              MOVE.W  #(PANWIDTH/2)-CBZWIDTH,(SGMPOSX)
0000149A  33FC 00F0 00002144       629              MOVE.W  #PANHEIGH/2,(SGMPOSY)
000014A2  33F9 00002142 00002146   630              MOVE.W  (SGMPOSX),(SGMPOSX2)
000014AC  33F9 00002144 00002148   631              MOVE.W  (SGMPOSY),(SGMPOSY2)
000014B6  0479 0014 00002146       632              SUB.W   #SGMWIDTH,(SGMPOSX2)
000014BE  4E75                     633              RTS
000014C0                           634              
000014C0                           635  ; ------------------------------------------------------------------------------
000014C0                           636  SEGUPD
000014C0                           637  ; ACTUALIZAR SEGMENTO.
000014C0                           638  ; INPUT    : NONE 
000014C0                           639  ; OUTPUT   : NONE
000014C0                           640  ; MODIFIES : NONE
000014C0                           641  ; ------------------------------------------------------------------------------
000014C0                           642  
000014C0  48A7 6000                643              MOVEM.W D1-D2,-(A7)
000014C4                           644              
000014C4                           645              ; Marcar posición anterior del segmento como vacía
000014C4  3239 00002142            646              MOVE.W  (SGMPOSX),D1             ; Cargar posición X actual del segmento2
000014CA  3439 00002144            647              MOVE.W  (SGMPOSY),D2             ; Cargar posición Y actual del segmento2
000014D0  4EB9 000018BC            648              JSR     CINDMTRZ                ; Obtener índice de celda en D0
000014D6  4EB9 0000190C            649              JSR     MCLDVCIA                ; Marcar celda como vacía
000014DC                           650              
000014DC                           651              ; Marcar posición anterior del segmento como vacía
000014DC  3239 00002146            652              MOVE.W  (SGMPOSX2),D1             ; Cargar posición X actual del segmento2
000014E2  3439 00002148            653              MOVE.W  (SGMPOSY2),D2             ; Cargar posición Y actual del segmento2
000014E8  4EB9 000018BC            654              JSR     CINDMTRZ                ; Obtener índice de celda en D0
000014EE  4EB9 0000190C            655              JSR     MCLDVCIA                ; Marcar celda como vacía
000014F4                           656              
000014F4                           657              ; Actualizar posición del segmento para seguir a la cabeza
000014F4  33F9 00002142 00002146   658              MOVE.W  (SGMPOSX),(SGMPOSX2)    ; MARCAMOS LOS SEGMENTOS COMO SEGUNDA COORDENADA X
000014FE  33F9 00002144 00002148   659              MOVE.W  (SGMPOSY),(SGMPOSY2)    ; MARCAMOS LOS SEGMENTOS COMO SEGUNDA COORDENADA Y
00001508  33F9 00002136 00002142   660              MOVE.W  (CBZPOSX),(SGMPOSX)        ; Actualizar X del segmento con la X de la cabeza
00001512  33F9 00002138 00002144   661              MOVE.W  (CBZPOSY),(SGMPOSY)        ; Actualizar Y del segmento con la Y de la cabeza
0000151C                           662  
0000151C                           663              ; Marcar nueva posición del segmento como ocupada
0000151C  3239 00002142            664              MOVE.W  (SGMPOSX),D1             ; Cargar nueva posición X
00001522  3439 00002144            665              MOVE.W  (SGMPOSY),D2             ; Cargar nueva posición Y
00001528  4EB9 000018BC            666              JSR     CINDMTRZ                ; Obtener índice de celda en D0
0000152E  4EB9 00001922            667              JSR     SGMOCPD                 ; Marcar celda como ocupada por segmento
00001534                           668              
00001534  3239 00002146            669              MOVE.W  (SGMPOSX2),D1             ; Cargar nueva posición X DEL SEGMENTO 2
0000153A  3439 00002148            670              MOVE.W  (SGMPOSY2),D2             ; Cargar nueva posición Y DEL SEGMENTO 2
00001540  4EB9 000018BC            671              JSR     CINDMTRZ                ; Obtener índice de celda en D0
00001546  4EB9 00001922            672              JSR     SGMOCPD                 ; Marcar celda como ocupada por segmento
0000154C                           673              
0000154C  4C9F 0006                674              MOVEM.W (A7)+,D1-D2            
00001550  4E75                     675              RTS
00001552                           676  ;CODIGO ANTIGUO
00001552                           677              
00001552                           678              
00001552                           679              
00001552                           680  ; ------------------------------------------------------------------------------
00001552                           681  SEGPLOT
00001552                           682  ; DIBUJAR SEGMENTO.
00001552                           683  ; INPUT    : NONE 
00001552                           684  ; OUTPUT   : NONE
00001552                           685  ; MODIFIES : NONE
00001552                           686  ; ------------------------------------------------------------------------------
00001552  3F00                     687              MOVE.W  D0,-(A7)
00001554  3003                     688              MOVE.W  D3,D0
00001556  4EB9 00001964            689              JSR     CNVICOOR
0000155C  2F01                     690              MOVE.L  D1,-(A7)
0000155E                           691              
0000155E  103C 0050                692              MOVE.B  #80,D0
00001562  223C 0000FF00            693              MOVE.L  #SGMPCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL CONTORNO DEL SEGMENTO
00001568  4E4F                     694              TRAP    #15
0000156A                           695              
0000156A  103C 0051                696              MOVE.B  #81,D0
0000156E  223C 0000AA00            697              MOVE.L  #SGMFCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL RELLENO DEL SEGMENTO
00001574  4E4F                     698              TRAP    #15
00001576                           699              
00001576  103C 0057                700              MOVE.B  #87,D0
0000157A  221F                     701              MOVE.L  (A7)+,D1
0000157C  3F03                     702              MOVE.W  D3,-(A7)
0000157E  3601                     703              MOVE.W  D1,D3
00001580  0643 0014                704              ADD.W   #SIZECLDA,D3
00001584  3802                     705              MOVE.W  D2,D4                    ; DIBUJAMOS EL CUADRADO
00001586  0644 0014                706              ADD.W   #SIZECLDA,D4
0000158A  4E4F                     707              TRAP    #15                     
0000158C                           708                          
0000158C  361F                     709              MOVE.W  (A7)+,D3  
0000158E  301F                     710              MOVE.W  (A7)+,D0
00001590                           711  
00001590  4E75                     712              RTS
00001592                           713  
00001592                           714  -------------------- end include --------------------
00001592                           715              INCLUDE 'TAILSRP.X68'
00001592                           716     
00001592                           717  ; ------------------------------------------------------------------------------
00001592                           718  TAILINIT
00001592                           719  ; INICIALIZAR COLA.
00001592                           720  ; INPUT    : NONE 
00001592                           721  ; OUTPUT   : NONE
00001592                           722  ; MODIFIES : NONE
00001592                           723  ; ------------------------------------------------------------------------------
00001592                           724  
00001592  33FC 011D 0000213E       725              MOVE.W  #(PANWIDTH/2)-CBZWIDTH-SGMWIDTH+(COLWIDTH/2),(COLPOSX)
0000159A  33FC 00F0 00002140       726              MOVE.W  #(PANHEIGH/2),(COLPOSY)
000015A2                           727              
000015A2  4E75                     728              RTS
000015A4                           729              
000015A4                           730              
000015A4                           731  ; ------------------------------------------------------------------------------
000015A4                           732  TAILUPD
000015A4                           733  ; ACTUALIZAR COLA.
000015A4                           734  ; INPUT    : NONE 
000015A4                           735  ; OUTPUT   : NONE
000015A4                           736  ; MODIFIES : NONE
000015A4                           737  ; ------------------------------------------------------------------------------
000015A4  48A7 6000                738              MOVEM.W D1-D2,-(A7)
000015A8                           739              
000015A8                           740              ; Marca la posición actual de la cola como vacía
000015A8  3239 0000213E            741              MOVE.W  (COLPOSX),D1
000015AE  3439 00002140            742              MOVE.W  (COLPOSY),D2
000015B4  4EB9 000018BC            743              JSR     CINDMTRZ
000015BA  4EB9 0000190C            744              JSR     MCLDVCIA
000015C0                           745              ; Actualiza la posición de la cola para seguir al último segmento
000015C0  33F9 00002146 0000213E   746              MOVE.W  (SGMPOSX2),(COLPOSX)
000015CA  33F9 00002148 00002140   747              MOVE.W  (SGMPOSY2),(COLPOSY)    ; MARCAMOS LA COOORDENADA DE LA COLA COMO COORDENADA DEL SEGMENTO 2
000015D4                           748              ; Marca la nueva posición como cola
000015D4  3239 0000213E            749              MOVE.W  (COLPOSX),D1
000015DA  3439 00002140            750              MOVE.W  (COLPOSY),D2
000015E0  4EB9 000018BC            751              JSR     CINDMTRZ
000015E6  4EB9 00001938            752              JSR     COLOCPD
000015EC                           753  
000015EC                           754  FINUPD
000015EC  4C9F 0006                755              MOVEM.W (A7)+,D1-D2
000015F0  4E75                     756              RTS
000015F2                           757              
000015F2                           758  ; ------------------------------------------------------------------------------
000015F2                           759  TAILPLOT
000015F2                           760  ; DIBUJAR COLA
000015F2                           761  ; INPUT    : NONE 
000015F2                           762  ; OUTPUT   : NONE
000015F2                           763  ; MODIFIES : NONE
000015F2                           764  ; ------------------------------------------------------------------------------
000015F2                           765  
000015F2  3F00                     766              MOVE.W  D0,-(A7)
000015F4  3003                     767              MOVE.W  D3,D0
000015F6  4EB9 00001964            768              JSR     CNVICOOR
000015FC  2F01                     769              MOVE.L  D1,-(A7)
000015FE                           770              
000015FE  103C 0050                771              MOVE.B  #80,D0
00001602  223C 0000FF00            772              MOVE.L  #COLPCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL CONTORNO DE LA COLA
00001608  4E4F                     773              TRAP    #15
0000160A                           774              
0000160A  103C 0051                775              MOVE.B  #81,D0
0000160E  223C 0000AA00            776              MOVE.L  #COLFCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL RELLENO DE LA COLA
00001614  4E4F                     777              TRAP    #15
00001616                           778              
00001616  103C 0057                779              MOVE.B  #87,D0
0000161A  221F                     780              MOVE.L  (A7)+,D1
0000161C  3F03                     781              MOVE.W  D3,-(A7)
0000161E  3601                     782              MOVE.W  D1,D3
00001620  0643 0014                783              ADD.W   #SIZECLDA,D3
00001624  3802                     784              MOVE.W  D2,D4                    
00001626  0644 0014                785              ADD.W   #SIZECLDA,D4
0000162A  4E4F                     786              TRAP    #15                    ; DIBUJAMOS EL CUADRADO 
0000162C                           787                          
0000162C  361F                     788              MOVE.W  (A7)+,D3  
0000162E  301F                     789              MOVE.W  (A7)+,D0
00001630                           790  
00001630  4E75                     791              RTS
00001632                           792  
00001632                           793  
00001632                           794  -------------------- end include --------------------
00001632                           795              INCLUDE 'APPLE.X68'
00001632                           796     
00001632                           797  ; ------------------------------------------------------------------------------
00001632                           798  APPLEINIT
00001632                           799  ; Inicializa la manzana en una posición aleatoria
00001632                           800  ; INPUT    : NONE 
00001632                           801  ; OUTPUT   : NONE
00001632                           802  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
00001632                           803  ; ------------------------------------------------------------------------------
00001632                           804  
00001632                           805              ; Llama a la función para generar la posición aleatoria
00001632  4EB9 00001720            806              JSR     GENPOSMNZ
00001638                           807  
00001638                           808              ; Convierte las coordenadas de la manzana a índice de la matriz
00001638  4EB9 000018BC            809              JSR     CINDMTRZ
0000163E                           810  
0000163E                           811              ; Verifica si la celda está ocupada o libre
0000163E                           812  CHECK:
0000163E  4EB9 000019A0            813              JSR     CHECKCLD
00001644  6700 0010                814              BEQ     MARKMNZ                  ; Si está libre
00001648                           815  
00001648                           816              ; Si la celda está ocupada
00001648  4EB9 00001720            817              JSR     GENPOSMNZ                ; Genera una nueva posición
0000164E  4EB9 000018BC            818              JSR     CINDMTRZ                 ; Convierte las nuevas coordenadas
00001654  60E8                     819              BRA     CHECK                    ; Repite la comprobación
00001656                           820  
00001656                           821  MARKMNZ:
00001656                           822              ; Marca la celda como ocupada con la manzana (estado 4)
00001656  4EB9 0000194E            823              JSR     MNZOCPD
0000165C                           824  
0000165C                           825              ; Dibuja la manzana en la pantalla
0000165C  4EB9 000016A2            826              JSR     APPLEPLOT
00001662                           827  
00001662  4E75                     828              RTS
00001664                           829  
00001664                           830  ; ------------------------------------------------------------------------------
00001664                           831  APPLEUPD
00001664                           832  ; Actualiza la posición de la manzana cuando la serpiente come
00001664                           833  ; INPUT    : NONE 
00001664                           834  ; OUTPUT   : NONE
00001664                           835  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
00001664                           836  ; ------------------------------------------------------------------------------
00001664                           837  
00001664                           838  
00001664                           839              ; Convierte las coordenadas actuales de la manzana a índice de la matriz
00001664  4EB9 000018BC            840              JSR     CINDMTRZ
0000166A                           841  
0000166A                           842              ; Marca la celda anterior como vacía
0000166A  4EB9 0000190C            843              JSR     MCLDVCIA
00001670                           844  
00001670                           845              ; Llama a la función para generar una nueva posición aleatoria
00001670  4EB9 00001720            846              JSR     GENPOSMNZ
00001676                           847  
00001676                           848              ; Convierte las nuevas coordenadas de la manzana a índice de la matriz
00001676  4EB9 000018BC            849              JSR     CINDMTRZ
0000167C                           850  
0000167C                           851  CHCKUPDT:
0000167C  4EB9 000019A0            852              JSR     CHECKCLD             ; Verifica si la celda está libre
00001682  6700 0010                853              BEQ     NEWMNZ               ; Si está libre
00001686                           854  
00001686                           855              ; Si la celda está ocupada
00001686  4EB9 00001720            856              JSR     GENPOSMNZ            ; Genera una nueva posición
0000168C  4EB9 000018BC            857              JSR     CINDMTRZ             ; Convierte las nuevas coordenadas
00001692  60E8                     858              BRA     CHCKUPDT             ; Repite la comprobación
00001694                           859  
00001694                           860  NEWMNZ:
00001694                           861              ; Marca la celda como ocupada con la manzana (estado 4)
00001694  4EB9 0000194E            862              JSR     MNZOCPD
0000169A                           863  
0000169A                           864              ; Dibuja la nueva manzana en la pantalla
0000169A  4EB9 000016A2            865              JSR     APPLEPLOT
000016A0                           866  
000016A0  4E75                     867              RTS
000016A2                           868              
000016A2                           869  ; ------------------------------------------------------------------------------
000016A2                           870  APPLEPLOT
000016A2                           871  ; Dibuja la manzana
000016A2                           872  ; INPUT    : NONE 
000016A2                           873  ; OUTPUT   : NONE
000016A2                           874  ; MODIFIES : NONE
000016A2                           875  ; ------------------------------------------------------------------------------
000016A2  3F00                     876              MOVE.W  D0,-(A7)
000016A4  3003                     877              MOVE.W  D3,D0
000016A6  4EB9 00001964            878              JSR     CNVICOOR
000016AC  2F01                     879              MOVE.L  D1,-(A7)                ; PRIMERO DEBEMOS DIBUJAR EL FONDO Y LUEGO LA MANZANA
000016AE                           880              
000016AE  103C 0050                881              MOVE.B  #80,D0
000016B2  223C 0090EE90            882              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
000016B8  4E4F                     883              TRAP    #15
000016BA                           884              
000016BA  103C 0051                885              MOVE.B  #81,D0
000016BE  223C 0090EE90            886              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
000016C4  4E4F                     887              TRAP    #15
000016C6                           888              
000016C6  103C 0057                889              MOVE.B  #87,D0
000016CA  221F                     890              MOVE.L  (A7)+,D1
000016CC  3F03                     891              MOVE.W  D3,-(A7)
000016CE  3601                     892              MOVE.W  D1,D3
000016D0  0643 0014                893              ADD.W   #SIZECLDA,D3
000016D4  3802                     894              MOVE.W  D2,D4                    ; DIBUJAMOS EL CUADRADO
000016D6  0644 0014                895              ADD.W   #SIZECLDA,D4
000016DA  4E4F                     896              TRAP    #15                     
000016DC                           897                          
000016DC  361F                     898              MOVE.W  (A7)+,D3  
000016DE  301F                     899              MOVE.W  (A7)+,D0
000016E0                           900  
000016E0  3F00                     901              MOVE.W  D0,-(A7)
000016E2  3003                     902              MOVE.W  D3,D0
000016E4  4EB9 00001964            903              JSR     CNVICOOR
000016EA  2F01                     904              MOVE.L  D1,-(A7)
000016EC                           905              
000016EC  103C 0050                906              MOVE.B  #80,D0
000016F0  223C 0000AAFF            907              MOVE.L  #MNZPCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL CONTORNO DE LA MANZANA
000016F6  4E4F                     908              TRAP    #15
000016F8                           909              
000016F8  103C 0051                910              MOVE.B  #81,D0
000016FC  223C 000000FF            911              MOVE.L  #MNZFCOL,D1            ; PONEMOS EL COLOR DE DIBUJADO AL COLOR DEL RELLENO DE LA MANZANA
00001702  4E4F                     912              TRAP    #15
00001704                           913              
00001704  103C 0058                914              MOVE.B  #88,D0
00001708  221F                     915              MOVE.L  (A7)+,D1
0000170A  3F03                     916              MOVE.W  D3,-(A7)
0000170C  3601                     917              MOVE.W  D1,D3
0000170E  0643 0014                918              ADD.W   #SIZECLDA,D3
00001712  3802                     919              MOVE.W  D2,D4                    ; DIBUJAMOS EL CIRCULO
00001714  0644 0014                920              ADD.W   #SIZECLDA,D4
00001718  4E4F                     921              TRAP    #15                     
0000171A                           922                          
0000171A  361F                     923              MOVE.W  (A7)+,D3  
0000171C  301F                     924              MOVE.W  (A7)+,D0
0000171E                           925  
0000171E                           926  
0000171E  4E75                     927              RTS
00001720                           928  ; ----------------------------------------------------------------------------
00001720                           929  GENPOSMNZ
00001720                           930  ; Genera una posición aleatoria para la manzana
00001720                           931  ; INPUT: NONE
00001720                           932  ; OUTPUT:
00001720                           933  ; MODIFIES: MNZPOSX, MNZPOSY
00001720                           934  ; ----------------------------------------------------------------------------
00001720                           935  
00001720  48E7 8000                936              MOVEM.L D0,-(A7)
00001724                           937  
00001724                           938              ; Genera la coordenada X aleatoria
00001724  4EB8 11D0                939              JSR     UTLRAND
00001728  0240 001F                940              ANDI.W  #NUMCLMNS-1, D0       ; Asegura que esté en [0, NUMCLMNS-1]
0000172C  C0FC 0014                941              MULU    #SIZECLDA, D0         ; Escala al tamaño real de las celdas
00001730  3200                     942              MOVE.W  D0,D1
00001732  33C0 00002132            943              MOVE.W  D0, MNZPOSX           ; Guarda la coordenada X generada
00001738                           944              
00001738                           945              ; Generar coordenada Y aleatoria
00001738  4EB8 11D0                946              JSR     UTLRAND
0000173C  0240 0017                947              ANDI.W  #NUMFILAS-1, D0       ; Asegura que esté en el rango [0, NUMFILAS-1]
00001740  C0FC 0014                948              MULU    #SIZECLDA, D0         ; Escala al tamaño real de las celdas
00001744  3400                     949              MOVE.W  D0,D2
00001746  33C0 00002134            950              MOVE.W  D0, MNZPOSY           ; Guarda la coordenada Y generada
0000174C                           951              
0000174C  4CDF 0001                952              MOVEM.L (A7)+,D0
00001750  4E75                     953              RTS 
00001752                           954  
00001752                           955  
00001752                           956  
00001752                           957  
00001752                           958  
00001752                           959  
00001752                           960  -------------------- end include --------------------
00001752                           961              INCLUDE 'SCORE.X68'
00001752                           962     
00001752                           963  ; ------------------------------------------------------------------------------
00001752                           964  SCOINIT
00001752                           965  ; INICIALIZAR MARCADOR.
00001752                           966  ; INPUT    : NONE 
00001752                           967  ; OUTPUT   : NONE
00001752                           968  ; MODIFIES : NONE
00001752                           969  ; ------------------------------------------------------------------------------
00001752  4279 0000214A            970              CLR.W   (JGOPNTS)
00001758  4279 0000214C            971              CLR.W   (JGOTIM)
0000175E  33FC 0190 0000214C       972              MOVE.W  #400,(JGOTIM)
00001766  4E75                     973              RTS
00001768                           974              
00001768                           975  ; ------------------------------------------------------------------------------
00001768                           976  SCOUPD
00001768                           977  ; ACTUALIZAR MARCADOR.
00001768                           978  ; INPUT    : NONE 
00001768                           979  ; OUTPUT   : NONE
00001768                           980  ; MODIFIES : NONE
00001768                           981  ; ------------------------------------------------------------------------------
00001768                           982              
00001768  48E7 8000                983              MOVEM.L D0,-(A7)
0000176C                           984              
0000176C                           985              ;Incrementa el marcador
0000176C  3039 0000214A            986              MOVE.W  (JGOPNTS),D0
00001772  0640 0019                987              ADD.W  #25,D0
00001776  33C0 0000214A            988              MOVE.W  D0,(JGOPNTS)
0000177C                           989              
0000177C  4CDF 0001                990              MOVEM.L (A7)+,D0
00001780                           991  
00001780  4E75                     992              RTS
00001782                           993              
00001782                           994  ; ------------------------------------------------------------------------------
00001782                           995  SCOPLOT
00001782                           996  ; DIBUJAR MARCADOR.
00001782                           997  ; INPUT    : NONE 
00001782                           998  ; OUTPUT   : NONE
00001782                           999  ; MODIFIES : NONE
00001782                          1000  ; ------------------------------------------------------------------------------
00001782  48E7 C040               1001             MOVEM.L  D0-D1/A1,-(A7)
00001786                          1002             ; SET COLOR DE FONDO
00001786  103C 0051               1003             MOVE.B   #81,D0
0000178A  223C 0090EE90           1004             MOVE.L   #COLFND,D1
00001790  4E4F                    1005             TRAP     #15
00001792                          1006           
00001792                          1007             ; PONEMOS EN LA ESQUINA EL APUNTADOR
00001792  4241                    1008             CLR.W    D1
00001794  103C 000B               1009             MOVE.B   #11,D0
00001798  4E4F                    1010             TRAP     #15
0000179A                          1011             ; DIBUJAR LINEA DE PUNTUACIÓN
0000179A  43F9 000017D2           1012              LEA     .TXT1,A1
000017A0  4281                    1013              CLR.L   D1
000017A2  3239 0000214A           1014              MOVE.W  (JGOPNTS),D1
000017A8  103C 0011               1015              MOVE.B  #17,D0
000017AC  4E4F                    1016              TRAP    #15
000017AE                          1017              
000017AE                          1018             ; BAJAMOS UNA LÍNEA 
000017AE  323C 0001               1019             MOVE.W   #1,D1
000017B2  103C 000B               1020             MOVE.B   #11,D0
000017B6  4E4F                    1021             TRAP     #15
000017B8                          1022              ; DIBUJAR LINEA DE TIEMPO
000017B8  43F9 000017DC           1023              LEA     .TXT2,A1
000017BE  4281                    1024              CLR.L   D1
000017C0  3239 0000214C           1025              MOVE.W  (JGOTIM),D1
000017C6  103C 0011               1026              MOVE.B  #17,D0
000017CA  4E4F                    1027              TRAP    #15
000017CC                          1028  
000017CC                          1029              
000017CC  4CDF 0203               1030              MOVEM.L (A7)+,D0-D1/A1
000017D0  4E75                    1031              RTS
000017D2                          1032  
000017D2                          1033  
000017D2= 50 55 4E 54 4F 53 ...   1034  .TXT1       DC.B    'PUNTOS : ',0
000017DC= 54 49 45 4D 50 4F ...   1035  .TXT2       DC.B    'TIEMPO : ',0
000017E6                          1036              DS.W    0
000017E6                          1037  
000017E6                          1038  
000017E6                          1039  
000017E6                          1040  
000017E6                          1041  
000017E6                          1042  -------------------- end include --------------------
000017E6                          1043              INCLUDE 'GAME.X68'
000017E6                          1044  ; ==============================================================================
000017E6                          1045  ; GAME MANAGEMENT
000017E6                          1046  ; ==============================================================================
000017E6                          1047  
000017E6                          1048  ; ------------------------------------------------------------------------------
000017E6                          1049  GAMINIT
000017E6                          1050  ; INITIALIZES GAME.
000017E6                          1051  ; INPUT    : NONE
000017E6                          1052  ; OUTPUT   : NONE
000017E6                          1053  ; MODIFIES : NONE
000017E6                          1054  ; ------------------------------------------------------------------------------
000017E6  4EB9 0000182A           1055              JSR     MTZINIT
000017EC  4EB8 12EE               1056              JSR     HEADINIT
000017F0  4EB8 1492               1057              JSR     SEGINIT
000017F4  4EB8 1592               1058              JSR     TAILINIT
000017F8  4EB8 1752               1059              JSR     SCOINIT
000017FC  6000 FE34               1060              BRA     APPLEINIT
00001800                          1061  
00001800                          1062  ; ------------------------------------------------------------------------------
00001800                          1063  GAMUPD
00001800                          1064  ; UPDATES THE GAME
00001800                          1065  ; INPUT    : NONE
00001800                          1066  ; OUTPUT   : NONE
00001800                          1067  ; MODIFIES : NONE
00001800                          1068  ; ------------------------------------------------------------------------------
00001800  4EB8 15A4               1069              JSR     TAILUPD
00001804  4EB8 14C0               1070              JSR     SEGUPD
00001808  4EB8 130E               1071              JSR     HEADUPD
0000180C  6000 01EE               1072              BRA     MTZUPD       
00001810                          1073  
00001810                          1074  ; ------------------------------------------------------------------------------
00001810                          1075  GAMPLOT
00001810                          1076  ; PLOTS THE GAME
00001810                          1077  ; INPUT    : NONE
00001810                          1078  ; OUTPUT   : NONE
00001810                          1079  ; MODIFIES : NONE
00001810                          1080  ; ------------------------------------------------------------------------------
00001810  4EB8 140E               1081              JSR    HEADPLOT
00001814  4EB8 1552               1082              JSR    SEGPLOT
00001818  4EB8 15F2               1083              JSR    TAILPLOT
0000181C  4EB8 16A2               1084              JSR    APPLEPLOT
00001820  4EB9 00001A98           1085              JSR    MTZPLOT
00001826  6000 FF5A               1086              BRA    SCOPLOT
0000182A                          1087  
0000182A                          1088  
0000182A                          1089  
0000182A                          1090  
0000182A                          1091  
0000182A                          1092  -------------------- end include --------------------
0000182A                          1093              INCLUDE 'MATRIZ.X68'
0000182A                          1094  ; ----------------------------------------------------------------------------
0000182A                          1095  ; MATRIZ
0000182A                          1096  ; ----------------------------------------------------------------------------
0000182A                          1097  
0000182A                          1098  ;-----------------------------------------------------------------------------
0000182A                          1099  MTZINIT
0000182A                          1100  ; INICIALIZA LA MATRIZ, AL PRINCIPIO ESTÁ VACÍA
0000182A                          1101  ; INPUT    : NONE
0000182A                          1102  ; OUTPUT   : NONE
0000182A                          1103  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
0000182A                          1104  ; ----------------------------------------------------------------------------
0000182A                          1105              
0000182A  48A7 E080               1106              MOVEM.W D0-D2/A0,-(A7)
0000182E                          1107              
0000182E  41F9 0000215E           1108              LEA ESTDCLDS,A0       ; Apunta al inicio de ESTDCLDS
00001834  303C 0300               1109              MOVE.W #TCELDAS,D0    ; Número total de celdas
00001838                          1110  
00001838                          1111  CLNCLDS:
00001838  4218                    1112              CLR.B (A0)+            ; Coloca 0 en cada celda
0000183A  5340                    1113              SUBI.W #1, D0          ; Decrementa el contador de celdas
0000183C  66FA                    1114              BNE CLNCLDS            ; Repite hasta que esten vacías
0000183E                          1115              
0000183E                          1116              
0000183E  3239 00002136           1117              MOVE.W  (CBZPOSX),D1             ; VEMOS LA POSICION INICIAL DE LA CABEZA             
00001844  3439 00002138           1118              MOVE.W  (CBZPOSY),D2
0000184A  4EB9 000018BC           1119              JSR     CINDMTRZ
00001850  4EB9 000018F6           1120              JSR     CBZOCPD                 ; MARCAMOS LA POSICIÓN COMO CABEZA
00001856                          1121              
00001856  3239 00002142           1122              MOVE.W  (SGMPOSX),D1
0000185C  3439 00002144           1123              MOVE.W  (SGMPOSY),D2             ; VEMOS LA POSICIÓN DEL SEGMENTO
00001862  4EB9 000018BC           1124              JSR     CINDMTRZ
00001868  4EB9 00001922           1125              JSR     SGMOCPD                 ; MARCAMOS LA POSICIÓN DEL SEGMENTO
0000186E                          1126              
0000186E  3239 00002146           1127              MOVE.W  (SGMPOSX2),D1
00001874  3439 00002148           1128              MOVE.W  (SGMPOSY2),D2            ; VEMOS LA POSICIÓN DEL SEGMENTO 2
0000187A  4EB9 000018BC           1129              JSR     CINDMTRZ
00001880  4EB9 00001922           1130              JSR     SGMOCPD                 ; MARCAMOS LA POSICION DEL SEGMENTO 2
00001886                          1131              
00001886  3239 0000213E           1132              MOVE.W  (COLPOSX),D1             ; VEMOS LA POSICIÓN DE LA COLA
0000188C  3439 00002140           1133              MOVE.W  (COLPOSY),D2
00001892  4EB9 000018BC           1134              JSR     CINDMTRZ
00001898  4EB9 00001938           1135              JSR     COLOCPD                 ; MARCAMOS LA POSICIÓN DE LA COLA
0000189E                          1136              
0000189E  3239 00002132           1137              MOVE.W  (MNZPOSX),D1             ; VEMOS LA POSICIÓN INICIAL DE LA MANZANA
000018A4  3439 00002134           1138              MOVE.W  (MNZPOSY),D2
000018AA  4EB9 000018BC           1139              JSR     CINDMTRZ
000018B0  4EB9 0000194E           1140              JSR     MNZOCPD                 ; MARCAMOS LA POSICIÓN DE LA MANZANA
000018B6                          1141              
000018B6                          1142              
000018B6  4C9F 0107               1143              MOVEM.W (A7)+,D0-D2/A0
000018BA                          1144  
000018BA  4E75                    1145              RTS
000018BC                          1146  
000018BC                          1147  ;-----------------------------------------------------------------------------
000018BC                          1148  CINDMTRZ
000018BC                          1149  ; CALCULA EL ÍNDICE DE UNA CELDA
000018BC                          1150  ; INPUT    : D1 = coordenada X pantalla, D2 = coordenada Y pantalla
000018BC                          1151  ; OUTPUT   : D0 = índice de la celda en ESTDCLDS
000018BC                          1152  ; MODIFIES : NONE
000018BC                          1153  ; ----------------------------------------------------------------------------
000018BC                          1154  
000018BC  48A7 7000               1155               MOVEM.W D1-D3,-(A7)     ; Guarda los registros D1-D3 en la pila
000018C0                          1156  
000018C0                          1157              ; Divide X por SIZECLDA
000018C0  3601                    1158              MOVE.W  D1,D3          ; Copia X a D3
000018C2  4241                    1159              CLR.W   D1              ; Inicializa el cociente de X
000018C4                          1160  
000018C4  B67C 0014               1161  DIVX:       CMP.W   #SIZECLDA,D3    ; Compara D3 con SIZECLDA
000018C8  6D00 000A               1162              BLT     ENDDIVX         ; Si D3 < SIZECLDA, salta a ENDDIVX
000018CC  0443 0014               1163              SUB.W   #SIZECLDA,D3   ; Resta SIZECLDA de D3
000018D0  5241                    1164              ADDQ.W  #1,D1          ; Incrementa el cociente de X
000018D2  60F0                    1165              BRA     DIVX            ; Repite el bucle
000018D4                          1166  
000018D4                          1167  ENDDIVX:
000018D4                          1168  
000018D4                          1169              ; Divide Y por SIZECLDA
000018D4  3602                    1170              MOVE.W  D2,D3          ; Copia Y a D3
000018D6  4242                    1171              CLR.W   D2              ; Inicializa el cociente de Y
000018D8                          1172  
000018D8  B67C 0014               1173  DIVY:       CMP.W   #SIZECLDA,D3    ; Compara D3 con SIZECLDA
000018DC  6D00 000A               1174              BLT     ENDDIVY         ; Si D3 < SIZECLDA, salta a ENDDIVY
000018E0  0443 0014               1175              SUB.W   #SIZECLDA,D3   ; Resta SIZECLDA de D3
000018E4  5242                    1176              ADDQ.W  #1, D2          ; Incrementa el cociente de Y
000018E6  60F0                    1177              BRA     DIVY            ; Repite el bucle
000018E8                          1178  
000018E8                          1179  ENDDIVY:
000018E8                          1180  
000018E8                          1181              ; Calcula el índice
000018E8  4240                    1182              CLR.W   D0
000018EA  3002                    1183              MOVE.W  D2, D0          ; D0 = Y_CELDA
000018EC  EB40                    1184              ASL.W   #5, D0          ; D0 = Y_CELDA * NUMCLMNS (32 = 2^5)
000018EE  D041                    1185              ADD.W   D1, D0          ; D0 = Y_CELDA * NUMCLMNS + X_CELDA
000018F0                          1186  
000018F0  4C9F 000E               1187              MOVEM.W (A7)+,D1-D3     ; Restaura los registros D1-D3 desde la pila
000018F4                          1188  
000018F4  4E75                    1189              RTS  
000018F6                          1190              
000018F6                          1191  ;-----------------------------------------------------------------------------
000018F6                          1192  CBZOCPD
000018F6                          1193  ; MARCA UNA CELDA COMO OCUPADA POR LA CABEZA
000018F6                          1194  ; INPUT    : D0 = índice de la celda en ESTDCLDS
000018F6                          1195  ; OUTPUT   : NONE
000018F6                          1196  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
000018F6                          1197  ; ----------------------------------------------------------------------------
000018F6                          1198  
000018F6  48A7 0080               1199              MOVEM.W A0,-(A7)
000018FA                          1200  
000018FA  41F9 0000215E           1201              LEA     ESTDCLDS,A0                ; Dirección de la matriz en A0
00001900  11BC 0003 0000          1202              MOVE.B  #3,(A0, D0.W)           ; Marca la celda como ocupada
00001906                          1203              
00001906  4C9F 0100               1204              MOVEM.W (A7)+,A0
0000190A                          1205              
0000190A  4E75                    1206              RTS
0000190C                          1207              
0000190C                          1208              
0000190C                          1209              
0000190C                          1210             
0000190C                          1211  ;-----------------------------------------------------------------------------
0000190C                          1212  MCLDVCIA
0000190C                          1213  ; MARCA UNA CELDA COMO VACÍA
0000190C                          1214  ; INPUT    : D0 = índice de la celda en ESTDCLDS
0000190C                          1215  ; OUTPUT   : NONE
0000190C                          1216  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
0000190C                          1217  ; ----------------------------------------------------------------------------
0000190C                          1218  
0000190C  48A7 0080               1219              MOVEM.W A0,-(A7)
00001910                          1220  
00001910  41F9 0000215E           1221              LEA     ESTDCLDS,A0                ; Direccion de la matriz en A0
00001916  11BC 0000 0000          1222              MOVE.B  #0,(A0,D0.W)           ; Marca la celda como vacía
0000191C                          1223              
0000191C  4C9F 0100               1224              MOVEM.W (A7)+,A0
00001920                          1225              
00001920  4E75                    1226              RTS
00001922                          1227  
00001922                          1228  ;-----------------------------------------------------------------------------
00001922                          1229  SGMOCPD
00001922                          1230  ; MARCA UNA CELDA COMO OCUPADA POR EL SEGMENTO
00001922                          1231  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001922                          1232  ; OUTPUT   : NONE
00001922                          1233  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001922                          1234  ; ----------------------------------------------------------------------------
00001922                          1235  
00001922  48A7 0080               1236              MOVEM.W A0,-(A7)
00001926                          1237  
00001926  41F9 0000215E           1238              LEA ESTDCLDS,A0                ; Dirección de la matriz en A0
0000192C  11BC 0002 0000          1239              MOVE.B #2,(A0,D0.W)           ; Marca la celda como ocupada
00001932                          1240              
00001932  4C9F 0100               1241              MOVEM.W (A7)+,A0
00001936                          1242              
00001936  4E75                    1243              RTS
00001938                          1244              
00001938                          1245  ;-----------------------------------------------------------------------------
00001938                          1246  COLOCPD
00001938                          1247  ; MARCA UNA CELDA COMO OCUPADA POR LA COLA
00001938                          1248  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001938                          1249  ; OUTPUT   : NONE
00001938                          1250  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001938                          1251  ; ----------------------------------------------------------------------------
00001938                          1252  
00001938  48A7 0080               1253              MOVEM.W A0,-(A7)
0000193C                          1254  
0000193C  41F9 0000215E           1255              LEA ESTDCLDS,A0                ; Dirección de la matriz en A0
00001942  11BC 0001 0000          1256              MOVE.B #1,(A0,D0.W)           ; Marca la celda como ocupada
00001948                          1257              
00001948  4C9F 0100               1258              MOVEM.W (A7)+,A0
0000194C                          1259              
0000194C  4E75                    1260              RTS
0000194E                          1261  
0000194E                          1262  
0000194E                          1263  ;-----------------------------------------------------------------------------
0000194E                          1264  MNZOCPD
0000194E                          1265  ; MARCA UNA CELDA COMO OCUPADA POR LA MANZANA
0000194E                          1266  ; INPUT    : D0 = índice de la celda en ESTDCLDS
0000194E                          1267  ; OUTPUT   : NONE
0000194E                          1268  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
0000194E                          1269  ; ----------------------------------------------------------------------------
0000194E                          1270  
0000194E  48A7 0080               1271              MOVEM.W A0,-(A7)
00001952                          1272  
00001952  41F9 0000215E           1273              LEA ESTDCLDS,A0                ; Dirección de la matriz en A0
00001958  11BC 0004 0000          1274              MOVE.B #4,(A0,D0.W)           ; Marca la celda como ocupada
0000195E                          1275              
0000195E  4C9F 0100               1276              MOVEM.W (A7)+,A0
00001962                          1277              
00001962  4E75                    1278              RTS
00001964                          1279  
00001964                          1280              
00001964                          1281  ;-----------------------------------------------------------------------------
00001964                          1282  CNVICOOR
00001964                          1283  ; Convierte un índice de celda a coordenadas de pantalla (X, Y)
00001964                          1284  ; INPUT    : D0 = índice de la celda en ESTADO_CELDAS
00001964                          1285  ; OUTPUT   : D1 = coordenada X, D2 = coordenada Y
00001964                          1286  ; MODIFIES : NONE
00001964                          1287  ; ----------------------------------------------------------------------------
00001964                          1288  
00001964  48A7 9800               1289              MOVEM.W D0/D3-D4,-(A7)
00001968                          1290  
00001968  3400                    1291              MOVE.W  D0,D2         ; Copia índice a D2 para calcular la fila
0000196A  EA4A                    1292              LSR.W   #5,D2         ; D2 = índice / NUM_COLUMNAS (32 = 2^5)
0000196C  3200                    1293              MOVE.W  D0,D1         ; Copia índice a D1 para calcular la columna
0000196E  C27C 001F               1294              AND.W   #$1F,D1       ; D1 = índice % NUM_COLUMNAS (31 = 0x1F) (CREO)
00001972                          1295  
00001972                          1296              ; Multiplica por TAMAÑO_CELDA = 10
00001972  363C 0014               1297              MOVE.W  #SIZECLDA, D3
00001976  3801                    1298              MOVE.W  D1,D4         ; Copia D1 para multiplicar por 10
00001978  4241                    1299              CLR.W   D1            ; Inicializa resultado
0000197A                          1300  
0000197A                          1301  
0000197A                          1302  MULTLOOPX: 
0000197A  B87C 0000               1303              CMP.W   #0,D4        ; ¿Quedan iteraciones?
0000197E  6700 0008               1304              BEQ     ENDMULTX
00001982  D243                    1305              ADD.W   D3,D1         ; Suma TAMANO_CELDA (10) repetidamente
00001984                          1306  
00001984  5344                    1307              SUBQ.W  #1,D4         ; Cuenta las iteraciones restantes
00001986  60F2                    1308              BRA     MULTLOOPX     ; Repite mientras no sea 0
00001988                          1309  ENDMULTX: 
00001988  3802                    1310              MOVE.W  D2,D4         ; Copia D2 para multiplicar por 10
0000198A  4242                    1311              CLR.W   D2            ; Inicializa resultado
0000198C                          1312  
0000198C                          1313  MULTLOOPY: 
0000198C  B87C 0000               1314              CMP.W   #0,D4        ; ¿Quedan iteraciones?
00001990  6700 0008               1315              BEQ     ENDMULTY
00001994  D443                    1316              ADD.W   D3,D2         ; Suma TAMANO_CELDA (10) repetidamente
00001996  5344                    1317              SUBQ.W  #1,D4         ; Cuenta las iteraciones restantes
00001998  60F2                    1318              BRA     MULTLOOPY     ; Repite mientras no sea 0
0000199A                          1319  ENDMULTY:
0000199A  4C9F 0019               1320              MOVEM.W (A7)+,D0/D3-D4
0000199E                          1321  
0000199E  4E75                    1322              RTS
000019A0                          1323  
000019A0                          1324  ; ----------------------------------------------------------------------------
000019A0                          1325  CHECKCLD
000019A0                          1326  ; INPUT: D0 = índice de la celda
000019A0                          1327  ; OUTPUT: D0 = 0 si está vacía, 1 si está ocupada
000019A0                          1328  ; MODIFIES: Ninguno
000019A0                          1329  ; ----------------------------------------------------------------------------
000019A0                          1330  
000019A0  41F9 0000215E           1331              LEA     ESTDCLDS,A0    ; Carga la dirección de la matriz ESTDCLDS
000019A6  1230 0000               1332              MOVE.B  (A0,D0.W),D1   ; Carga el estado de la celda en D1
000019AA  B23C 0000               1333              CMP.B   #0,D1          ; Compara si está vacía (0)
000019AE  6700 0008               1334              BEQ     CLDFREE         ; Si está vacía
000019B2  303C 0001               1335              MOVE.W  #1,D0          ; Si está ocupada, devuelve 1 (ocupada)
000019B6                          1336  
000019B6  4E75                    1337              RTS
000019B8                          1338  
000019B8                          1339  CLDFREE:
000019B8  303C 0000               1340              MOVE.W  #0,D0                 ; Devuelve 0 (libre)
000019BC                          1341  
000019BC  4E75                    1342              RTS
000019BE                          1343  
000019BE                          1344  
000019BE                          1345  ;-----------------------------------------------------------------------------
000019BE                          1346  FONPLOT
000019BE                          1347  ; DIBUJADO DEL FONDO
000019BE                          1348  ; INPUT    : NONE
000019BE                          1349  ; OUTPUT   : NONE
000019BE                          1350  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
000019BE                          1351  ; ----------------------------------------------------------------------------
000019BE                          1352  
000019BE  3F00                    1353              MOVE.W  D0,-(A7)
000019C0  3003                    1354              MOVE.W  D3,D0
000019C2  4EB8 1964               1355              JSR     CNVICOOR
000019C6  2F01                    1356              MOVE.L  D1,-(A7)
000019C8                          1357              
000019C8  103C 0050               1358              MOVE.B  #80,D0
000019CC  223C 0090EE90           1359              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
000019D2  4E4F                    1360              TRAP    #15
000019D4                          1361              
000019D4  103C 0051               1362              MOVE.B  #81,D0
000019D8  223C 0090EE90           1363              MOVE.L  #COLFND,D1            ; PONEMOS EL COLOR DE DIBUJADO A COLORFONDO
000019DE  4E4F                    1364              TRAP    #15
000019E0                          1365              
000019E0  103C 0057               1366              MOVE.B  #87,D0
000019E4  221F                    1367              MOVE.L  (A7)+,D1
000019E6  3F03                    1368              MOVE.W  D3,-(A7)
000019E8  3601                    1369              MOVE.W  D1,D3
000019EA  0643 0014               1370              ADD.W   #SIZECLDA,D3
000019EE  3802                    1371              MOVE.W  D2,D4                    ; DIBUJAMOS EL CUADRADO
000019F0  0644 0014               1372              ADD.W   #SIZECLDA,D4
000019F4  4E4F                    1373              TRAP    #15                     
000019F6                          1374                          
000019F6  361F                    1375              MOVE.W  (A7)+,D3  
000019F8  301F                    1376              MOVE.W  (A7)+,D0
000019FA  4E75                    1377              RTS         
000019FC                          1378  
000019FC                          1379  
000019FC                          1380  
000019FC                          1381  ;-----------------------------------------------------------------------------
000019FC                          1382  MTZUPD
000019FC                          1383  ; ACTUALIZA LA MATRIZ CASILLA A CASILLA
000019FC                          1384  ; INPUT    : NONE
000019FC                          1385  ; OUTPUT   : NONE
000019FC                          1386  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
000019FC                          1387  ; ----------------------------------------------------------------------------
000019FC                          1388  
000019FC                          1389  
000019FC  48A7 E080               1390              MOVEM.W D0-D2/A0,-(A7)
00001A00                          1391              
00001A00  41F9 0000215E           1392              LEA ESTDCLDS,A0       ; Apunta al inicio de ESTDCLDS
00001A06  303C 0300               1393              MOVE.W #TCELDAS,D0    ; Número total de celdas
00001A0A                          1394  
00001A0A                          1395  .CLNCLDS:
00001A0A  4218                    1396              CLR.B (A0)+            ; Coloca 0 en cada celda
00001A0C  5340                    1397              SUBI.W #1,D0          ; Decrementa el contador de celdas
00001A0E  66FA                    1398              BNE .CLNCLDS           ; Repite hasta que esten vacías
00001A10                          1399              
00001A10                          1400              
00001A10  3239 00002136           1401              MOVE.W  (CBZPOSX),D1             ; VEMOS LA POSICION INICIAL DE LA CABEZA             
00001A16  3439 00002138           1402              MOVE.W  (CBZPOSY),D2
00001A1C  4EB8 18BC               1403              JSR     CINDMTRZ
00001A20  4EB8 18F6               1404              JSR     CBZOCPD                 ; MARCAMOS LA POSICIÓN COMO CABEZA
00001A24                          1405              
00001A24  3239 00002142           1406              MOVE.W  (SGMPOSX),D1
00001A2A  3439 00002144           1407              MOVE.W  (SGMPOSY),D2             ; VEMOS LA POSICIÓN INICIAL DEL SEGMENTO
00001A30  4EB8 18BC               1408              JSR     CINDMTRZ
00001A34  4EB8 1922               1409              JSR     SGMOCPD                 ; MARCAMOS LA POSICIÓN DEL SEGMENTO
00001A38                          1410              
00001A38  3239 00002146           1411              MOVE.W  (SGMPOSX2),D1
00001A3E  3439 00002148           1412              MOVE.W  (SGMPOSY2),D2             ; VEMOS LA POSICIÓN INICIAL DEL SEGMENTO
00001A44  4EB8 18BC               1413              JSR     CINDMTRZ
00001A48  4EB8 1922               1414              JSR     SGMOCPD                 ; MARCAMOS LA POSICIÓN DEL SEGMENTO
00001A4C                          1415              
00001A4C  3239 0000213E           1416              MOVE.W  (COLPOSX),D1             ; VEMOS LA POSICIÓN INICIAL DE LA COLA
00001A52  3439 00002140           1417              MOVE.W  (COLPOSY),D2
00001A58  4EB8 18BC               1418              JSR     CINDMTRZ
00001A5C  4EB8 1938               1419              JSR     COLOCPD                 ; MARCAMOS LA POSICIÓN DE LA COLA
00001A60                          1420              
00001A60  3239 00002132           1421              MOVE.W  (MNZPOSX),D1             ; VEMOS LA POSICIÓN INICIAL DE LA MANZANA
00001A66  3439 00002134           1422              MOVE.W  (MNZPOSY),D2
00001A6C  4EB8 18BC               1423              JSR     CINDMTRZ
00001A70  4EB8 194E               1424              JSR     MNZOCPD                 ; MARCAMOS LA POSICIÓN DE LA MANZANA
00001A74                          1425              
00001A74                          1426              
00001A74                          1427              
00001A74  5379 0000214C           1428              SUBQ.W  #1,(JGOTIM)             ; RESTAMOS 1 AL TIMER
00001A7A  0C79 0000 0000214C      1429              CMP     #0,(JGOTIM)             ; VEMOS SI HA ACABADO EL TIEMPO
00001A82  6700 0006               1430              BEQ     .GAMEOVER
00001A86  6000 000A               1431              BRA     .FIN                     ; SALTAMOS DEPENDIENDO DEL VALOR
00001A8A                          1432              
00001A8A  33FC 0003 00002156      1433  .GAMEOVER    MOVE.W  #3,(STANEXT)
00001A92                          1434  
00001A92                          1435              
00001A92                          1436  .FIN            
00001A92  4C9F 0107               1437              MOVEM.W (A7)+,D0-D2/A0
00001A96                          1438  
00001A96  4E75                    1439              RTS
00001A98                          1440  
00001A98                          1441  
00001A98                          1442  
00001A98                          1443  ;-----------------------------------------------------------------------------
00001A98                          1444  MTZPLOT
00001A98                          1445  ; DIBUJA LA MATRIZ CASILLA A CASILLA
00001A98                          1446  ; INPUT    : NONE
00001A98                          1447  ; OUTPUT   : NONE
00001A98                          1448  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001A98                          1449  ; ----------------------------------------------------------------------------
00001A98  48E7 F080               1450              MOVEM.L D0-D3/A0,-(A7)
00001A9C                          1451  
00001A9C  4240                    1452              CLR.W   D0
00001A9E  4243                    1453              CLR.W   D3
00001AA0  41F9 0000215E           1454              LEA     ESTDCLDS,A0            ; Apunta al inicio de ESTDCLDS
00001AA6  303C 0300               1455              MOVE.W  #TCELDAS,D0            ; Número total de celdas
00001AAA  363C 0000               1456              MOVE.W  #0,D3                   ; LO UTILIZAMOS PARA SABER EL INDICE EN EL QUE NOS ENCONTRAMOS
00001AAE  4241                    1457              CLR.W   D1
00001AB0  4242                    1458              CLR.W   D2
00001AB2                          1459              
00001AB2                          1460  
00001AB2                          1461  PLOTCLDS:
00001AB2  1218                    1462              MOVE.B  (A0)+,D1                ; MOVEMOS EL VALOR DE LA CELDA A D1
00001AB4  B23C 0000               1463              CMP.B   #0,D1
00001AB8  6700 0034               1464              BEQ     PLOTVAC                 ; SALTA A DIBUJAR POSICIÓN VACÍA
00001ABC  B23C 0001               1465              CMP.B   #1,D1 
00001AC0  6700 0032               1466              BEQ     PLOTCOL                 ; SALTA A DIBUJAR COLA
00001AC4  B23C 0002               1467              CMP.B   #2,D1
00001AC8  6700 0030               1468              BEQ     PLOTSEG                 ; SALTA A DIBUJAR SEGMENTO
00001ACC  B23C 0003               1469              CMP.B   #3,D1
00001AD0  6700 0016               1470              BEQ     PLOTCBZ                 ; SALTA A DIBUJAR CABEZA
00001AD4  B23C 0004               1471              CMP.B   #4,D1                 
00001AD8  6700 0026               1472              BEQ     PLOTAPPLE               ; SALTA A DIBUJAR MANZANA
00001ADC                          1473    
00001ADC                          1474  DONEPLOT            
00001ADC  5243                    1475              ADDQ    #1,D3                   ; AUMENTAMOS EL INDICE DE CELDA PARA LA SIGUIENTE
00001ADE  5340                    1476              SUBI.W  #1,D0                  ; Decrementa el contador de celdas
00001AE0  66D0                    1477              BNE     PLOTCLDS                ; Repite hasta que esten vacías
00001AE2  4CDF 010F               1478              MOVEM.L (A7)+,D0-D3/A0
00001AE6  4E75                    1479              RTS
00001AE8                          1480  PLOTCBZ:
00001AE8  4EB8 140E               1481              JSR     HEADPLOT
00001AEC  60EE                    1482              BRA     DONEPLOT
00001AEE                          1483  
00001AEE                          1484  PLOTVAC:    
00001AEE  4EB8 19BE               1485              JSR     FONPLOT
00001AF2  60E8                    1486              BRA     DONEPLOT                ; DIBUJADO HECHO 
00001AF4                          1487  
00001AF4                          1488  PLOTCOL:   
00001AF4  4EB8 15F2               1489              JSR     TAILPLOT 
00001AF8  60E2                    1490              BRA     DONEPLOT                ; DIBUJADO HECHO 
00001AFA                          1491              
00001AFA                          1492  PLOTSEG:    
00001AFA  4EB8 1552               1493              JSR     SEGPLOT
00001AFE  60DC                    1494              BRA     DONEPLOT                ; DIBUJADO HECHO    
00001B00                          1495  
00001B00                          1496  PLOTAPPLE:
00001B00  4EB8 16A2               1497              JSR     APPLEPLOT
00001B04  60D6                    1498              BRA     DONEPLOT            
00001B06                          1499  
00001B06                          1500  
00001B06                          1501  
00001B06                          1502  
00001B06                          1503  
00001B06                          1504  
00001B06                          1505  
00001B06                          1506  
00001B06                          1507  
00001B06                          1508  
00001B06                          1509  
00001B06                          1510  
00001B06                          1511  
00001B06                          1512  
00001B06                          1513  
00001B06                          1514  
00001B06                          1515  
00001B06                          1516  
00001B06                          1517  
00001B06                          1518  
00001B06                          1519  
00001B06                          1520  
00001B06                          1521  -------------------- end include --------------------
00001B06                          1522              INCLUDE 'INTRO.X68'
00001B06                          1523  ; ==============================================================================
00001B06                          1524  ; INTRO SCREEN
00001B06                          1525  ; ==============================================================================
00001B06                          1526  
00001B06                          1527  ; ------------------------------------------------------------------------------
00001B06                          1528  ISCINIT
00001B06                          1529  ; INTRO SCREEN INIT
00001B06                          1530  ; INPUT    : NONE
00001B06                          1531  ; OUTPUT   : NONE
00001B06                          1532  ; MODIFIES : NONE
00001B06                          1533  ; ------------------------------------------------------------------------------
00001B06                          1534  
00001B06  4279 0000214E           1535              CLR.W   (ISCTIMER)
00001B0C                          1536              
00001B0C  4E75                    1537              RTS
00001B0E                          1538  
00001B0E                          1539  ; ------------------------------------------------------------------------------
00001B0E                          1540  ISCUPD
00001B0E                          1541  ; INTRO SCREEN UPDATE
00001B0E                          1542  ; INPUT    : NONE
00001B0E                          1543  ; OUTPUT   : NONE
00001B0E                          1544  ; MODIFIES : NONE
00001B0E                          1545  ; ------------------------------------------------------------------------------
00001B0E                          1546  
00001B0E  48E7 FC00               1547              MOVEM.L D0-D5,-(A7)
00001B12                          1548              
00001B12  323C 0107               1549              MOVE.W  #$0107,D1               ;HABILITAR IRQ
00001B16  303C 003C               1550              MOVE.W  #60,D0
00001B1A  4E4F                    1551              TRAP    #15
00001B1C                          1552              
00001B1C                          1553  .MAINLOOP            
00001B1C  123C 0000               1554              MOVE.B  #0,D1                   ;LEER ESTADO ACTUAL RATON
00001B20  303C 003D               1555              MOVE.   #61,D0
00001B24  4E4F                    1556              TRAP    #15
00001B26                          1557              
00001B26  2401                    1558              MOVE.L  D1,D2                   ;GUARDAR COORDENADAS RATON EN D2
00001B28  0200 0001               1559              ANDI.B  #1,D0                   ;COMPROBAR click izquierdo
00001B2C  4A40                    1560              TST     D0
00001B2E  6700 0032               1561              BEQ     .CONT
00001B32                          1562              
00001B32                          1563              ;MIRAMOS SI SE HA PULSADO EN EL TEXTO CORRESPONDIENTE
00001B32  263C 00000108           1564              MOVE.L  #$108,D3                 ;(640 - 112) / 2 = 264 PIXELES -> COORDENADA X
00001B38  7819                    1565              MOVE.L  #$19,D4                  ;COORDENADA Y DEL TEXTO 25
00001B3A                          1566              
00001B3A  2A02                    1567              MOVE.L  D2,D5                   ;COORDENADA Y RATON
00001B3C  0285 0000FFFF           1568              ANDI.L  #$0000FFFF,D5
00001B42  BA84                    1569              CMP.L   D4,D5
00001B44  6D00 001C               1570              BLT     .CONT                   ;SI Y < TEXTO
00001B48                          1571  
00001B48  2A02                    1572              MOVE.L  D2,D5                   ;COORDENADA X RATON
00001B4A  0285 0000FFFF           1573              ANDI.L  #$FFFF,D5               ;EXTRAER X (BITS BAJOS)
00001B50  BA83                    1574              CMP.L   D3,D5
00001B52  6D00 000E               1575              BLT     .CONT                   ;SI X < TEXTO
00001B56                          1576              
00001B56                          1577              ;SI EL CLICK ESTA DENTRO DEL AREA DEL TEXTO
00001B56  33FC 0002 00002156      1578              MOVE.W  #2,(STANEXT)            ; SI COINCIDE INICIAR JUEGO
00001B5E  6000 0034               1579              BRA     .DONE            
00001B62                          1580              
00001B62                          1581  .CONT       
00001B62                          1582  
00001B62  103C 0013               1583              MOVE.B  #19,D0                  ; Tarea 19: Detectar teclas
00001B66  7250                    1584              MOVE.L  #'P',D1                 ; Código ASCII de la tecla P
00001B68  4E4F                    1585              TRAP    #15
00001B6A  0801 0000               1586              BTST.L  #0,D1                   ; Verificar si la tecla P está presionada
00001B6E  6700 000A               1587              BEQ     .END                    ; Si no está presionada, continuar
00001B72  33FC 0004 00002156      1588              MOVE.W  #4,(STANEXT)            ; Cambiar STANEXT a 4 si la tecla P está presionada
00001B7A                          1589  .END            
00001B7A  5279 0000214E           1590              ADDQ.W  #1,(ISCTIMER)
00001B80  0C79 01F4 0000214E      1591              CMP.W   #ISCMAXTM,(ISCTIMER)
00001B88  6D00 000A               1592              BLT     .DONE
00001B8C  33FC 0001 00002156      1593              MOVE.W  #1,(STANEXT)
00001B94                          1594              
00001B94                          1595  .DONE       
00001B94  4CDF 003F               1596              MOVEM.L (A7)+,D0-D5
00001B98  4E75                    1597              RTS
00001B9A                          1598  
00001B9A                          1599  ; ------------------------------------------------------------------------------
00001B9A                          1600  ISCPLOT
00001B9A                          1601  ; INTRO SCREEN PLOT
00001B9A                          1602  ; INPUT    : NONE
00001B9A                          1603  ; OUTPUT   : NONE
00001B9A                          1604  ; MODIFIES : NONE
00001B9A                          1605  ; ------------------------------------------------------------------------------
00001B9A  48E7 C080               1606              MOVEM.L D0-D1/A0,-(A7)
00001B9E                          1607              
00001B9E                          1608              ;JSR     FONPLOT
00001B9E                          1609              
00001B9E  4281                    1610              CLR.L   D1
00001BA0  103C 0051               1611              MOVE.B  #81,D0
00001BA4  4E4F                    1612              TRAP    #15
00001BA6                          1613              
00001BA6  41F9 00001BDE           1614              LEA     .TXT1,A0
00001BAC  103C 000A               1615              MOVE.B  #10,D0
00001BB0  4EB8 119E               1616              JSR     UTLPRINT
00001BB4                          1617              
00001BB4  0839 0004 00002467      1618              BTST.B  #4,(SCRCYCCT)
00001BBC  6700 001A               1619              BEQ     .DONE
00001BC0                          1620              
00001BC0  41F9 00001BF0           1621              LEA     .TXT2,A0
00001BC6  103C 0017               1622              MOVE.B  #23,D0
00001BCA  4EB8 119E               1623              JSR     UTLPRINT
00001BCE                          1624              
00001BCE  41F9 00001C04           1625              LEA     .TXT3,A0
00001BD4  4EB8 119E               1626              JSR     UTLPRINT
00001BD8                          1627              
00001BD8  4CDF 0103               1628  .DONE       MOVEM.L (A7)+,D0-D1/A0
00001BDC                          1629  
00001BDC  4E75                    1630              RTS
00001BDE                          1631              
00001BDE= 53 4E 41 4B 45 20 ...   1632  .TXT1       DC.B    'SNAKE TIMER 68000',0
00001BF0= 43 4C 49 43 4B 20 ...   1633  .TXT2       DC.B    'CLICK HERE TO START',0
00001C04= 50 52 45 53 53 20 ...   1634  .TXT3       DC.B    'PRESS KEY P TO SEE SCORE TABLE',0
00001C24                          1635              DS.W    0
00001C24                          1636  
00001C24                          1637  
00001C24                          1638  
00001C24                          1639  
00001C24                          1640  
00001C24                          1641  
00001C24                          1642  
00001C24                          1643  
00001C24                          1644  
00001C24                          1645  
00001C24                          1646  
00001C24                          1647  
00001C24                          1648  
00001C24                          1649  
00001C24                          1650  
00001C24                          1651  
00001C24                          1652  -------------------- end include --------------------
00001C24                          1653              INCLUDE 'INSTRUCTIONS.X68'
00001C24                          1654  ; ==============================================================================
00001C24                          1655  ; INSTRUCTIONS SCREEN
00001C24                          1656  ; ==============================================================================
00001C24                          1657  
00001C24                          1658  ; ------------------------------------------------------------------------------
00001C24                          1659  INSINIT
00001C24                          1660  ; INSTRUCTIONS SCREEN INIT
00001C24                          1661  ; INPUT    : NONE
00001C24                          1662  ; OUTPUT   : NONE
00001C24                          1663  ; MODIFIES : NONE
00001C24                          1664  ; ------------------------------------------------------------------------------
00001C24                          1665  
00001C24  4279 00002150           1666              CLR.W   (INSTIMER)
00001C2A                          1667              ;INSMAXTM
00001C2A                          1668  
00001C2A  4E75                    1669              RTS
00001C2C                          1670  
00001C2C                          1671  ; ------------------------------------------------------------------------------
00001C2C                          1672  INSUPD
00001C2C                          1673  ; INSTRUCTIONS SCREEN UPDATE
00001C2C                          1674  ; INPUT    : NONE
00001C2C                          1675  ; OUTPUT   : NONE
00001C2C                          1676  ; MODIFIES : NONE
00001C2C                          1677  ; ------------------------------------------------------------------------------
00001C2C                          1678  
00001C2C  5279 00002150           1679              ADDQ.W  #1,(INSTIMER)
00001C32  0C79 01F4 00002150      1680              CMP.W   #INSMAXTM,(INSTIMER)
00001C3A  6D00 0008               1681              BLT     .DONE
00001C3E  4279 00002156           1682              CLR.W   (STANEXT)
00001C44                          1683  .DONE
00001C44  4E75                    1684              RTS
00001C46                          1685  
00001C46                          1686  ; ------------------------------------------------------------------------------
00001C46                          1687  INSPLOT
00001C46                          1688  ; INSTRUCTIONS SCREEN PLOT
00001C46                          1689  ; INPUT    : NONE
00001C46                          1690  ; OUTPUT   : NONE
00001C46                          1691  ; MODIFIES : NONE
00001C46                          1692  ; ------------------------------------------------------------------------------
00001C46                          1693  
00001C46  48E7 C0C0               1694              MOVEM.L D0-D1/A0-A1,-(A7)
00001C4A                          1695              
00001C4A                          1696              ;JSR     FONPLOT
00001C4A                          1697              
00001C4A  103C 000B               1698              MOVE.B  #11,D0
00001C4E  43F9 00001DC8           1699              LEA     .TXTLST,A1
00001C54  2219                    1700  .LOOP       MOVE.L  (A1)+,D1
00001C56  6700 000A               1701              BEQ     .DONE
00001C5A  2041                    1702              MOVE.L  D1,A0
00001C5C  4EB8 119E               1703              JSR     UTLPRINT
00001C60  60F2                    1704              BRA     .LOOP
00001C62                          1705              
00001C62  4CDF 0303               1706  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
00001C66  4E75                    1707              RTS
00001C68= 57 45 4C 43 4F 4D ...   1708  .TXT1       DC.B    'WELCOME TO THE GAME OF SNAKE TIMER 68000!',0
00001C92= 59 4F 55 52 20 47 ...   1709  .TXT2       DC.B    'YOUR GOAL IN THIS GAME IS TO EAT AS MUCH APPLES AS THE TIMER ALLOWS YOU',0
00001CDA= 45 41 43 48 20 41 ...   1710  .TXT3       DC.B    'EACH APPLE EATEN INCREASES THE TIME YOU CAN PLAY',0
00001D0B= 54 4F 20 54 48 49 ...   1711  .TXT4       DC.B    'TO THIS END, MOVE THE SNAKE WITH THE ARROWS',0
00001D37= 48 4F 57 20 54 4F ...   1712  .TXT5       DC.B    'HOW TO DO IT? YOU MAY ASK.',0
00001D52= 49 54 20 49 53 20 ...   1713  .TXT6       DC.B    'IT IS EASY: JUST USE THE UP, DOWN, LEFT, RIGHT KEYS TO MOVE THE SNAKE',0
00001D98= 42 45 20 43 41 52 ...   1714  .TXT7       DC.B    'BE CAREFUL WITH THE WALLS! TRY NOT TO HIT THEM.',0
00001DC8= 00001C68 00001C92 ...   1715  .TXTLST     DC.L    .TXT1,.TXT2,.TXT3,.TXT4,.TXT5,.TXT6,.TXT7,0
00001DE8                          1716  
00001DE8                          1717  
00001DE8                          1718  
00001DE8                          1719  
00001DE8                          1720  
00001DE8                          1721  
00001DE8                          1722  
00001DE8                          1723  
00001DE8                          1724  
00001DE8                          1725  
00001DE8                          1726  
00001DE8                          1727  
00001DE8                          1728  
00001DE8                          1729  
00001DE8                          1730  -------------------- end include --------------------
00001DE8                          1731              INCLUDE 'GAMEOVER.X68'
00001DE8                          1732  ; ==============================================================================
00001DE8                          1733  ; GAME OVER SCREEN
00001DE8                          1734  ; ==============================================================================
00001DE8                          1735  
00001DE8                          1736  ; ------------------------------------------------------------------------------
00001DE8                          1737  GOVINIT
00001DE8                          1738  ; GAME OVER SCREEN INIT
00001DE8                          1739  ; INPUT    : NONE
00001DE8                          1740  ; OUTPUT   : NONE
00001DE8                          1741  ; MODIFIES : NONE
00001DE8                          1742  ; ------------------------------------------------------------------------------
00001DE8                          1743  
00001DE8  4279 00002152           1744              CLR.W  (GOVTIMER)
00001DEE  4E75                    1745              RTS
00001DF0                          1746  
00001DF0                          1747  ; ------------------------------------------------------------------------------
00001DF0                          1748  GOVUPD
00001DF0                          1749  ; GAME OVER SCREEN UPDATE
00001DF0                          1750  ; INPUT    : NONE
00001DF0                          1751  ; OUTPUT   : NONE
00001DF0                          1752  ; MODIFIES : NONE
00001DF0                          1753  ; ------------------------------------------------------------------------------
00001DF0  48E7 E040               1754              MOVEM.L D0-D2/A1,-(A7)
00001DF4                          1755              
00001DF4  103C 0013               1756              MOVE.B  #19,D0                  ; Detectar teclas
00001DF8  7253                    1757              MOVE.L  #'S',D1                 ; Código ASCII de la tecla S
00001DFA  4E4F                    1758              TRAP    #15
00001DFC  0801 0000               1759              BTST.L  #0,D1                   ; Verificar si la tecla S está presionada
00001E00  6700 0008               1760              BEQ     CONT                    ; Si no está presionada, continuar
00001E04                          1761  
00001E04  4279 00002156           1762              CLR.W (STANEXT)                 ; Cambiar STANEXT a 4 si la tecla P está presionada
00001E0A                          1763  
00001E0A                          1764  
00001E0A                          1765  CONT
00001E0A                          1766  
00001E0A                          1767              
00001E0A                          1768              
00001E0A  5279 00002152           1769              ADDQ.W  #1,(GOVTIMER)
00001E10  0C79 01F4 00002152      1770              CMP.W   #500,(GOVTIMER)
00001E18  6D00 0008               1771              BLT     .DONE
00001E1C  4279 00002156           1772              CLR.W   (STANEXT)
00001E22                          1773  .DONE
00001E22                          1774  
00001E22                          1775  
00001E22                          1776              
00001E22  4280                    1777              CLR.L   D0                      ; BORRAMOS LOS REGISTROS QUE VAMOS A UTILIZAR
00001E24  4281                    1778              CLR.L   D1
00001E26  4282                    1779              CLR.L   D2
00001E28                          1780              
00001E28  103C 0032               1781              MOVE.B  #50,D0                  ; CERRAMOS TODOS LOS ARCHIVOS
00001E2C  4E4F                    1782              TRAP    #15
00001E2E                          1783  
00001E2E                          1784              ; ABRIR/CREAR ARCHIVO
00001E2E  43F9 00001EFC           1785              LEA     FILE,A1
00001E34  103C 0034               1786              MOVE.B  #52,D0
00001E38  4E4F                    1787              TRAP    #15
00001E3A  4A81                    1788              TST.L   D1                      ; Verificar si File-ID es válido
00001E3C                          1789  
00001E3C  6B00 00B8               1790              BMI     ERROR                   ; Salta a la rutina de error si fallo
00001E40                          1791  
00001E40  23C1 00002158           1792              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001E46                          1793              
00001E46                          1794             ; Buscar y sobrescribir marcador existente
00001E46  2239 00002158           1795              MOVE.L  FILEID,D1              ; File-ID del archivo abierto
00001E4C  7400                    1796              MOVE.L  #0,D2                  ; Posicionarse al inicio del archivo
00001E4E  103C 0037               1797              MOVE.B  #55,D0                 ; Tarea 55: Posicionar archivo
00001E52  4E4F                    1798              TRAP    #15
00001E54                          1799  
00001E54                          1800  .BUSCAR_MARCADOR
00001E54  43F9 0000215A           1801              LEA     BFFLEC,A1              ; Buffer para leer datos
00001E5A  2239 00002158           1802              MOVE.L  FILEID,D1              ; File-ID del archivo abierto
00001E60  7401                    1803              MOVE.L  #1,D2                  ; Leer 1 byte
00001E62  103C 0035               1804              MOVE.B  #53,D0                 ; Tarea 53: Leer archivo
00001E66  4E4F                    1805              TRAP    #15
00001E68  B07C 0001               1806              CMP.W   #1,D0                  ; Verificar si alcanzamos EOF
00001E6C  6700 0030               1807              BEQ     .ESCRIBIR              ; Si alcanzamos EOF, escribir al final
00001E70  0C39 0023 0000215A      1808              CMP.B   #'#',(BFFLEC)          ; Comparar con el marcador `#`
00001E78  6700 0004               1809              BEQ     .SOBRESCRIBIR          ; Si encontramos `#`, sobrescribirlo
00001E7C  60D6                    1810              BRA     .BUSCAR_MARCADOR       ; Continuar buscando el marcador
00001E7E                          1811  
00001E7E                          1812  .SOBRESCRIBIR
00001E7E                          1813              ; Sobrescribir el marcador existente con los nuevos datos
00001E7E  43F9 0000214A           1814              LEA     JGOPNTS,A1              ; Dirección de los datos a escribir
00001E84  2239 00002158           1815              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001E8A  7402                    1816              MOVE.L  #2,D2                   ; Tamaño de los datos a escribir
00001E8C  103C 0036               1817              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001E90  4E4F                    1818              TRAP    #15
00001E92  B07C 0000               1819              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001E96  6600 005E               1820              BNE     ERROR                   ; Saltar a error si D0 != 0
00001E9A  6000 002C               1821              BRA     .MARCADOR               ; Escribir el nuevo marcador
00001E9E                          1822  
00001E9E                          1823  .ESCRIBIR
00001E9E                          1824              ; Posicionarse al final del archivo y escribir datos
00001E9E  2239 00002158           1825              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001EA4  74FF                    1826              MOVE.L  #-1,D2                  ; Posicionarse al final del archivo
00001EA6  103C 0037               1827              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001EAA  4E4F                    1828              TRAP    #15
00001EAC  43F9 0000214A           1829              LEA     JGOPNTS,A1              ; Dirección de los datos a escribir
00001EB2  2239 00002158           1830              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001EB8  7402                    1831              MOVE.L  #2,D2                   ; Tamaño de los datos a escribir
00001EBA  103C 0036               1832              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001EBE  4E4F                    1833              TRAP    #15                     
00001EC0  B07C 0000               1834              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001EC4  6600 0030               1835              BNE     ERROR                   ; Saltar a error si D0 != 0
00001EC8                          1836  
00001EC8                          1837  .MARCADOR
00001EC8                          1838              ; Escribir el nuevo marcador `#` al final del archivo
00001EC8  43F9 00001F07           1839              LEA     MARKER,A1              ; Dirección del marcador
00001ECE  2239 00002158           1840              MOVE.L  FILEID,D1              ; File-ID del archivo abierto
00001ED4  7401                    1841              MOVE.L  #1,D2                  ; Tamaño del marcador (1 byte)
00001ED6  103C 0036               1842              MOVE.B  #54,D0                 ; Tarea 54: Escribir archivo
00001EDA  4E4F                    1843              TRAP    #15
00001EDC  B07C 0000               1844              CMP.W   #0,D0                  ; Verificar si la operación fue exitosa
00001EE0  6600 0014               1845              BNE     ERROR                  ; Saltar a error si D0 != 0
00001EE4                          1846              ; CERRAR ARCHIVO
00001EE4                          1847  
00001EE4  2239 00002158           1848              MOVE.L  FILEID,D1   ; File-ID del archivo
00001EEA  103C 0038               1849              MOVE.B  #56,D0      ; Tarea 56: Cerrar archivo
00001EEE  4E4F                    1850              TRAP    #15    
00001EF0                          1851              
00001EF0                          1852                          
00001EF0  4CDF 0207               1853              MOVEM.L  (A7)+,D0-D2/A1
00001EF4                          1854              
00001EF4  4E75                    1855              RTS
00001EF6                          1856              
00001EF6                          1857  ERROR
00001EF6  103C 0009               1858              MOVE.B  #9,D0       ; Terminar el programa
00001EFA  4E4F                    1859              TRAP    #15        
00001EFC                          1860              
00001EFC                          1861              
00001EFC= 50 55 4E 54 4F 53 ...   1862  FILE        DC.B    'PUNTOS.TXT',0   
00001F07= 23 00                   1863  MARKER      DC.B    '#',0                   ; CENTINELA DE EOF #
00001F0A                          1864              DS.W    0        
00001F0A                          1865              
00001F0A                          1866  ; ------------------------------------------------------------------------------
00001F0A                          1867  GOVPLOT
00001F0A                          1868  ; GAME OVER SCREEN PLOT
00001F0A                          1869  ; INPUT    : NONE
00001F0A                          1870  ; OUTPUT   : NONE
00001F0A                          1871  ; MODIFIES : NONE
00001F0A                          1872  ; ------------------------------------------------------------------------------
00001F0A  48E7 C080               1873              MOVEM.L D0-D1/A0,-(A7)
00001F0E                          1874              
00001F0E                          1875              ;JSR     FONPLOT
00001F0E                          1876              
00001F0E  4281                    1877              CLR.L   D1
00001F10  103C 0051               1878              MOVE.B  #81,D0
00001F14  4E4F                    1879              TRAP    #15
00001F16                          1880              
00001F16  41F9 00001F38           1881              LEA     .TXT1,A0
00001F1C  103C 000A               1882              MOVE.B  #10,D0
00001F20  4EB8 119E               1883              JSR     UTLPRINT
00001F24                          1884              
00001F24  41F9 00001F42           1885              LEA     .TXT2,A0
00001F2A  103C 0014               1886              MOVE.B  #20,D0
00001F2E  4EB8 119E               1887              JSR     UTLPRINT
00001F32                          1888              
00001F32  4CDF 0103               1889  .DONE       MOVEM.L (A7)+,D0-D1/A0
00001F36                          1890  
00001F36  4E75                    1891              RTS
00001F38= 47 41 4D 45 20 4F ...   1892  .TXT1       DC.B    'GAME OVER',0
00001F42= 57 41 49 54 20 54 ...   1893  .TXT2       DC.B    'WAIT TO RETURN TO MAIN PAGE OR PRESS KEY S',0
00001F6E                          1894              DS.W    0
00001F6E                          1895  
00001F6E                          1896  
00001F6E                          1897  
00001F6E                          1898  
00001F6E                          1899  
00001F6E                          1900  
00001F6E                          1901  
00001F6E                          1902  
00001F6E                          1903  
00001F6E                          1904  
00001F6E                          1905  
00001F6E                          1906  
00001F6E                          1907  
00001F6E                          1908  
00001F6E                          1909  
00001F6E                          1910  
00001F6E                          1911  
00001F6E                          1912  
00001F6E                          1913  -------------------- end include --------------------
00001F6E                          1914              INCLUDE 'TABLE.X68'
00001F6E                          1915  ; ==============================================================================
00001F6E                          1916  ; TABLE SCREEN
00001F6E                          1917  ; ==============================================================================
00001F6E                          1918  
00001F6E                          1919  ; ------------------------------------------------------------------------------
00001F6E                          1920  TABINIT
00001F6E                          1921  ; TABLE SCREEN INIT
00001F6E                          1922  ; INPUT    : NONE
00001F6E                          1923  ; OUTPUT   : NONE
00001F6E                          1924  ; MODIFIES : NONE
00001F6E                          1925  ; ------------------------------------------------------------------------------
00001F6E                          1926  
00001F6E                          1927             
00001F6E  4E75                    1928              RTS
00001F70                          1929  
00001F70                          1930  ; ------------------------------------------------------------------------------
00001F70                          1931  TABUPD
00001F70                          1932  ; TABLE SCREEN UPDATE
00001F70                          1933  ; INPUT    : NONE
00001F70                          1934  ; OUTPUT   : NONE
00001F70                          1935  ; MODIFIES : NONE
00001F70                          1936  ; ------------------------------------------------------------------------------
00001F70  103C 0013               1937              MOVE.B  #19,D0                  ; Detectar teclas
00001F74  7253                    1938              MOVE.L  #'S',D1                 ; Código ASCII de la tecla S
00001F76  4E4F                    1939              TRAP    #15
00001F78  0801 0000               1940              BTST.L  #0,D1                   ; Verificar si la tecla S está presionada
00001F7C  6700 0008               1941              BEQ     END                     ; Si no está presionada, continuar
00001F80                          1942  
00001F80  4279 00002156           1943              CLR.W (STANEXT)                 ; Cambiar STANEXT a 4 si la tecla P está presionada
00001F86                          1944  
00001F86                          1945  
00001F86                          1946  END:
00001F86                          1947             
00001F86  4E75                    1948              RTS
00001F88                          1949  
00001F88                          1950  ; ------------------------------------------------------------------------------
00001F88                          1951  TABPLOT
00001F88                          1952  ; TABLE SCREEN PLOT
00001F88                          1953  ; INPUT    : NONE
00001F88                          1954  ; OUTPUT   : NONE
00001F88                          1955  ; MODIFIES : NONE
00001F88                          1956  ; ------------------------------------------------------------------------------
00001F88                          1957  
00001F88  48E7 F0C0               1958              MOVEM.L D0-D3/A0-A1,-(A7)
00001F8C                          1959              
00001F8C  4243                    1960              CLR.W   D3
00001F8E                          1961              ; Cerrar todos los archivos abiertos al inicio
00001F8E                          1962  
00001F8E  103C 0032               1963              MOVE.B  #50,D0                  ; Cerrar todos los archivos
00001F92  4E4F                    1964              TRAP    #15
00001F94                          1965  
00001F94                          1966              ; Abrir o crear archivo
00001F94                          1967  
00001F94  43F9 00002044           1968              LEA     .FILE,A1                ; Dirección del nombre del archivo
00001F9A  103C 0033               1969              MOVE.B  #51,D0                  ; Abrir o crear archivo
00001F9E  4E4F                    1970              TRAP    #15
00001FA0  23C1 00002158           1971              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001FA6  B07C 0000               1972              CMP.W   #0,D0                    ; Verificar si la operación fue exitosa
00001FAA  6600 FF4A               1973              BNE     ERROR                    ; Saltar a error si D0 != 0
00001FAE                          1974  
00001FAE                          1975  
00001FAE                          1976              ; Leer datos en el archivo
00001FAE                          1977  .LEC
00001FAE  43F9 0000215A           1978              LEA     BFFLEC,A1             ; Dirección del buffer para guardar los datos a leer
00001FB4  2239 00002158           1979              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001FBA                          1980  
00001FBA  7402                    1981              MOVE.L  #2,D2                   ; Número de bytes a leer (2 en este caso)
00001FBC  103C 0035               1982              MOVE.B  #53,D0                  ; Leer archivo
00001FC0  4E4F                    1983              TRAP    #15
00001FC2  B07C 0001               1984              CMP.W   #1,D0                    ; Verificar si alcanzamos EOF
00001FC6  6700 0064               1985              BEQ     .EOF                     ; Si D0 = 1, finalizar lectura
00001FCA  B07C 0002               1986              CMP.W   #2,D0                    ; Verificar si se leyeron los 2 bytes
00001FCE  6700 FF26               1987              BEQ     ERROR                    ; Saltar a error si no se leyeron 2 bytes
00001FD2                          1988              
00001FD2                          1989              
00001FD2                          1990              ; Verificar si el centinela está en los datos leídos
00001FD2  41F9 0000215A           1991              LEA     BFFLEC,A0
00001FD8  0C10 0023               1992              CMP.B   #'#',(A0)               ; Comparar primer byte con el centinela
00001FDC  6700 004E               1993              BEQ     .EOF                    ; Si es '#', finalizar lectura
00001FE0  0C28 0023 0001          1994              CMP.B   #'#',1(A0)              ; Comparar segundo byte con el centinela
00001FE6  6700 0044               1995              BEQ     .EOF                    ; Si es '#', finalizar lectura
00001FEA                          1996              
00001FEA                          1997              ; Convertir ASCII a número binario
00001FEA  41F9 0000215A           1998              LEA     BFFLEC,A0       ; Dirección del buffer en A0
00001FF0  1210                    1999              MOVE.B  (A0),D1         ; Leer el primer byte del buffer (carácter ASCII)
00001FF2  0401 0030               2000              SUB.B   #48,D1          ; Convertir de ASCII a dígito
00001FF6  1428 0001               2001              MOVE.B  1(A0),D2        ; Leer el segundo byte del buffer (carácter ASCII)
00001FFA  0402 0030               2002              SUB.B   #48,D2          ; Convertir de ASCII a dígito
00001FFE  C2FC 000A               2003              MULU    #10,D1          ; Multiplicar primer dígito por 10
00002002  D242                    2004              ADD     D2,D1           ; Sumar el segundo dígito
00002004                          2005  
00002004                          2006              ; Mostrar "PARTIDA : " + número
00002004  43F9 0000204F           2007              LEA     .TXT1,A1                 ; Dirección del texto base
0000200A  103C 000E               2008              MOVE.B  #14,D0                   ; Tarea 14: Mostrar texto sin CR, LF
0000200E  4E4F                    2009              TRAP    #15
00002010                          2010  
00002010  2201                    2011              MOVE.L  D1,D1                    ; Número convertido
00002012  103C 000F               2012              MOVE.B  #15,D0                   ; Tarea 15: Mostrar número en base 10
00002016  143C 000A               2013              MOVE.B  #10,D2                   ; Base 10
0000201A  4E4F                    2014              TRAP    #15
0000201C                          2015  
0000201C                          2016              ; Separar líneas
0000201C  103C 000D               2017              MOVE.B  #13,D0                   ; Carriage return
00002020  4E4F                    2018              TRAP    #15
00002022  103C 000A               2019              MOVE.B  #10,D0                   ; Line feed
00002026  4E4F                    2020              TRAP    #15
00002028                          2021  
00002028                          2022              ; Incrementar contador y continuar
00002028  5243                    2023              ADDQ.W  #1,D3                    ; Incrementar número de partida
0000202A  6082                    2024              BRA     .LEC                     ; Repetir lectura
0000202C                          2025  
0000202C                          2026  
0000202C                          2027              
0000202C                          2028  
0000202C                          2029  .EOF
0000202C                          2030  
0000202C                          2031              ; Cerrar archivo
0000202C                          2032  
0000202C  2239 00002158           2033              MOVE.L  FILEID,D1   ; File-ID del archivo
00002032  103C 0038               2034              MOVE.B  #56,D0      ; Tarea 56: Cerrar archivo
00002036  4E4F                    2035              TRAP    #15
00002038                          2036  
00002038                          2037  
00002038                          2038  
00002038                          2039              
00002038                          2040  
00002038  4CDF 030F               2041              MOVEM.L (A7)+,D0-D3/A0-A1
0000203C                          2042  
0000203C  4E75                    2043              RTS
0000203E                          2044  
0000203E                          2045  .ERROR
0000203E  103C 0009               2046              MOVE.B  #9,D0       ; Terminar el programa
00002042  4E4F                    2047              TRAP    #15
00002044                          2048             
00002044                          2049              
00002044= 50 55 4E 54 4F 53 ...   2050  .FILE       DC.B    'PUNTOS.TXT',0 ; Nombre del archivo, null-terminated
0000204F= 50 41 52 54 49 44 ...   2051  .TXT1       DC.B    'PARTIDA : ',0
0000205A                          2052              DS.W    0
0000205A                          2053  -------------------- end include --------------------
0000205A                          2054              INCLUDE 'STATES.X68'
0000205A                          2055  ; =============================================================================
0000205A                          2056  ; GAME STATE MANAGEMENT
0000205A                          2057  ; =============================================================================
0000205A                          2058  
0000205A                          2059  ; -----------------------------------------------------------------------------
0000205A                          2060  STAINIT
0000205A                          2061  ; INITALIZES THE STATE MANAGER
0000205A                          2062  ; INPUT    - NONE
0000205A                          2063  ; OUTPUT   - NONE
0000205A                          2064  ; MODIFIES - NONE
0000205A                          2065  ; -----------------------------------------------------------------------------
0000205A  33FC FFFF 00002154      2066              MOVE.W  #STANONE,(STACUR)
00002062  4279 00002156           2067              CLR.W   (STANEXT)
00002068  4E75                    2068              RTS
0000206A                          2069  
0000206A                          2070  ; -----------------------------------------------------------------------------
0000206A                          2071  STAUPD
0000206A                          2072  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
0000206A                          2073  ; INPUT    - NONE
0000206A                          2074  ; OUTPUT   - NONE
0000206A                          2075  ; MODIFIES - NONE
0000206A                          2076  ; -----------------------------------------------------------------------------
0000206A  48E7 8080               2077              MOVEM.L D0/A0,-(A7)
0000206E                          2078              
0000206E  4280                    2079              CLR.L   D0
00002070  3039 00002156           2080              MOVE.W  (STANEXT),D0
00002076  B079 00002154           2081              CMP.W   (STACUR),D0
0000207C  6700 0012               2082              BEQ     .DOUPD
00002080  33C0 00002154           2083              MOVE.W  D0,(STACUR)             ; IF STATE CHANGED, DO INIT
00002086  E588                    2084              LSL.L   #2,D0
00002088  2040                    2085              MOVE.L  D0,A0
0000208A  2068 20A8               2086              MOVE.L  .INITBL(A0),A0
0000208E  4E90                    2087              JSR     (A0)
00002090  4280                    2088  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
00002092  3039 00002154           2089              MOVE.W  (STACUR),D0
00002098  E588                    2090              LSL.L   #2,D0
0000209A  2040                    2091              MOVE.L  D0,A0
0000209C  2068 20BC               2092              MOVE.L  .UPDTBL(A0),A0
000020A0  4E90                    2093              JSR     (A0)
000020A2                          2094              
000020A2  4CDF 0101               2095              MOVEM.L (A7)+,D0/A0
000020A6  4E75                    2096              RTS
000020A8= 00001B06 00001C24 ...   2097  .INITBL     DC.L    ISCINIT,INSINIT,GAMINIT,GOVINIT,TABINIT
000020BC= 00001B0E 00001C2C ...   2098  .UPDTBL     DC.L    ISCUPD,INSUPD,GAMUPD,GOVUPD,TABUPD
000020D0                          2099  
000020D0                          2100  ; -----------------------------------------------------------------------------
000020D0                          2101  STAPLOT
000020D0                          2102  ; PERFORMS STATE PLOT
000020D0                          2103  ; INPUT    - NONE
000020D0                          2104  ; OUTPUT   - NONE
000020D0                          2105  ; MODIFIES - NONE
000020D0                          2106  ; -----------------------------------------------------------------------------
000020D0  48E7 8080               2107              MOVEM.L D0/A0,-(A7)
000020D4  4280                    2108              CLR.L   D0
000020D6  3039 00002154           2109              MOVE.W  (STACUR),D0
000020DC  E588                    2110              LSL.L   #2,D0
000020DE  2040                    2111              MOVE.L  D0,A0
000020E0  2068 20EC               2112              MOVE.L  .PLTTBL(A0),A0
000020E4  4E90                    2113              JSR     (A0)
000020E6  4CDF 0101               2114              MOVEM.L (A7)+,D0/A0
000020EA  4E75                    2115              RTS
000020EC= 00001B9A 00001C46 ...   2116  .PLTTBL     DC.L    ISCPLOT,INSPLOT,GAMPLOT,GOVPLOT,TABPLOT
00002100                          2117  
00002100                          2118  ; -----------------------------------------------------------------------------
00002100                          2119  STAEMPTY
00002100                          2120  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00002100                          2121  ; INPUT    - NONE
00002100                          2122  ; OUTPUT   - NONE
00002100                          2123  ; MODIFIES - NONE
00002100                          2124  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00002100                          2125  ; -----------------------------------------------------------------------------
00002100  4E75                    2126              RTS
00002102                          2127  
00002102                          2128  
00002102                          2129  
00002102                          2130  
00002102                          2131  
00002102                          2132  
00002102                          2133  
00002102                          2134  
00002102                          2135  
00002102                          2136  
00002102                          2137  
00002102                          2138  
00002102                          2139  
00002102                          2140  -------------------- end include --------------------
00002102                          2141              
00002102                          2142              
00002102                          2143  START:
00002102                          2144                  
00002102                          2145  ; --- INIZIALIZACIÓN ---------------------------------------------------------
00002102                          2146  
00002102  007C 0700               2147              ORI.W   #$0700,SR
00002106  4EB8 1000               2148              JSR     SYSINIT
0000210A  4EB8 1188               2149              JSR     UTLINIT
0000210E                          2150              ;JSR     GAMINIT
0000210E  4EB8 205A               2151              JSR     STAINIT
00002112                          2152  
00002112                          2153  
00002112                          2154  .LOOP
00002112                          2155  
00002112                          2156  ; --- ACTUALIZAR -------------------------------------------------------------
00002112                          2157  
00002112                          2158  ; LEER DISPOSITIVOS DE ENTRADA
00002112                          2159  
00002112  4E41                    2160              TRAP    #KBDUPTN
00002114                          2161  
00002114                          2162  ; ACTUALIZAR LÓGICA DEL JUEGO
00002114                          2163              ;JSR     GAMUPD
00002114  4EB8 206A               2164              JSR     STAUPD
00002118                          2165              
00002118                          2166  ; --- SINCRONIZACIÓN ---------------------------------------------------------
00002118                          2167              
00002118  4A39 00002466           2168  .WINT       TST.B   (SCRINTCT)
0000211E  67F8                    2169              BEQ     .WINT   
00002120  4239 00002466           2170              CLR.B   (SCRINTCT)         
00002126                          2171  
00002126                          2172  
00002126                          2173  ; --- DIBUJAR ----------------------------------------------------------------
00002126                          2174              
00002126                          2175              ;JSR     GAMPLOT
00002126  4EB8 20D0               2176              JSR     STAPLOT
0000212A                          2177              
0000212A                          2178              
0000212A  4E40                    2179              TRAP    #SCRUPTN                      ; ACTUALIZA DOBLE BUFFER
0000212C                          2180  
0000212C                          2181  
0000212C  60E4                    2182              BRA     .LOOP
0000212E                          2183  
0000212E  FFFF FFFF               2184              SIMHALT
00002132                          2185  
00002132                          2186              INCLUDE 'VARS.X68'
00002132                          2187  ; ----------------------------------------------------------------------------
00002132                          2188  ; VARIABLES DEL JUEGO
00002132                          2189  ; ----------------------------------------------------------------------------
00002132                          2190  
00002132                          2191  ; --- VARIABLES DE LA MANZANA ------------------------------------------------
00002132                          2192  
00002132                          2193  MNZPOSX     DS.W    1                       ; COORDENADA X DE LA MANZANA
00002134                          2194  MNZPOSY     DS.W    1                       ; COORDENADA Y DE LA MANZANA
00002136                          2195  
00002136                          2196  ; --- VARIABLES DE LA SERPIENTE ----------------------------------------------
00002136                          2197  
00002136                          2198  CBZPOSX     DS.W    1                       ; COORDENADA X CABEZA
00002138                          2199  CBZPOSY     DS.W    1                       ; COORDENADA Y CABEZA
0000213A                          2200  CBZVELX     DS.W    1                       ; VELOCIDAD X CABEZA
0000213C                          2201  CBZVELY     DS.W    1                       ; VELOCIDAD Y CABEZA
0000213E                          2202  COLPOSX     DS.W    1                       ; COORDENADA X COLA
00002140                          2203  COLPOSY     DS.W    1                       ; COORDENADA Y COLA
00002142                          2204  SGMPOSX     DS.W    1                       ; COORDENADA X SEGMENTO
00002144                          2205  SGMPOSY     DS.W    1                       ; COORDENADA Y SEGMENTO
00002146                          2206  SGMPOSX2    DS.W    1                       ; COORDENADA X SEGMENTO 2
00002148                          2207  SGMPOSY2    DS.W    1                       ; COORDENADA Y SEGMENTO 2
0000214A                          2208  
0000214A                          2209  ; --- VARIABLES DEL MARCADOR -------------------------------------------------
0000214A                          2210  
0000214A                          2211  JGOPNTS     DS.W    1                       ; PUNTUACIÓN DEL JUEGO
0000214C                          2212  JGOTIM      DS.W    1                       ; TEMPORIZADOR DEL JUEGO
0000214E                          2213  
0000214E                          2214  ; --- INTRO STATE RELATED VARIABLES ------------------------------------------
0000214E                          2215  
0000214E                          2216  ISCTIMER    DS.W    1                       ; INTRO TIMER
00002150                          2217  
00002150                          2218  ; --- INSTRUCTIONS  STATE RELATED VARIABLES ----------------------------------
00002150                          2219  INSTIMER    DS.W    1                       ;INTRUCTIONS TIMER
00002152                          2220  
00002152                          2221  ; -- GAME OVER STATE RELATED VARIABLES ---------------------------------------
00002152                          2222  
00002152                          2223  GOVTIMER    DS.W    1
00002154                          2224  
00002154                          2225  ; --- VARIABLES RELACIONADAS CON LOS ESTADOS ---------------------------------
00002154                          2226  
00002154                          2227  STACUR      DS.W    1                       ; ESTADO ACTUAL
00002156                          2228  STANEXT     DS.W    1                       ; ESTADO SIGUIENTE
00002158                          2229  
00002158                          2230  ; --- VARIABLES PARA LEER/ESCRIBIR ARCHIVOS ----------------------------------
00002158                          2231  
00002158                          2232  FILEID      DS.W    1                       ; ID DEL ARCHIVO
0000215A                          2233  BFFLEC      DS.B    2                       ; BUFFER PARA LEER ARCHIVO
0000215C                          2234  
0000215C                          2235  
0000215C                          2236  
0000215C                          2237  
0000215C                          2238  
0000215C                          2239  
0000215C                          2240  
0000215C                          2241  
0000215C                          2242  
0000215C                          2243  
0000215C                          2244  
0000215C                          2245  
0000215C                          2246  
0000215C                          2247  
0000215C                          2248  
0000215C                          2249  
0000215C                          2250  
0000215C                          2251  
0000215C                          2252  
0000215C                          2253  
0000215C                          2254  -------------------- end include --------------------
0000215C                          2255              INCLUDE 'LIB/UTLVARS.X68'
0000215C                          2256  ; =============================================================================
0000215C                          2257  ; UTILITY VARIABLES
0000215C                          2258  ; =============================================================================
0000215C                          2259  
0000215C                          2260  UTLRNDIX    DS.B    1                       ; NEXT INDEX TO RANDOM NUMBER
0000215E                          2261              DS.W    0
0000215E                          2262  -------------------- end include --------------------
0000215E                          2263              INCLUDE 'SYSVARS.X68'
0000215E                          2264  ; ----------------------------------------------------------------------------
0000215E                          2265  ; VARIABLES DEL SISTEMA
0000215E                          2266  ; ----------------------------------------------------------------------------
0000215E                          2267  
0000215E                          2268  ; --- VARIABLES DE LA MATRIZ -------------------------------------------------
0000215E                          2269  
0000215E                          2270  ESTDCLDS    DS.B    TCELDAS                 ; ESTADO DE LAS CELDAS 0=VACÍO  1=COLA   2=SEGMENTO  TRZPLOT=CABEZA  4?=MANZANA    
0000245E                          2271  ESTDCBZ     DS.B    1                       ; 0= DERECHA, 1=ARRIBA, 2=IZQUIERDA, 3=ABAJO
0000245F                          2272  
0000245F                          2273  ; --- VARIABLES DE TECLADO ---------------------------------------------------
0000245F                          2274  
0000245F                          2275  KBDVAL      DS.B    1
00002460                          2276  KBDEDGE     DS.B    1                       ; KEY EDGE
00002462                          2277  LASTKEY     DS.L    1                       
00002466                          2278  
00002466                          2279  ;--- TIMED INTERRUPT RELATED VARIABLES ---------------------------------------
00002466                          2280              
00002466                          2281  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER
00002467                          2282  SCRCYCCT    DS.B    1                       ;CYCLE COUNTER
00002468                          2283              DS.W    0
00002468                          2284  
00002468                          2285  
00002468                          2286  
00002468                          2287  
00002468                          2288  
00002468                          2289  
00002468                          2290  
00002468                          2291  
00002468                          2292  
00002468                          2293  
00002468                          2294  
00002468                          2295  
00002468                          2296  
00002468                          2297  
00002468                          2298  
00002468                          2299  -------------------- end include --------------------
00002468                          2300      
00002468                          2301      
00002468                          2302              END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
APPLEINIT           1632
APPLEPLOT           16A2
APPLEUPD            1664
ARR                 1162
BFFLEC              215A
CBZFCOL             AA00
CBZHEIGH            14
CBZOCPD             18F6
CBZPCOL             FF00
CBZPOSX             2136
CBZPOSY             2138
CBZVEL              14
CBZVELX             213A
CBZVELY             213C
CBZWIDTH            14
CHCKUPDT            167C
CHECK               163E
CHECKCLD            19A0
CHKBORDE            1380
CHKCOL              13AC
CINDMTRZ            18BC
CLDFREE             19B8
CLNCLDS             1838
CNVICOOR            1964
COLFCOL             AA00
COLFND              90EE90
COLHEIGH            A
COLOCPD             1938
COLPCOL             FF00
COLPOSX             213E
COLPOSY             2140
COLWIDTH            A
CONT                1E0A
CONT:BUSCAR_MARCADOR  1E54
CONT:DONE           1E22
CONT:ESCRIBIR       1E9E
CONT:MARCADOR       1EC8
CONT:SOBRESCRIBIR   1E7E
CONTINU             1182
DER                 1156
DIVX                18C4
DIVY                18D8
DONEPLOT            1ADC
DWN                 117A
END                 1F86
ENDDIVX             18D4
ENDDIVY             18E8
ENDMULTX            1988
ENDMULTY            199A
ERROR               1EF6
ESTDCBZ             245E
ESTDCLDS            215E
FILE                1EFC
FILEID              2158
FIN                 1408
FINUPD              15EC
FONPLOT             19BE
GAMEOVER            13FA
GAMINIT             17E6
GAMPLOT             1810
GAMUPD              1800
GENPOSMNZ           1720
GOVINIT             1DE8
GOVPLOT             1F0A
GOVPLOT:DONE        1F32
GOVPLOT:TXT1        1F38
GOVPLOT:TXT2        1F42
GOVTIMER            2152
GOVUPD              1DF0
HEADINIT            12EE
HEADPLOT            140E
HEADUPD             130E
INSINIT             1C24
INSMAXTM            1F4
INSPLOT             1C46
INSPLOT:DONE        1C62
INSPLOT:LOOP        1C54
INSPLOT:TXT1        1C68
INSPLOT:TXT2        1C92
INSPLOT:TXT3        1CDA
INSPLOT:TXT4        1D0B
INSPLOT:TXT5        1D37
INSPLOT:TXT6        1D52
INSPLOT:TXT7        1D98
INSPLOT:TXTLST      1DC8
INSTIMER            2150
INSUPD              1C2C
INSUPD:DONE         1C44
ISCINIT             1B06
ISCMAXTM            1F4
ISCPLOT             1B9A
ISCPLOT:DONE        1BD8
ISCPLOT:TXT1        1BDE
ISCPLOT:TXT2        1BF0
ISCPLOT:TXT3        1C04
ISCTIMER            214E
ISCUPD              1B0E
ISCUPD:CONT         1B62
ISCUPD:DONE         1B94
ISCUPD:END          1B7A
ISCUPD:MAINLOOP     1B1C
IZQ                 116E
JGOPNTS             214A
JGOTIM              214C
KBDDOWN             28
KBDEDGE             2460
KBDINIT             1106
KBDLEFT             25
KBDRIGHT            27
KBDUP               26
KBDUPD              1114
KBDUPTN             1
KBDVAL              245F
LASTKEY             2462
LNGINI              1
MARKER              1F07
MARKMNZ             1656
MAXSGM              1
MCLDVCIA            190C
MNZFCOL             FF
MNZHEIGH            14
MNZOCPD             194E
MNZPCOL             AAFF
MNZPOSX             2132
MNZPOSY             2134
MNZWIDTH            14
MTZINIT             182A
MTZPLOT             1A98
MTZUPD              19FC
MTZUPD:CLNCLDS      1A0A
MTZUPD:FIN          1A92
MTZUPD:GAMEOVER     1A8A
MULTLOOPX           197A
MULTLOOPY           198C
NEWMNZ              1694
NOCOL               13DE
NUMCLMNS            20
NUMFILAS            18
OJOFCOL             FFFFFF
OJOHEIGH            A
OJOPCOL             0
OJOWIDTH            A
PANHEIGH            1E0
PANWIDTH            280
PLOTAPPLE           1B00
PLOTCBZ             1AE8
PLOTCLDS            1AB2
PLOTCOL             1AF4
PLOTSEG             1AFA
PLOTVAC             1AEE
PNTSFCOL            0
PNTSTEXT            65
SCOINIT             1752
SCOPLOT             1782
SCOPLOT:TXT1        17D2
SCOPLOT:TXT2        17DC
SCOUPD              1768
SCRCYCCT            2467
SCRFPS              32
SCRINIT             109A
SCRINTCT            2466
SCRINTN             1
SCRPLOT             10EC
SCRTIM              10DE
SCRUPTN             0
SEGINIT             1492
SEGPLOT             1552
SEGUPD              14C0
SGMFCOL             AA00
SGMHEIGH            14
SGMOCPD             1922
SGMPCOL             FF00
SGMPOSX             2142
SGMPOSX2            2146
SGMPOSY             2144
SGMPOSY2            2148
SGMWIDTH            14
SIGABA              1378
SIGARR              1360
SIGDER              1354
SIGIZQ              136C
SIZECLDA            14
SNDEAT              0
SNDGMOV             1
SNDINIT             103A
SNDINIT:DONE        1058
SNDINIT:LOOP        1046
SNDINIT:SNDEAT      105E
SNDINIT:SNDGMOV     106A
SNDINIT:SNDLIST     107C
SNDPLAY             1088
SNDPLTN             2
STACUR              2154
STAEMPTY            2100
STAINIT             205A
STANEXT             2156
STANONE             FFFFFFFF
STAPLOT             20D0
STAPLOT:PLTTBL      20EC
START               2102
START:LOOP          2112
START:WINT          2118
STAUPD              206A
STAUPD:DOUPD        2090
STAUPD:INITBL       20A8
STAUPD:UPDTBL       20BC
SYSINIT             1000
TABINIT             1F6E
TABPLOT             1F88
TABPLOT:EOF         202C
TABPLOT:ERROR       203E
TABPLOT:FILE        2044
TABPLOT:LEC         1FAE
TABPLOT:TXT1        204F
TABUPD              1F70
TAILINIT            1592
TAILPLOT            15F2
TAILUPD             15A4
TCELDAS             300
UTLCHRWD            8
UTLINIT             1188
UTLPRINT            119E
UTLPRINT:ENDLOOP    11B0
UTLPRINT:LOOP       11A6
UTLRAND             11D0
UTLRAND:RANDVEC     11EE
UTLRNDIX            215C
