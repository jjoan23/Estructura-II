0000233A Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 07/01/2025 21:45:04

00000000                             1  *-----------------------------------------------------------------------------
00000000                             2  * Title      : MAIN
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------------------------
00000000                             7  
00001000                             8              ORG    $1000
00001000                             9              
00001000                            10              INCLUDE 'CONST.X68'
00001000                            11  ; ----------------------------------------------------------------------------
00001000                            12  ; CONSTANTES DEL JUEGO
00001000                            13  ; ----------------------------------------------------------------------------
00001000                            14     
00001000                            15  ; --- CONSTANTES DE LA MANZANA -----------------------------------------------
00001000                            16  
00001000  =00000014                 17  MNZWIDTH    EQU     20                      ; ANCHURA DE LA MANZANA 
00001000  =00000014                 18  MNZHEIGH    EQU     20                      ; ALTURA DE LA MANZANA 
00001000  =0000AAFF                 19  MNZPCOL     EQU     $0000AAFF               ; COLOR CONTORNO MANZANA 
00001000  =000000FF                 20  MNZFCOL     EQU     $000000FF               ; COLOR RELLENO MANZANA 
00001000                            21  
00001000                            22  ; --- CONSTANTES DE LA SERPIENTE ---------------------------------------------
00001000                            23  
00001000  =00000001                 24  MAXSGM      EQU     1                       ; TAMAÑO MÁXIMO DE SEGMENTOS 
00001000  =00000001                 25  LNGINI      EQU     1                       ; LONGITUD INICIAL SERPIENTE
00001000  =00000014                 26  CBZVEL      EQU     20                      ; VELOCIDAD DE LA CABEZA 
00001000  =00000014                 27  SGMWIDTH    EQU     20                      ; ANCHURA DE UN SEGMENTO
00001000  =00000014                 28  SGMHEIGH    EQU     20                      ; ALTURA DE UN SEGMENTO 
00001000  =0000FF00                 29  SGMPCOL     EQU     $0000FF00               ; COLOR CONTORNO SEGMENTO 
00001000  =0000AA00                 30  SGMFCOL     EQU     $0000AA00               ; COLOR RELLENO SEGMENTO
00001000  =0000000A                 31  COLWIDTH    EQU     10                      ; ANCHURA DE LA COLA 
00001000  =0000000A                 32  COLHEIGH    EQU     10                      ; ALTURA DE LA COLA 
00001000  =0000FF00                 33  COLPCOL     EQU     $0000FF00               ; COLOR CONTORNO COLA 
00001000  =0000AA00                 34  COLFCOL     EQU     $0000AA00               ; COLOR RELLENO COLA 
00001000  =00000014                 35  CBZWIDTH    EQU     20                      ; ANCHURA DE LA CABEZA 
00001000  =00000014                 36  CBZHEIGH    EQU     20                      ; ALTURA DE LA CABEZA 
00001000  =0000FF00                 37  CBZPCOL     EQU     $0000FF00               ; COLOR CONTORNO CABEZA 
00001000  =0000AA00                 38  CBZFCOL     EQU     $0000AA00               ; COLOR RELLENO CABEZA 
00001000  =0000000A                 39  OJOWIDTH    EQU     10                      ; ANCHURA DE OJO DE SERPIENTE
00001000  =0000000A                 40  OJOHEIGH    EQU     10                      ; ALTURA DE OJO DE SERPIENTE
00001000  =00000000                 41  OJOPCOL     EQU     $00000000               ; COLOR CONTORNO OJO
00001000  =00FFFFFF                 42  OJOFCOL     EQU     $00FFFFFF               ; COLOR RELLENO OJO            
00001000                            43  
00001000                            44  ; --- CONSTANTES MARCADOR ----------------------------------------------------
00001000                            45  
00001000  =00000000                 46  PNTSFCOL    EQU     $00000000               ; COLOR FONDO MARCADOR 
00001000  =00000065                 47  PNTSTEXT    EQU     0101                    ; COORDENADAS DEL MARCADOR 
00001000                            48  
00001000                            49  ; --- CONSTANTES RELACIONADAS CON LOS ESTADOS --------------------------------
00001000                            50  
00001000  =FFFFFFFF                 51  STANONE     EQU     -1                      ; NÚMERO DE ESTADO NO EXISTENTE
00001000  =000001F4                 52  ISCMAXTM    EQU     500                     ;INTRO SCREEN WAITING CYCLES
00001000  =000001F4                 53  INSMAXTM    EQU     500                     ;INTRUCTIONS SCREEN WAINTING CYCLES
00001000                            54  
00001000                            55  
00001000                            56  
00001000                            57  
00001000                            58  
00001000                            59  -------------------- end include --------------------
00001000                            60              INCLUDE 'SYSCONST.X68'
00001000                            61  ; ----------------------------------------------------------------------------
00001000                            62  ; CONSTANTES DEL SISTEMA
00001000                            63  ; ----------------------------------------------------------------------------
00001000                            64  
00001000                            65  ; ---CONSTANTES DE LA PANTALLA------------------------------------------------
00001000                            66  
00001000  =00000280                 67  PANWIDTH    EQU     640                     ; ANCHO DE LA PANTALLA
00001000  =000001E0                 68  PANHEIGH    EQU     480                     ; ALTURA DE LA PANTALLA
00001000  =0090EE90                 69  COLFND      EQU     $90EE90                 ; COLOR DEL FONDO DE LA PANTALLA
00001000  =00000032                 70  SCRFPS      EQU     50
00001000                            71  
00001000                            72  ; ---CONSTANTES DE LA MATRIZ--------------------------------------------------
00001000                            73  
00001000  =00000014                 74  SIZECLDA    EQU     20                      ; TAMAÑO DE CADA CELDA EN PIXELES
00001000  =00000020                 75  NUMCLMNS    EQU     32                      ; COLUMNAS DE CELDAS (640/10)
00001000  =00000018                 76  NUMFILAS    EQU     24                      ; FILAS DE CELDAS (480/10)
00001000  =00000300                 77  TCELDAS     EQU     768                     ; TOTAL DE CELDAS (64 * 48)
00001000                            78  
00001000                            79  ; ---CÓDIGOS DE TECLADO-------------------------------------------------------
00001000                            80  
00001000  =00000025                 81  KBDLEFT     EQU     $25
00001000  =00000026                 82  KBDUP       EQU     $26
00001000  =00000027                 83  KBDRIGHT    EQU     $27
00001000  =00000028                 84  KBDDOWN     EQU     $28
00001000                            85  
00001000                            86  ; --- IDENTIFICADORES DE SONIDO ----------------------------------------------
00001000                            87  
00001000  =00000000                 88  SNDEAT      EQU     0
00001000  =00000001                 89  SNDGMOV     EQU     1
00001000                            90  
00001000                            91  ; --- NÚMEROS DE TRAP --------------------------------------------------------
00001000                            92  
00001000  =00000000                 93  SCRUPTN     EQU     0                       ; SCREEN UPDATE TRAP NUMBER
00001000  =00000001                 94  KBDUPTN     EQU     1                       ; KEYBOARD TRAP NUMBER
00001000  =00000002                 95  SNDPLTN     EQU     2                       ; SOUND TRAP NUMBER
00001000                            96  
00001000                            97  ; --- NÚMEROS DE INTERRUPCIÓN ------------------------------------------------
00001000                            98  
00001000  =00000001                 99  SCRINTN     EQU     1     
00001000                           100  
00001000                           101  
00001000                           102  
00001000                           103  
00001000                           104  
00001000                           105  
00001000                           106  -------------------- end include --------------------
00001000                           107              INCLUDE 'SYSTEM.X68'
00001000                           108   
00001000                           109   
00001000                           110  SYSINIT
00001000                           111  ; INICIA EL  SISTEMA
00001000                           112  ; INPUT    : NONE
00001000                           113  ; OUTPUT   : NONE
00001000                           114  ; MODIFIES : NONE
00001000                           115  ; ----------------------------------------------------------------------------
00001000                           116              
00001000  21FC 000010EC 0080       117              MOVE.L  #SCRPLOT,($80+SCRUPTN*4)
00001008  21FC 00001114 0084       118              MOVE.L  #KBDUPD,($80+KBDUPTN*4)
00001010  21FC 00001088 0088       119              MOVE.L  #SNDPLAY,($80+SNDPLTN*4)
00001018  21FC 000010DE 0064       120              MOVE.L  #SCRTIM,($60+SCRINTN*4)
00001020                           121              
00001020  4EB9 0000109A            122              JSR     SCRINIT                 ; Inicializamos las interrupciones
00001026  4EB9 00001106            123              JSR     KBDINIT                 ; La pantalla, el teclado y el sonido
0000102C  4EB9 0000103A            124              JSR     SNDINIT
00001032                           125              
00001032  40E7                     126              MOVE.W  SR,-(A7)
00001034  0257 D8FF                127              ANDI.W  #$D8FF,(A7)             ; Pasamos a modo usuario
00001038                           128              
00001038  4E73                     129              RTE
0000103A                           130              
0000103A                           131  ; ----------------------------------------------------------------------------
0000103A                           132  SNDINIT
0000103A                           133  ; SOUND SYSTEM INIT
0000103A                           134  ; INPUT    : NONE
0000103A                           135  ; OUTPUT   : NONE
0000103A                           136  ; MODIFIES : NONE
0000103A                           137  ; ----------------------------------------------------------------------------
0000103A                           138  
0000103A  48E7 C0C0                139              MOVEM.L D0-D1/A0-A1,-(A7)
0000103E                           140  
0000103E  4201                     141              CLR.B   D1
00001040  41F9 0000107C            142              LEA     .SNDLIST,A0
00001046  2018                     143  .LOOP       MOVE.L  (A0)+,D0
00001048  6700 000E                144              BEQ     .DONE
0000104C  2240                     145              MOVE.L  D0,A1
0000104E  103C 0047                146              MOVE.B  #71,D0
00001052  4E4F                     147              TRAP    #15                     ; Inicializamos los sonidos
00001054  5201                     148              ADDQ.B  #1,D1
00001056  60EE                     149              BRA     .LOOP
00001058                           150              
00001058  4CDF 0303                151  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
0000105C  4E75                     152              RTS
0000105E                           153              
0000105E= 53 4E 44 2F 45 41 ...    154  .SNDEAT     DC.B    'SND/EAT.wav',0
0000106A= 53 4E 44 2F 47 41 ...    155  .SNDGMOV    DC.B    'SND/GAMEOVER.wav',0
0000107C= 0000105E 0000106A ...    156  .SNDLIST    DC.L    .SNDEAT,.SNDGMOV,0
00001088                           157              
00001088                           158  ; ----------------------------------------------------------------------------
00001088                           159  SNDPLAY
00001088                           160  ; PLAY SOUND
00001088                           161  ; INPUT    : D7 SOUND ID
00001088                           162  ; OUTPUT   : NONE
00001088                           163  ; MODIFIES : NONE
00001088                           164  ; ----------------------------------------------------------------------------            
00001088                           165              
00001088  48A7 C000                166              MOVEM.W D0-D1,-(A7)
0000108C                           167              
0000108C  103C 0048                168              MOVE.B  #72,D0                  ; Hacemos sonar el sonido
00001090  1207                     169              MOVE.B  D7,D1
00001092  4E4F                     170              TRAP    #15
00001094                           171              
00001094  4C9F 0003                172              MOVEM.W (A7)+,D0-D1
00001098  4E73                     173              RTE
0000109A                           174               
0000109A                           175              
0000109A                           176  ; ----------------------------------------------------------------------------
0000109A                           177  SCRINIT
0000109A                           178  ; INIT SCREEN. SET SCREEN RESOLUTION, SET WINDOWED MODE, CLEAR SCREEN,
0000109A                           179  ; ENABLE DOUBLE BUFFER, ENABLED TIMED INTERRUPT.
0000109A                           180  ; INPUT    : NONE
0000109A                           181  ; OUTPUT   : NONE
0000109A                           182  ; MODIFIES : NONE
0000109A                           183  ; ----------------------------------------------------------------------------
0000109A                           184  
0000109A  48E7 C000                185              MOVEM.L D0-D1,-(A7)
0000109E                           186  
0000109E                           187              ; SET SCREEN RESOLUTION
0000109E  103C 0021                188              MOVE.B  #33,D0
000010A2  223C 028001E0            189              MOVE.L  #PANWIDTH<<16|PANHEIGH,D1
000010A8  4E4F                     190              TRAP    #15
000010AA                           191              
000010AA                           192              ; SET WINDOWED MODE
000010AA  7201                     193              MOVE.L  #1,D1
000010AC  4E4F                     194              TRAP    #15
000010AE                           195              
000010AE                           196              ; CLEAR SCREEN
000010AE  103C 000B                197              MOVE.B  #11,D0
000010B2  323C FF00                198              MOVE.W  #$FF00,D1
000010B6  4E4F                     199              TRAP    #15
000010B8                           200              
000010B8                           201              ; ENABLE DOUBLE BUFFER
000010B8  103C 005C                202              MOVE.B  #92,D0
000010BC  123C 0011                203              MOVE.B  #17,D1
000010C0  4E4F                     204              TRAP    #15
000010C2                           205              
000010C2                           206              ; ENABLE TIMED INTERRUPT
000010C2  103C 0020                207              MOVE.B  #32,D0
000010C6  123C 0006                208              MOVE.B  #6,D1
000010CA  143C 0081                209              MOVE.B  #$80|SCRINTN,D2
000010CE  7614                     210              MOVE.L  #1000/SCRFPS,D3                  ; Ponemos los FPS segun SCRFPS
000010D0  4E4F                     211              TRAP    #15
000010D2                           212              
000010D2                           213              ; CLEAR INTERRUPT COUNTER
000010D2  4279 000026AA            214              CLR.W   (SCRINTCT)
000010D8                           215              
000010D8  4CDF 0003                216              MOVEM.L (A7)+,D0-D1
000010DC                           217              
000010DC  4E75                     218              RTS    
000010DE                           219              
000010DE                           220  ; ------------------------------------------------------------------------------
000010DE                           221  SCRTIM
000010DE                           222  ; TIMED INTERRUPT SERVICE ROUTINE
000010DE                           223  ; INPUT    : NONE
000010DE                           224  ; OUTPUT   : NONE
000010DE                           225  ; MODIFIES : NONE
000010DE                           226  ; ------------------------------------------------------------------------------
000010DE  5239 000026AA            227              ADDQ.B  #1,(SCRINTCT)
000010E4  5239 000026AB            228              ADDQ.B  #1,(SCRCYCCT)           ; Actualizamos timer
000010EA  4E73                     229              RTE
000010EC                           230              
000010EC                           231  
000010EC                           232  ; ------------------------------------------------------------------------------
000010EC                           233  SCRPLOT
000010EC                           234  ; UPDATES DOUBLE BUFFER
000010EC                           235  ; INPUT    : NONE
000010EC                           236  ; OUTPUT   : NONE
000010EC                           237  ; MODIFIES : NONE
000010EC                           238  ; ------------------------------------------------------------------------------
000010EC                           239  
000010EC  48A7 C000                240              MOVEM.W D0-D1,-(A7)
000010F0                           241              
000010F0                           242              ; SWITCH BUFFERS
000010F0  103C 005E                243              MOVE.B  #94,D0
000010F4  4E4F                     244              TRAP    #15
000010F6                           245              
000010F6                           246              ; CLEAR HIDDEN BUFFER
000010F6  103C 000B                247              MOVE.B  #11,D0
000010FA  323C FF00                248              MOVE.W  #$FF00,D1
000010FE  4E4F                     249              TRAP    #15
00001100                           250              
00001100  4C9F 0003                251              MOVEM.W (A7)+,D0-D1
00001104                           252              
00001104  4E73                     253              RTE
00001106                           254          
00001106                           255  ; ------------------------------------------------------------------------------
00001106                           256  KBDINIT
00001106                           257  ; INIT KEYBOARD
00001106                           258  ; INPUT    : NONE
00001106                           259  ; OUTPUT   : NONE
00001106                           260  ; MODIFIES : NONE
00001106                           261  ; ------------------------------------------------------------------------------
00001106                           262  
00001106  4239 000026A3            263              CLR.B   (KBDVAL)
0000110C  4239 000026A4            264              CLR.B   (KBDEDGE)               ; Reseteamos los valores del teclado
00001112  4E75                     265              RTS
00001114                           266  
00001114                           267  ; ------------------------------------------------------------------------------
00001114                           268  KBDUPD
00001114                           269  ; UPDATE KEYBOARD INFO.  
00001114                           270  ; 7 -> PAUSE
00001114                           271  ; 6 -> FIRE 3
00001114                           272  ; 5 -> FIRE 2
00001114                           273  ; 4 -> FIRE 1
00001114                           274  ; 3 -> DOWN
00001114                           275  ; 2 -> RIGHT
00001114                           276  ; 1 -> UP
00001114                           277  ; 0 -> LEFT
00001114                           278  ; INPUT    : NONE
00001114                           279  ; OUTPUT   : NONE
00001114                           280  ; MODIFIES : NONE
00001114                           281  ; ------------------------------------------------------------------------------
00001114                           282  
00001114  48E7 C000                283              MOVEM.L D0-D1,-(A7)
00001118                           284  
00001118                           285              ; LEE ESTADO DEL TECLADO
00001118  103C 0013                286              MOVE.B  #19,D0
0000111C  223C 25262728            287              MOVE.L  #KBDLEFT<<24|KBDUP<<16|KBDRIGHT<<8|KBDDOWN,D1
00001122  4E4F                     288              TRAP    #15                     ; Lee las teclas y guarda en D1
00001124                           289              
00001124  23C1 000026A4            290              MOVE.L  D1,(KBDEDGE)
0000112A                           291  
0000112A  B2BC 000000FF            292              CMP.L   #$000000FF,D1
00001130  6700 0048                293              BEQ     DWN
00001134  B2BC 0000FF00            294              CMP.L   #$0000FF00,D1
0000113A  6700 001A                295              BEQ     DER
0000113E  B2BC 00FF0000            296              CMP.L   #$00FF0000,D1
00001144  6700 001C                297              BEQ     ARR
00001148  B2BC FF000000            298              CMP.L   #$FF000000,D1
0000114E  6700 001E                299              BEQ     IZQ
00001152                           300  
00001152                           301              ; Si no hay pulsaciones, mantener estado
00001152  6000 002E                302              BRA     CONTINU
00001156                           303  
00001156  33FC 0000 000026A2       304  DER:        MOVE.W  #0,(ESTDCBZ)           ; Actualiza estado a DERECHA
0000115E  6000 0022                305              BRA     CONTINU
00001162                           306              
00001162  33FC 0001 000026A2       307  ARR:        MOVE.W  #1,(ESTDCBZ)           ; Actualiza estado a ARRIBA
0000116A  6000 0016                308              BRA     CONTINU
0000116E                           309  
0000116E  33FC 0002 000026A2       310  IZQ:        MOVE.W  #2,(ESTDCBZ)           ; Actualiza estado a IZQUIERDA
00001176  6000 000A                311              BRA     CONTINU                    
0000117A                           312  
0000117A  33FC 0003 000026A2       313  DWN:        MOVE.W  #3,(ESTDCBZ)           ; Actualiza estado a ABAJO
00001182                           314  
00001182                           315  CONTINU:
00001182  4CDF 0003                316              MOVEM.L (A7)+,D0-D1
00001186  4E73                     317              RTE
00001188                           318   
00001188                           319  
00001188                           320  -------------------- end include --------------------
00001188                           321              INCLUDE 'LIB/UTLCODE.X68'
00001188                           322  ; =============================================================================
00001188                           323  ; UTILITY CODE
00001188                           324  ; =============================================================================
00001188                           325  
00001188                           326  ; -----------------------------------------------------------------------------
00001188                           327  UTLINIT
00001188                           328  ; INITIALIZES UTILITY CODE
00001188                           329  ; INPUT    - NONE
00001188                           330  ; OUTPUT   - NONE
00001188                           331  ; MODIFIES - NONE
00001188                           332  ; -----------------------------------------------------------------------------
00001188  48E7 C000                333              MOVEM.L D0-D1,-(A7)
0000118C  103C 0008                334              MOVE.B  #8,D0
00001190  4E4F                     335              TRAP    #15
00001192  13C1 000023A0            336              MOVE.B  D1,(UTLRNDIX)
00001198  4CDF 0003                337              MOVEM.L (A7)+,D0-D1
0000119C  4E75                     338              RTS
0000119E                           339  
0000119E                           340  
0000119E                           341  ; -----------------------------------------------------------------------------
0000119E                           342  UTLPRINT
0000119E                           343  ; PRINT SCREEN CENTERED TEXT
0000119E                           344  ; INPUT    : A0 POINTER TO ZERO-TERMINATED STRING
0000119E                           345  ;            D0.B SCREEN ROW TO PRINT TEXT
0000119E                           346  ; OUTPUT   : D0.B NEXT ROW
0000119E                           347  ; MODIFIES : NONE (ASIDE OF OUTPUT)
0000119E                           348  ; -----------------------------------------------------------------------------
0000119E  48E7 C0C0                349              MOVEM.L D0-D1/A0-A1,-(A7)
000011A2  4201                     350              CLR.B   D1
000011A4  2248                     351              MOVE.L  A0,A1
000011A6  4A18                     352  .LOOP       TST.B   (A0)+
000011A8  6700 0006                353              BEQ     .ENDLOOP
000011AC  5201                     354              ADDQ.B  #1,D1
000011AE  60F6                     355              BRA     .LOOP
000011B0  E209                     356  .ENDLOOP    LSR.B   #1,D1
000011B2  0401 0028                357              SUB.B   #(PANWIDTH/UTLCHRWD)/2,D1
000011B6  4401                     358              NEG.B   D1
000011B8  E141                     359              ASL.W   #8,D1
000011BA  8240                     360              OR.W    D0,D1
000011BC  103C 000B                361              MOVE.B  #11,D0
000011C0  4E4F                     362              TRAP    #15
000011C2  103C 000D                363              MOVE.B  #13,D0
000011C6  4E4F                     364              TRAP    #15
000011C8  4CDF 0303                365              MOVEM.L (A7)+,D0-D1/A0-A1
000011CC  5200                     366              ADDQ.B  #1,D0
000011CE  4E75                     367              RTS
000011D0                           368              
000011D0                           369              
000011D0                           370  
000011D0                           371  
000011D0                           372              ; (SCRWIDTH/UTLCHRWD)/2 - D1/2
000011D0                           373  
000011D0                           374  ; -----------------------------------------------------------------------------
000011D0                           375  UTLRAND
000011D0                           376  ; PROVIDES A PSEUDO-RANDOM BYTE
000011D0                           377  ; INPUT    - NONE
000011D0                           378  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011D0                           379  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011D0                           380  ; -----------------------------------------------------------------------------
000011D0  2F08                     381              MOVE.L  A0,-(A7)
000011D2  41F9 000011EE            382              LEA     .RANDVEC,A0
000011D8  4280                     383              CLR.L   D0
000011DA  1039 000023A0            384              MOVE.B  (UTLRNDIX),D0
000011E0  1030 0800                385              MOVE.B  (A0,D0.L),D0
000011E4  5239 000023A0            386              ADDQ.B  #1,(UTLRNDIX)
000011EA  205F                     387              MOVE.L  (A7)+,A0
000011EC  4E75                     388              RTS
000011EE                           389  
000011EE                           390  
000011EE= A2 EE 9A 0C F5 24 ...    391  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
000011F6= 2A A3 51 26 E0 AC ...    392              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
000011FE= 75 51 CA FD 33 EB ...    393              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001206= 60 CC E7 B8 9A EB ...    394              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000120E= 1D 76 B5 95 B0 89 ...    395              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001216= 39 15 48 C9 6E CA ...    396              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000121E= 43 E7 E2 7C 37 25 ...    397              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001226= E9 94 CE E9 E4 52 ...    398              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000122E= 37 6D 9A 84 A2 28 ...    399              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001236= 19 E2 C6 77 80 D4 ...    400              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000123E= 0A 5A 32 67 33 C2 ...    401              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001246= 59 80 DC 0E 57 FC ...    402              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000124E= 8A AB BC F7 07 4D ...    403              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001256= EF D5 77 6E 1E BB ...    404              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000125E= D6 E0 2A 8F BD 28 ...    405              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001266= 13 4F 66 EC 0A 64 ...    406              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000126E= 56 52 9A 16 9B 90 ...    407              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
00001276= 06 8A A4 F7 01 DA ...    408              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
0000127E= F2 E7 77 28 B1 76 ...    409              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
00001286= A4 42 E3 81 B1 67 ...    410              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
0000128E= BF CE FA 16 BF 38 ...    411              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
00001296= D1 8B 50 0C 5F 49 ...    412              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
0000129E= DE 4C 14 A2 40 DC ...    413              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012A6= B6 9B 0A 38 5D AB ...    414              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012AE= E2 1B DD 75 15 82 ...    415              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012B6= 8A 26 51 30 9F 47 ...    416              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012BE= 1E 8A BB 71 C6 6E ...    417              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012C6= 9F 47 E5 34 94 27 ...    418              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012CE= 7D 06 D6 BA 30 0F ...    419              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
000012D6= EC 7F 7E 03 CF 2D ...    420              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
000012DE= 94 5B 23 F2 8B CD ...    421              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
000012E6= 74 33 EC B9 0F D5 ...    422              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
000012EE                           423  
000012EE                           424  
000012EE                           425  -------------------- end include --------------------
000012EE                           426              INCLUDE 'LIB/UTLCONST.X68'
000012EE                           427  ; ==============================================================================
000012EE                           428  ; UTIL CONSTANTS
000012EE                           429  ; ==============================================================================
000012EE                           430  
000012EE  =00000008                431  UTLCHRWD    EQU     8                       ; CHARACTER WIDTH IN PIXELS
000012EE  =00000008                432  -------------------- end include --------------------
000012EE                           433              INCLUDE 'HEADSRP.X68'
000012EE                           434  
000012EE                           435  ; ------------------------------------------------------------------------------
000012EE                           436  HEADINIT
000012EE                           437  ; INICIALIZAR CABEZA.
000012EE                           438  ; INPUT    : NONE 
000012EE                           439  ; OUTPUT   : NONE
000012EE                           440  ; MODIFIES : NONE
000012EE                           441  ; ------------------------------------------------------------------------------
000012EE  33FC 0140 0000236E       442              MOVE.W  #PANWIDTH/2,(CBZPOSX)
000012F6  33FC 00F0 00002370       443              MOVE.W  #PANHEIGH/2,(CBZPOSY)
000012FE  4279 000026A2            444              CLR.W   (ESTDCBZ)               ; Inizializar la cabeza en el centro
00001304  33FC 0000 000026A2       445              MOVE.W  #0,(ESTDCBZ)
0000130C  4E75                     446              RTS
0000130E                           447              
0000130E                           448  ; ------------------------------------------------------------------------------
0000130E                           449  HEADUPD
0000130E                           450  ; ACTUALIZAR CABEZA.
0000130E                           451  ; INPUT    : NONE 
0000130E                           452  ; OUTPUT   : NONE
0000130E                           453  ; MODIFIES : NONE
0000130E                           454  ; ------------------------------------------------------------------------------
0000130E                           455  
0000130E  48E7 F1C0                456              MOVEM.L D0-D3/D7/A0-A1,-(A7)
00001312                           457  
00001312                           458              ; Marcar celda actual como vacía
00001312  3239 0000236E            459              MOVE.W  (CBZPOSX),D1
00001318  3439 00002370            460              MOVE.W  (CBZPOSY),D2
0000131E  4EB9 00001A24            461              JSR     CINDMTRZ
00001324  4EB9 00001A74            462              JSR     MCLDVCIA
0000132A                           463              
0000132A                           464              ; Actualiza la posición de la cabeza según ESTDCBZ
0000132A  3039 000026A2            465              MOVE.W  (ESTDCBZ),D0
00001330  B07C 0000                466              CMP.W   #0,D0
00001334  6700 001E                467              BEQ     SIGDER
00001338  B07C 0001                468              CMP.W   #1,D0
0000133C  6700 0022                469              BEQ     SIGARR
00001340  B07C 0002                470              CMP.W   #2,D0
00001344  6700 0026                471              BEQ     SIGIZQ
00001348  B07C 0003                472              CMP.W   #3,D0
0000134C  6700 002A                473              BEQ     SIGABA
00001350                           474  
00001350                           475              ; Si no hay dirección válida, sale
00001350  6000 01DC                476              BRA     FIN
00001354                           477  
00001354                           478  SIGDER:
00001354  0679 0014 0000236E       479              ADD.W   #CBZVEL,(CBZPOSX)
0000135C  6000 0022                480              BRA     CHKBORDE
00001360                           481  
00001360                           482  SIGARR:
00001360  0479 0014 00002370       483              SUB.W   #CBZVEL,(CBZPOSY)
00001368  6000 0016                484              BRA     CHKBORDE
0000136C                           485  
0000136C                           486  SIGIZQ:
0000136C  0479 0014 0000236E       487              SUB.W   #CBZVEL,(CBZPOSX)
00001374  6000 000A                488              BRA     CHKBORDE
00001378                           489  
00001378                           490  SIGABA:
00001378  0679 0014 00002370       491              ADD.W   #CBZVEL,(CBZPOSY)
00001380                           492              
00001380                           493  CHKBORDE:
00001380                           494              ; Verificar colisiones con los bordes
00001380  3239 0000236E            495              MOVE.W  (CBZPOSX),D1
00001386  B27C 0280                496              CMP.W   #PANWIDTH,D1            ; Si CBZPOSX < 0
0000138A  6E00 006E                497              BGT     GAMEOVER
0000138E  B27C 0000                498              CMP.W   #0,D1                   ; Si CBZPOSX >= PANWIDTH
00001392  6D00 0066                499              BLT     GAMEOVER
00001396                           500  
00001396  3239 00002370            501              MOVE.W  (CBZPOSY),D1
0000139C  B27C 0000                502              CMP.W   #0,D1                   ; Si CBZPOSY < 0
000013A0  6D00 0058                503              BLT     GAMEOVER
000013A4  B27C 01E0                504              CMP.W   #PANHEIGH,D1            ; Si CBZPOSY >= PANHEIGH
000013A8  6E00 0050                505              BGT     GAMEOVER
000013AC                           506  
000013AC                           507                          
000013AC                           508  CHKCOL:
000013AC                           509              ; Verifica la colisión con la manzana
000013AC  3239 0000236E            510              MOVE.W  (CBZPOSX),D1
000013B2  3439 00002370            511              MOVE.W  (CBZPOSY),D2
000013B8  B279 0000236A            512              CMP.W   (MNZPOSX),D1
000013BE  6600 001E                513              BNE     NOCOL
000013C2  B479 0000236C            514              CMP.W   (MNZPOSY),D2
000013C8  6600 0014                515              BNE     NOCOL
000013CC                           516              
000013CC                           517              ; Colisión detectada
000013CC  4EB9 000017CC            518              JSR     APPLEUPD
000013D2  4EB9 000018D0            519              JSR     SCOUPD
000013D8  1E3C 0000                520              MOVE.B  #SNDEAT,D7
000013DC  4E42                     521              TRAP    #SNDPLTN
000013DE                           522  
000013DE                           523  NOCOL:
000013DE                           524              ; Convierte la posición nueva a índice
000013DE  3239 0000236E            525              MOVE.W  (CBZPOSX),D1
000013E4  3439 00002370            526              MOVE.W  (CBZPOSY),D2
000013EA  4EB9 00001A24            527              JSR     CINDMTRZ
000013F0  4EB9 00001A5E            528              JSR     CBZOCPD                 ; Marca la celda como ocupada
000013F6                           529              
000013F6  6000 0136                530              BRA     FIN
000013FA                           531  
000013FA                           532  
000013FA                           533  GAMEOVER:
000013FA  1E3C 0001                534              MOVE.B  #SNDGMOV,D7             ; Poner sonido game over
000013FE  4E42                     535              TRAP    #SNDPLTN
00001400  33FC 0003 0000238E       536              MOVE.W  #3,(STANEXT)
00001408                           537              
00001408  4280                     538              CLR.L   D0                      ; Borramos los registros que vamos 
0000140A  4281                     539              CLR.L   D1                      ; a utilizar para escribir en el fichero
0000140C  4282                     540              CLR.L   D2
0000140E  4283                     541              CLR.L   D3
00001410  42B9 00002394            542              CLR.L   (BFFLEC)
00001416                           543              
00001416                           544              ; Escribir puntuación
00001416  103C 0032                545              MOVE.B  #50,D0                  ; Cerramos todos los archivos
0000141A  4E4F                     546              TRAP    #15
0000141C                           547  
0000141C                           548               ; Verificar si el archivo existe
0000141C  43F9 00001566            549              LEA     FILE,A1                 ; Dirección del nombre del archivo
00001422  103C 003B                550              MOVE.B  #59,D0                  ; Verificar existencia del archivo
00001426  4E4F                     551              TRAP    #15
00001428  B07C 0000                552              CMP.W   #0,D0                   ; Verificar si el archivo existe
0000142C  6700 0006                553              BEQ     .ABRIR_ARCHIVO          ; Si existe, abrir archivo
00001430  6000 0062                554              BRA     .CREAR_ARCHIVO          ; Si no existe, crear archivo
00001434                           555  
00001434                           556  .ABRIR_ARCHIVO
00001434                           557              ; Abrir archivo existente
00001434  103C 0033                558              MOVE.B  #51,D0                  ; Abrir archivo existente
00001438  4E4F                     559              TRAP    #15
0000143A  B07C 0000                560              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
0000143E  6600 0120                561              BNE     ERROR                   ; Si falla, ir a ERROR
00001442  23C1 00002390            562              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001448                           563  
00001448                           564              ; Leer hasta encontrar el marcador `#`
00001448  2239 00002390            565              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
0000144E  7400                     566              MOVE.L  #0,D2                   ; Posicionarse al inicio del archivo
00001450  103C 0037                567              MOVE.B  #55,D0                  ; Posicionar archivo
00001454  4E4F                     568              TRAP    #15
00001456                           569  
00001456                           570  .BUSCAR_FINAL
00001456  43F9 00002394            571              LEA     BFFLEC,A1               ; Buffer para leer datos
0000145C  2239 00002390            572              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001462  7401                     573              MOVE.L  #1,D2                   ; Leer 1 byte
00001464  103C 0035                574              MOVE.B  #53,D0                  ; Tarea 53: Leer archivo
00001468  4E4F                     575              TRAP    #15
0000146A  B07C 0001                576              CMP.W   #1,D0                   ; Verificar si alcanzamos EOF
0000146E  6700 003C                577              BEQ     .ESCRIBIR               ; Si alcanzamos EOF, escribir al final
00001472  0C39 0023 00002394       578              CMP.B   #'#',(BFFLEC)           ; Comparar con el marcador `#`
0000147A  6700 0006                579              BEQ     .POSICIONAR             ; Si encontramos el marcador, posicionarnos ahí
0000147E  5283                     580              ADDQ.L  #1,D3                   ; Incrementar contador de bytes leídos
00001480  60D4                     581              BRA     .BUSCAR_FINAL           ; Continuar buscando el marcador
00001482                           582  
00001482                           583  .POSICIONAR
00001482                           584              ; Posicionarse al marcador para sobrescribir
00001482  2403                     585              MOVE.L  D3,D2                   ; Cargar la posición del marcador desde el contador
00001484  2239 00002390            586              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
0000148A  103C 0037                587              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
0000148E  4E4F                     588              TRAP    #15
00001490  6000 001A                589              BRA     .ESCRIBIR               ; Ir a escribir datos
00001494                           590  
00001494                           591  .CREAR_ARCHIVO
00001494                           592              ; Crear archivo nuevo
00001494  103C 0034                593              MOVE.B  #52,D0                  ; Abrir o crear archivo
00001498  4E4F                     594              TRAP    #15
0000149A  B07C 0000                595              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
0000149E  6600 00C0                596              BNE     ERROR                   ; Si falla, ir a ERROR
000014A2  23C1 00002390            597              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
000014A8  6000 0002                598              BRA     .ESCRIBIR               ; Ir directamente a escribir datos
000014AC                           599  
000014AC                           600  .ESCRIBIR
000014AC                           601              ; Convertir el número en caracteres ASCII y escribirlos uno por uno
000014AC  41F9 00002382            602              LEA     JGOPNTS,A0              ; Dirección del número
000014B2  3010                     603              MOVE.W  (A0),D0                 ; Cargar el número en D0
000014B4  4EB9 00001534            604              JSR     CONVERTIR_NUMERO        ; Convertir número a ASCII en el buffer
000014BA                           605  
000014BA                           606              ; Escribir los caracteres del buffer
000014BA  41F9 00002395            607              LEA     ASCBFF,A0               ; Dirección del buffer de caracteres ASCII
000014C0                           608              
000014C0                           609  
000014C0                           610  .ESCRIBIR_BUCLE:
000014C0  1010                     611              MOVE.B  (A0),D0                 ; Leer carácter del buffer
000014C2  6700 0028                612              BEQ     .ESCRIBIR_FIN_BLOQUE    ; Si terminador NULL, ir al delimitador
000014C6  2403                     613              MOVE.L  D3,D2                   ; Cargar posición actual
000014C8  2239 00002390            614              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
000014CE  103C 0037                615              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
000014D2  4E4F                     616              TRAP    #15                     ; Posicionar antes de escribir
000014D4  103C 0036                617              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
000014D8  43D0                     618              LEA     (A0),A1
000014DA  7401                     619              MOVE.L  #1,D2
000014DC  4E4F                     620              TRAP    #15                     ; Escribir carácter
000014DE  B07C 0000                621              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
000014E2  6600 007C                622              BNE     ERROR                   ; Si falla, ir a ERROR
000014E6  5283                     623              ADDQ.L  #1,D3                   ; Incrementar posición
000014E8  1018                     624              MOVE.B  (A0)+,D0                ; Restaurar carácter actual
000014EA  60D4                     625              BRA     .ESCRIBIR_BUCLE         ; Continuar con el siguiente carácter
000014EC                           626  
000014EC                           627  .ESCRIBIR_FIN_BLOQUE
000014EC                           628              ; Escribir delimitador `?`
000014EC  43F9 00001571            629              LEA     TXT1,A1
000014F2  4EB9 00001508            630              JSR     ESCRIBIR_CARACTER
000014F8                           631              ; Escribir marcador `#`
000014F8  43F9 00001573            632              LEA     TXT2,A1
000014FE  4EB9 00001508            633              JSR     ESCRIBIR_CARACTER
00001504  6000 001C                634              BRA     FINESC
00001508                           635  
00001508                           636  ESCRIBIR_CARACTER:
00001508  2403                     637              MOVE.L  D3,D2                   ; Cargar posición actual
0000150A  2239 00002390            638              MOVE.L  FILEID,D1               ; File-ID del archivo
00001510  103C 0037                639              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001514  4E4F                     640              TRAP    #15                     ; Posicionar antes de escribir
00001516  103C 0036                641              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
0000151A  7401                     642              MOVE.L  #1,D2
0000151C  4E4F                     643              TRAP    #15                     ; Escribir carácter
0000151E  5283                     644              ADDQ.L  #1,D3                   ; Incrementar posición
00001520  4E75                     645              RTS                             ; Retornar
00001522                           646  
00001522                           647  FINESC
00001522                           648              ; Cerrar archivo
00001522  2239 00002390            649              MOVE.L  FILEID,D1               ; File-ID del archivo
00001528  103C 0038                650              MOVE.B  #56,D0                  ; Tarea 56: Cerrar archivo
0000152C  4E4F                     651              TRAP    #15
0000152E                           652  FIN
0000152E  4CDF 038F                653              MOVEM.L (A7)+,D0-D3/D7/A0-A1    ; Restaurar registros
00001532  4E75                     654              RTS                             ; Retornar
00001534                           655  
00001534                           656  CONVERTIR_NUMERO
00001534  48E7 F040                657               MOVEM.L D0-D3/A1,-(A7)         ; Guardar registros usados en la pila
00001538                           658  
00001538                           659      ; Inicialización
00001538  43F9 00002395            660      LEA     ASCBFF,A1                       ; Dirección del buffer
0000153E  740A                     661      MOVEQ   #10,D2                          ; Base decimal (10)
00001540                           662  
00001540                           663      ; Convertir número hexadecimal a decimal y guardar dígitos
00001540                           664  .CONVERTDELO:
00001540  80C2                     665      DIVU    D2,D0                           ; Dividir D0 por 10: cociente en D0, residuo en bits bajos
00001542  3600                     666      MOVE.W  D0,D3
00001544  C0BC 0000000F            667      AND.L   #$000F,D0                       ; Asegurarnos de trabajar con el residuo (0-9)
0000154A  0600 0030                668      ADD.B   #48,D0                          ; Convertir residuo a carácter ASCII ('0'-'9')
0000154E  12C0                     669      MOVE.B  D0,(A1)+                        ; Almacenar carácter en el buffer
00001550  3003                     670      MOVE.W  D3,D0
00001552  4A43                     671      TST.W   D3                              ; Verificar si el cociente es 0
00001554  66EA                     672      BNE     .CONVERTDELO                    ; Si no es 0, continuar con el próximo dígito
00001556                           673  
00001556                           674              
00001556                           675      ; Añadir terminador NULL al final
00001556  12FC 0000                676      MOVE.B  #0,(A1)+                        ; Finalizar cadena con NULL
0000155A                           677  
0000155A  4CDF 020F                678      MOVEM.L (A7)+,D0-D3/A1                  ; Restaurar registros usados
0000155E  4E75                     679              RTS                             ; Retornar              
00001560                           680  ERROR
00001560  103C 0009                681              MOVE.B  #9,D0                   ; Tarea 9: Terminar el programa
00001564  4E4F                     682              TRAP    #15
00001566                           683     
00001566                           684              
00001566                           685              
00001566= 50 55 4E 54 4F 53 ...    686  FILE        DC.B    'PUNTOS.TXT',0 
00001571= 3F 00                    687  TXT1        DC.B    '?',0
00001573= 23 00                    688  TXT2        DC.B    '#',0  
00001576                           689              DS.W    0        
00001576                           690  
00001576                           691  
00001576                           692              
00001576                           693              
00001576                           694  ; ------------------------------------------------------------------------------
00001576                           695  HEADPLOT
00001576                           696  ; DIBUJAR CABEZA.
00001576                           697  ; INPUT    : NONE 
00001576                           698  ; OUTPUT   : NONE
00001576                           699  ; MODIFIES : NONE
00001576                           700  ; ------------------------------------------------------------------------------
00001576                           701                         
00001576  3F00                     702              MOVE.W  D0,-(A7)               ; Guardamos D0
00001578  3003                     703              MOVE.W  D3,D0                  ; Calculamos las coordenadas
0000157A  4EB9 00001ACC            704              JSR     CNVICOOR
00001580  2F01                     705              MOVE.L  D1,-(A7)
00001582                           706              
00001582                           707              ; Ponemos el color de la cabeza
00001582  103C 0050                708              MOVE.B  #80,D0
00001586  223C 0000FF00            709              MOVE.L  #CBZPCOL,D1
0000158C  4E4F                     710              TRAP    #15
0000158E                           711              
0000158E                           712              ; Ponemos el color de la cabeza
0000158E  103C 0051                713              MOVE.B  #81,D0
00001592  223C 0000AA00            714              MOVE.L  #CBZFCOL,D1
00001598  4E4F                     715              TRAP    #15
0000159A                           716              
0000159A                           717              ; Dibujamos la cabeza
0000159A  103C 0057                718              MOVE.B  #87,D0
0000159E  221F                     719              MOVE.L  (A7)+,D1
000015A0  3F03                     720              MOVE.W  D3,-(A7)
000015A2  3601                     721              MOVE.W  D1,D3
000015A4  0643 0014                722              ADD.W   #CBZWIDTH,D3
000015A8  3802                     723              MOVE.W  D2,D4
000015AA  0644 0014                724              ADD.W   #CBZHEIGH,D4
000015AE  4E4F                     725              TRAP    #15
000015B0                           726              
000015B0  2F01                     727              MOVE.L  D1,-(A7)
000015B2                           728              
000015B2                           729              ; Ponemos color del ojo
000015B2  103C 0050                730              MOVE.B  #80,D0
000015B6  7200                     731              MOVE.L  #OJOPCOL,D1
000015B8  4E4F                     732              TRAP    #15
000015BA                           733              
000015BA                           734              ; Ponemos el color del ojo
000015BA  103C 0051                735              MOVE.B  #81,D0
000015BE  223C 00FFFFFF            736              MOVE.L  #OJOFCOL,D1
000015C4  4E4F                     737              TRAP    #15
000015C6                           738              
000015C6                           739              ; Dibujamos el ojo
000015C6  103C 0058                740              MOVE.B  #88,D0
000015CA  221F                     741              MOVE.L  (A7)+,D1
000015CC  2F01                     742              MOVE.L  D1,-(A7)
000015CE  2F02                     743              MOVE.L  D2,-(A7)
000015D0  5A41                     744              ADD.W   #OJOWIDTH/2,D1            
000015D2  3601                     745              MOVE.W  D1,D3
000015D4  0643 000A                746              ADD.W   #OJOWIDTH,D3
000015D8  5A42                     747              ADD.W   #OJOHEIGH/2,D2
000015DA  3802                     748              MOVE.W  D2,D4
000015DC  0644 000A                749              ADD.W   #OJOHEIGH,D4
000015E0  4E4F                     750              TRAP    #15                     
000015E2                           751              
000015E2                           752  
000015E2                           753              ; Definir y dibujar iris
000015E2  241F                     754              MOVE.L  (A7)+,D2
000015E4  221F                     755              MOVE.L  (A7)+,D1
000015E6  0641 000A                756              ADD.W   #OJOWIDTH,D1
000015EA  0642 000A                757              ADD.W   #OJOHEIGH,D2
000015EE  103C 0052                758              MOVE.B  #82,D0
000015F2  4E4F                     759              TRAP    #15                     
000015F4                           760              
000015F4  361F                     761              MOVE.W  (A7)+,D3
000015F6  301F                     762              MOVE.W  (A7)+,D0
000015F8                           763  
000015F8  4E75                     764              RTS
000015FA                           765  
000015FA                           766  
000015FA                           767  
000015FA                           768  
000015FA                           769  
000015FA                           770  
000015FA                           771  
000015FA                           772  -------------------- end include --------------------
000015FA                           773              INCLUDE 'SEGSRP.X68'
000015FA                           774  
000015FA                           775  ; ------------------------------------------------------------------------------
000015FA                           776  SEGINIT
000015FA                           777  ; INICIALIZAR SEGMENTO.
000015FA                           778  ; INPUT    : NONE 
000015FA                           779  ; OUTPUT   : NONE
000015FA                           780  ; MODIFIES : NONE
000015FA                           781  ; ------------------------------------------------------------------------------
000015FA  33FC 012C 0000237A       782              MOVE.W  #(PANWIDTH/2)-CBZWIDTH,(SGMPOSX)
00001602  33FC 00F0 0000237C       783              MOVE.W  #PANHEIGH/2,(SGMPOSY)
0000160A  33F9 0000237A 0000237E   784              MOVE.W  (SGMPOSX),(SGMPOSX2)    ; Iniciamos los dos segmentos después de la cabeza
00001614  33F9 0000237C 00002380   785              MOVE.W  (SGMPOSY),(SGMPOSY2)
0000161E  0479 0014 0000237E       786              SUB.W   #SGMWIDTH,(SGMPOSX2)
00001626  4E75                     787              RTS
00001628                           788              
00001628                           789  ; ------------------------------------------------------------------------------
00001628                           790  SEGUPD
00001628                           791  ; ACTUALIZAR SEGMENTO.
00001628                           792  ; INPUT    : NONE 
00001628                           793  ; OUTPUT   : NONE
00001628                           794  ; MODIFIES : NONE
00001628                           795  ; ------------------------------------------------------------------------------
00001628                           796  
00001628  48A7 6000                797              MOVEM.W D1-D2,-(A7)
0000162C                           798              
0000162C                           799              ; Marcar posición anterior del segmento como vacía
0000162C  3239 0000237A            800              MOVE.W  (SGMPOSX),D1            ; Cargar posición X actual del segmento2
00001632  3439 0000237C            801              MOVE.W  (SGMPOSY),D2            ; Cargar posición Y actual del segmento2
00001638  4EB9 00001A24            802              JSR     CINDMTRZ                ; Obtener índice de celda en D0
0000163E  4EB9 00001A74            803              JSR     MCLDVCIA                ; Marcar celda como vacía
00001644                           804              
00001644                           805              ; Marcar posición anterior del segmento como vacía
00001644  3239 0000237E            806              MOVE.W  (SGMPOSX2),D1           ; Cargar posición X actual del segmento2
0000164A  3439 00002380            807              MOVE.W  (SGMPOSY2),D2           ; Cargar posición Y actual del segmento2
00001650  4EB9 00001A24            808              JSR     CINDMTRZ                ; Obtener índice de celda en D0
00001656  4EB9 00001A74            809              JSR     MCLDVCIA                ; Marcar celda como vacía
0000165C                           810              
0000165C                           811              ; Actualizar posición del segmento para seguir a la cabeza
0000165C  33F9 0000237A 0000237E   812              MOVE.W  (SGMPOSX),(SGMPOSX2)    ; MARCAMOS LOS SEGMENTOS COMO SEGUNDA COORDENADA X
00001666  33F9 0000237C 00002380   813              MOVE.W  (SGMPOSY),(SGMPOSY2)    ; MARCAMOS LOS SEGMENTOS COMO SEGUNDA COORDENADA Y
00001670  33F9 0000236E 0000237A   814              MOVE.W  (CBZPOSX),(SGMPOSX)     ; Actualizar X del segmento con la X de la cabeza
0000167A  33F9 00002370 0000237C   815              MOVE.W  (CBZPOSY),(SGMPOSY)     ; Actualizar Y del segmento con la Y de la cabeza
00001684                           816  
00001684                           817              ; Marcar nueva posición del segmento como ocupada
00001684  3239 0000237A            818              MOVE.W  (SGMPOSX),D1            ; Cargar nueva posición X
0000168A  3439 0000237C            819              MOVE.W  (SGMPOSY),D2            ; Cargar nueva posición Y
00001690  4EB9 00001A24            820              JSR     CINDMTRZ                ; Obtener índice de celda en D0
00001696  4EB9 00001A8A            821              JSR     SGMOCPD                 ; Marcar celda como ocupada por segmento
0000169C                           822              
0000169C  3239 0000237E            823              MOVE.W  (SGMPOSX2),D1           ; Cargar nueva posición X DEL SEGMENTO 2
000016A2  3439 00002380            824              MOVE.W  (SGMPOSY2),D2           ; Cargar nueva posición Y DEL SEGMENTO 2
000016A8  4EB9 00001A24            825              JSR     CINDMTRZ                ; Obtener índice de celda en D0
000016AE  4EB9 00001A8A            826              JSR     SGMOCPD                 ; Marcar celda como ocupada por segmento
000016B4                           827              
000016B4  4C9F 0006                828              MOVEM.W (A7)+,D1-D2            
000016B8  4E75                     829              RTS
000016BA                           830           
000016BA                           831              
000016BA                           832  ; ------------------------------------------------------------------------------
000016BA                           833  SEGPLOT
000016BA                           834  ; DIBUJAR SEGMENTO.
000016BA                           835  ; INPUT    : NONE 
000016BA                           836  ; OUTPUT   : NONE
000016BA                           837  ; MODIFIES : NONE
000016BA                           838  ; ------------------------------------------------------------------------------
000016BA  3F00                     839              MOVE.W  D0,-(A7)
000016BC  3003                     840              MOVE.W  D3,D0
000016BE  4EB9 00001ACC            841              JSR     CNVICOOR
000016C4  2F01                     842              MOVE.L  D1,-(A7)
000016C6                           843              
000016C6  103C 0050                844              MOVE.B  #80,D0
000016CA  223C 0000FF00            845              MOVE.L  #SGMPCOL,D1            ; Ponemos el color de dibujado al color de SGMPCOL
000016D0  4E4F                     846              TRAP    #15
000016D2                           847              
000016D2  103C 0051                848              MOVE.B  #81,D0
000016D6  223C 0000AA00            849              MOVE.L  #SGMFCOL,D1            ; Ponemos el color de dibujado al color SGMFCOL
000016DC  4E4F                     850              TRAP    #15
000016DE                           851              
000016DE  103C 0057                852              MOVE.B  #87,D0
000016E2  221F                     853              MOVE.L  (A7)+,D1
000016E4  3F03                     854              MOVE.W  D3,-(A7)
000016E6  3601                     855              MOVE.W  D1,D3
000016E8  0643 0014                856              ADD.W   #SIZECLDA,D3
000016EC  3802                     857              MOVE.W  D2,D4                    ; Dibujamos el cuadrado
000016EE  0644 0014                858              ADD.W   #SIZECLDA,D4
000016F2  4E4F                     859              TRAP    #15                     
000016F4                           860                          
000016F4  361F                     861              MOVE.W  (A7)+,D3  
000016F6  301F                     862              MOVE.W  (A7)+,D0
000016F8                           863  
000016F8  4E75                     864              RTS
000016FA                           865  
000016FA                           866  
000016FA                           867  -------------------- end include --------------------
000016FA                           868              INCLUDE 'TAILSRP.X68'
000016FA                           869     
000016FA                           870  ; ------------------------------------------------------------------------------
000016FA                           871  TAILINIT
000016FA                           872  ; INICIALIZAR COLA.
000016FA                           873  ; INPUT    : NONE 
000016FA                           874  ; OUTPUT   : NONE
000016FA                           875  ; MODIFIES : NONE
000016FA                           876  ; ------------------------------------------------------------------------------
000016FA                           877  
000016FA  33FC 011D 00002376       878              MOVE.W  #(PANWIDTH/2)-CBZWIDTH-SGMWIDTH+(COLWIDTH/2),(COLPOSX)
00001702  33FC 00F0 00002378       879              MOVE.W  #(PANHEIGH/2),(COLPOSY) ; Ponemos la cola después del segundo segmento
0000170A                           880              
0000170A  4E75                     881              RTS
0000170C                           882              
0000170C                           883              
0000170C                           884  ; ------------------------------------------------------------------------------
0000170C                           885  TAILUPD
0000170C                           886  ; ACTUALIZAR COLA.
0000170C                           887  ; INPUT    : NONE 
0000170C                           888  ; OUTPUT   : NONE
0000170C                           889  ; MODIFIES : NONE
0000170C                           890  ; ------------------------------------------------------------------------------
0000170C  48A7 6000                891              MOVEM.W D1-D2,-(A7)
00001710                           892              
00001710                           893              ; Marca la posición actual de la cola como vacía
00001710  3239 00002376            894              MOVE.W  (COLPOSX),D1
00001716  3439 00002378            895              MOVE.W  (COLPOSY),D2
0000171C  4EB9 00001A24            896              JSR     CINDMTRZ
00001722  4EB9 00001A74            897              JSR     MCLDVCIA
00001728                           898  
00001728                           899              ; Actualiza la posición de la cola para seguir al último segmento
00001728  33F9 0000237E 00002376   900              MOVE.W  (SGMPOSX2),(COLPOSX)
00001732  33F9 00002380 00002378   901              MOVE.W  (SGMPOSY2),(COLPOSY)    ; Marcamos la coordenada del segmento 2 como la cola
0000173C                           902              
0000173C                           903              ; Marca la nueva posición como cola
0000173C  3239 00002376            904              MOVE.W  (COLPOSX),D1
00001742  3439 00002378            905              MOVE.W  (COLPOSY),D2
00001748  4EB9 00001A24            906              JSR     CINDMTRZ
0000174E  4EB9 00001AA0            907              JSR     COLOCPD
00001754                           908  
00001754                           909  FINUPD
00001754  4C9F 0006                910              MOVEM.W (A7)+,D1-D2
00001758  4E75                     911              RTS
0000175A                           912              
0000175A                           913  ; ------------------------------------------------------------------------------
0000175A                           914  TAILPLOT
0000175A                           915  ; DIBUJAR COLA
0000175A                           916  ; INPUT    : NONE 
0000175A                           917  ; OUTPUT   : NONE
0000175A                           918  ; MODIFIES : NONE
0000175A                           919  ; ------------------------------------------------------------------------------
0000175A                           920  
0000175A  3F00                     921              MOVE.W  D0,-(A7)
0000175C  3003                     922              MOVE.W  D3,D0
0000175E  4EB9 00001ACC            923              JSR     CNVICOOR
00001764  2F01                     924              MOVE.L  D1,-(A7)
00001766                           925              
00001766  103C 0050                926              MOVE.B  #80,D0
0000176A  223C 0000FF00            927              MOVE.L  #COLPCOL,D1            ; Ponemos el color de dibujado a COLPCOL
00001770  4E4F                     928              TRAP    #15
00001772                           929              
00001772  103C 0051                930              MOVE.B  #81,D0
00001776  223C 0000AA00            931              MOVE.L  #COLFCOL,D1            ; Ponemos el color de dibujado a COLFCOL
0000177C  4E4F                     932              TRAP    #15
0000177E                           933              
0000177E  103C 0057                934              MOVE.B  #87,D0
00001782  221F                     935              MOVE.L  (A7)+,D1
00001784  3F03                     936              MOVE.W  D3,-(A7)
00001786  3601                     937              MOVE.W  D1,D3
00001788  0643 0014                938              ADD.W   #SIZECLDA,D3
0000178C  3802                     939              MOVE.W  D2,D4                    
0000178E  0644 0014                940              ADD.W   #SIZECLDA,D4
00001792  4E4F                     941              TRAP    #15                    ; Dibujamos el cuadrado 
00001794                           942                          
00001794  361F                     943              MOVE.W  (A7)+,D3  
00001796  301F                     944              MOVE.W  (A7)+,D0
00001798                           945  
00001798  4E75                     946              RTS
0000179A                           947  
0000179A                           948  
0000179A                           949  
0000179A                           950  -------------------- end include --------------------
0000179A                           951              INCLUDE 'APPLE.X68'
0000179A                           952     
0000179A                           953  ; ----------------------------------------------------------------------------
0000179A                           954  APPLEINIT
0000179A                           955  ; Inicializa la manzana en una posición aleatoria
0000179A                           956  ; INPUT    : NONE 
0000179A                           957  ; OUTPUT   : NONE
0000179A                           958  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
0000179A                           959  ; ----------------------------------------------------------------------------
0000179A                           960  
0000179A                           961              ; Llama a la función para generar la posición aleatoria
0000179A  4EB9 00001888            962              JSR     GENPOSMNZ
000017A0                           963  
000017A0                           964              ; Convierte las coordenadas de la manzana a índice de la matriz
000017A0  4EB9 00001A24            965              JSR     CINDMTRZ
000017A6                           966  
000017A6                           967              ; Verifica si la celda está ocupada o libre
000017A6                           968  CHECK:
000017A6  4EB9 00001B08            969              JSR     CHECKCLD
000017AC  6700 0010                970              BEQ     MARKMNZ                 ; Si está libre
000017B0                           971  
000017B0                           972              ; Si la celda está ocupada
000017B0  4EB9 00001888            973              JSR     GENPOSMNZ               ; Genera una nueva posición
000017B6  4EB9 00001A24            974              JSR     CINDMTRZ                ; Convierte las coordenadas
000017BC  60E8                     975              BRA     CHECK                   ; Repite la comprobación
000017BE                           976  
000017BE                           977  MARKMNZ:
000017BE                           978              ; Marca la celda como ocupada con la manzana (estado 4)
000017BE  4EB9 00001AB6            979              JSR     MNZOCPD
000017C4                           980  
000017C4                           981              ; Dibuja la manzana en la pantalla
000017C4  4EB9 0000180A            982              JSR     APPLEPLOT
000017CA                           983  
000017CA  4E75                     984              RTS
000017CC                           985  
000017CC                           986  ; ----------------------------------------------------------------------------
000017CC                           987  APPLEUPD
000017CC                           988  ; Actualiza la posición de la manzana cuando la serpiente come
000017CC                           989  ; INPUT    : NONE 
000017CC                           990  ; OUTPUT   : NONE
000017CC                           991  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
000017CC                           992  ; ----------------------------------------------------------------------------
000017CC                           993  
000017CC                           994              ; Convierte las coordenadas actuales de la manzana 
000017CC                           995              ; a índice de la matriz
000017CC  4EB9 00001A24            996              JSR     CINDMTRZ
000017D2                           997  
000017D2                           998              ; Marca la celda anterior como vacía
000017D2  4EB9 00001A74            999              JSR     MCLDVCIA
000017D8                          1000  
000017D8                          1001              ; Llama a la función para generar una nueva posición aleatoria
000017D8  4EB9 00001888           1002              JSR     GENPOSMNZ
000017DE                          1003  
000017DE                          1004              ; Convierte las nuevas coordenadas de la manzana 
000017DE                          1005              ; a índice de la matriz
000017DE  4EB9 00001A24           1006              JSR     CINDMTRZ
000017E4                          1007  
000017E4                          1008  CHCKUPDT:
000017E4  4EB9 00001B08           1009              JSR     CHECKCLD                ; Verifica si la celda está libre
000017EA  6700 0010               1010              BEQ     NEWMNZ                  ; Si está libre
000017EE                          1011  
000017EE                          1012              ; Si la celda está ocupada
000017EE  4EB9 00001888           1013              JSR     GENPOSMNZ               ; Genera una nueva posición
000017F4  4EB9 00001A24           1014              JSR     CINDMTRZ                ; Convierte las nuevas coordenadas
000017FA  60E8                    1015              BRA     CHCKUPDT                ; Repite la comprobación
000017FC                          1016  
000017FC                          1017  NEWMNZ:
000017FC                          1018              ; Marca la celda como ocupada con la manzana (estado 4)
000017FC  4EB9 00001AB6           1019              JSR     MNZOCPD
00001802                          1020  
00001802                          1021              ; Dibuja la nueva manzana en la pantalla
00001802  4EB9 0000180A           1022              JSR     APPLEPLOT
00001808                          1023  
00001808  4E75                    1024              RTS
0000180A                          1025              
0000180A                          1026  ; ----------------------------------------------------------------------------
0000180A                          1027  APPLEPLOT
0000180A                          1028  ; Dibuja la manzana
0000180A                          1029  ; INPUT    : NONE 
0000180A                          1030  ; OUTPUT   : NONE
0000180A                          1031  ; MODIFIES : NONE
0000180A                          1032  ; ----------------------------------------------------------------------------
0000180A  3F00                    1033              MOVE.W  D0,-(A7)
0000180C  3003                    1034              MOVE.W  D3,D0
0000180E  4EB9 00001ACC           1035              JSR     CNVICOOR
00001814  2F01                    1036              MOVE.L  D1,-(A7)                ; Primero debemos dibujar el fondo
00001816                          1037              
00001816  103C 0050               1038              MOVE.B  #80,D0
0000181A  223C 0090EE90           1039              MOVE.L  #COLFND,D1              ; Ponemos el color de dibujado a COLFND
00001820  4E4F                    1040              TRAP    #15
00001822                          1041              
00001822  103C 0051               1042              MOVE.B  #81,D0
00001826  223C 0090EE90           1043              MOVE.L  #COLFND,D1              ; Ponemos el color de relleno a COLFND
0000182C  4E4F                    1044              TRAP    #15
0000182E                          1045              
0000182E  103C 0057               1046              MOVE.B  #87,D0
00001832  221F                    1047              MOVE.L  (A7)+,D1
00001834  3F03                    1048              MOVE.W  D3,-(A7)
00001836  3601                    1049              MOVE.W  D1,D3
00001838  0643 0014               1050              ADD.W   #SIZECLDA,D3
0000183C  3802                    1051              MOVE.W  D2,D4                   ; Dibujamos el cuadrado del fondo donde irá la manzana
0000183E  0644 0014               1052              ADD.W   #SIZECLDA,D4
00001842  4E4F                    1053              TRAP    #15                     
00001844                          1054                          
00001844  361F                    1055              MOVE.W  (A7)+,D3  
00001846  301F                    1056              MOVE.W  (A7)+,D0
00001848                          1057  
00001848  3F00                    1058              MOVE.W  D0,-(A7)
0000184A  3003                    1059              MOVE.W  D3,D0
0000184C  4EB9 00001ACC           1060              JSR     CNVICOOR
00001852  2F01                    1061              MOVE.L  D1,-(A7)
00001854                          1062              
00001854  103C 0050               1063              MOVE.B  #80,D0
00001858  223C 0000AAFF           1064              MOVE.L  #MNZPCOL,D1             ; Ponemos el color de dibujado
0000185E  4E4F                    1065              TRAP    #15                     ; al color de fondo de la manzana
00001860                          1066              
00001860  103C 0051               1067              MOVE.B  #81,D0
00001864  223C 000000FF           1068              MOVE.L  #MNZFCOL,D1             ; Ponemos el color de dibujado
0000186A  4E4F                    1069              TRAP    #15                     ; al color del relleno de la manzana
0000186C                          1070              
0000186C  103C 0058               1071              MOVE.B  #88,D0
00001870  221F                    1072              MOVE.L  (A7)+,D1
00001872  3F03                    1073              MOVE.W  D3,-(A7)
00001874  3601                    1074              MOVE.W  D1,D3
00001876  0643 0014               1075              ADD.W   #SIZECLDA,D3
0000187A  3802                    1076              MOVE.W  D2,D4                    ; Dibujamos el círculo
0000187C  0644 0014               1077              ADD.W   #SIZECLDA,D4
00001880  4E4F                    1078              TRAP    #15                     
00001882                          1079                          
00001882  361F                    1080              MOVE.W  (A7)+,D3  
00001884  301F                    1081              MOVE.W  (A7)+,D0
00001886                          1082  
00001886                          1083  
00001886  4E75                    1084              RTS
00001888                          1085  ; ----------------------------------------------------------------------------
00001888                          1086  GENPOSMNZ
00001888                          1087  ; Genera una posición aleatoria para la manzana
00001888                          1088  ; INPUT: NONE
00001888                          1089  ; OUTPUT:
00001888                          1090  ; MODIFIES: MNZPOSX, MNZPOSY
00001888                          1091  ; ----------------------------------------------------------------------------
00001888                          1092  
00001888  48E7 8000               1093              MOVEM.L D0,-(A7)
0000188C                          1094  
0000188C                          1095              ; Genera la coordenada X aleatoria
0000188C  4EB8 11D0               1096              JSR     UTLRAND
00001890  0240 001F               1097              ANDI.W  #NUMCLMNS-1, D0         ; Asegura que esté en [0, NUMCLMNS-1]
00001894  C0FC 0014               1098              MULU    #SIZECLDA, D0           ; Escala al tamaño real de las celdas
00001898  3200                    1099              MOVE.W  D0,D1
0000189A  33C0 0000236A           1100              MOVE.W  D0, MNZPOSX             ; Guarda la coordenada X generada
000018A0                          1101              
000018A0                          1102              ; Generar coordenada Y aleatoria
000018A0  4EB8 11D0               1103              JSR     UTLRAND
000018A4  0240 0017               1104              ANDI.W  #NUMFILAS-1, D0         ; Asegura que esté en el rango [0, NUMFILAS-1]
000018A8  C0FC 0014               1105              MULU    #SIZECLDA, D0           ; Escala al tamaño real de las celdas
000018AC  3400                    1106              MOVE.W  D0,D2
000018AE  33C0 0000236C           1107              MOVE.W  D0, MNZPOSY             ; Guarda la coordenada Y generada
000018B4                          1108              
000018B4  4CDF 0001               1109              MOVEM.L (A7)+,D0
000018B8  4E75                    1110              RTS 
000018BA                          1111  
000018BA                          1112  
000018BA                          1113  
000018BA                          1114  
000018BA                          1115  
000018BA                          1116  
000018BA                          1117  
000018BA                          1118  -------------------- end include --------------------
000018BA                          1119              INCLUDE 'SCORE.X68'
000018BA                          1120     
000018BA                          1121  ; ------------------------------------------------------------------------------
000018BA                          1122  SCOINIT
000018BA                          1123  ; INICIALIZAR MARCADOR.
000018BA                          1124  ; INPUT    : NONE 
000018BA                          1125  ; OUTPUT   : NONE
000018BA                          1126  ; MODIFIES : NONE
000018BA                          1127  ; ------------------------------------------------------------------------------
000018BA  4279 00002382           1128              CLR.W   (JGOPNTS)
000018C0  4279 00002384           1129              CLR.W   (JGOTIM)                ; Reiniciamos timer y puntuación
000018C6  33FC 0096 00002384      1130              MOVE.W  #150,(JGOTIM)
000018CE  4E75                    1131              RTS
000018D0                          1132              
000018D0                          1133  ; ------------------------------------------------------------------------------
000018D0                          1134  SCOUPD
000018D0                          1135  ; ACTUALIZAR MARCADOR.
000018D0                          1136  ; INPUT    : NONE 
000018D0                          1137  ; OUTPUT   : NONE
000018D0                          1138  ; MODIFIES : NONE
000018D0                          1139  ; ------------------------------------------------------------------------------
000018D0                          1140              
000018D0  48E7 8000               1141              MOVEM.L D0,-(A7)
000018D4                          1142              
000018D4                          1143              ;Incrementa el marcador
000018D4  3039 00002382           1144              MOVE.W  (JGOPNTS),D0
000018DA  0640 000A               1145              ADD.W  #10,D0
000018DE  33C0 00002382           1146              MOVE.W  D0,(JGOPNTS)
000018E4                          1147              
000018E4  4CDF 0001               1148              MOVEM.L (A7)+,D0
000018E8                          1149  
000018E8  4E75                    1150              RTS
000018EA                          1151              
000018EA                          1152  ; ------------------------------------------------------------------------------
000018EA                          1153  SCOPLOT
000018EA                          1154  ; DIBUJAR MARCADOR.
000018EA                          1155  ; INPUT    : NONE 
000018EA                          1156  ; OUTPUT   : NONE
000018EA                          1157  ; MODIFIES : NONE
000018EA                          1158  ; ------------------------------------------------------------------------------
000018EA  48E7 C040               1159              MOVEM.L  D0-D1/A1,-(A7)
000018EE                          1160              ; Ponemos color del fondo
000018EE  103C 0051               1161              MOVE.B   #81,D0
000018F2  223C 0090EE90           1162              MOVE.L   #COLFND,D1
000018F8  4E4F                    1163              TRAP     #15
000018FA                          1164           
000018FA                          1165              ; Ponemos en la esquina superior izquierda
000018FA  4241                    1166              CLR.W    D1
000018FC  103C 000B               1167              MOVE.B   #11,D0
00001900  4E4F                    1168              TRAP     #15
00001902                          1169              ; Dibujar linea de puntuación
00001902  43F9 0000193A           1170              LEA     .TXT1,A1
00001908  4281                    1171              CLR.L   D1
0000190A  3239 00002382           1172              MOVE.W  (JGOPNTS),D1
00001910  103C 0011               1173              MOVE.B  #17,D0
00001914  4E4F                    1174              TRAP    #15
00001916                          1175              
00001916                          1176              ; Bajamos una linea 
00001916  323C 0001               1177              MOVE.W   #1,D1
0000191A  103C 000B               1178              MOVE.B   #11,D0
0000191E  4E4F                    1179              TRAP     #15
00001920                          1180              ; Dibujar linea timer
00001920  43F9 00001944           1181              LEA     .TXT2,A1
00001926  4281                    1182              CLR.L   D1
00001928  3239 00002384           1183              MOVE.W  (JGOTIM),D1
0000192E  103C 0011               1184              MOVE.B  #17,D0
00001932  4E4F                    1185              TRAP    #15
00001934                          1186  
00001934                          1187              
00001934  4CDF 0203               1188              MOVEM.L (A7)+,D0-D1/A1
00001938  4E75                    1189              RTS
0000193A                          1190  
0000193A                          1191  
0000193A= 50 55 4E 54 4F 53 ...   1192  .TXT1       DC.B    'PUNTOS : ',0
00001944= 54 49 45 4D 50 4F ...   1193  .TXT2       DC.B    'TIEMPO : ',0
0000194E                          1194              DS.W    0
0000194E                          1195  
0000194E                          1196  
0000194E                          1197  
0000194E                          1198  
0000194E                          1199  
0000194E                          1200  
0000194E                          1201  
0000194E                          1202  -------------------- end include --------------------
0000194E                          1203              INCLUDE 'GAME.X68'
0000194E                          1204  ; ==============================================================================
0000194E                          1205  ; GAME MANAGEMENT
0000194E                          1206  ; ==============================================================================
0000194E                          1207  
0000194E                          1208  ; ------------------------------------------------------------------------------
0000194E                          1209  GAMINIT
0000194E                          1210  ; INITIALIZES GAME.
0000194E                          1211  ; INPUT    : NONE
0000194E                          1212  ; OUTPUT   : NONE
0000194E                          1213  ; MODIFIES : NONE
0000194E                          1214  ; ------------------------------------------------------------------------------
0000194E  4EB9 00001992           1215              JSR     MTZINIT
00001954  4EB8 12EE               1216              JSR     HEADINIT
00001958  4EB8 15FA               1217              JSR     SEGINIT                 ; Inicializar todos los componentes del juego
0000195C  4EB8 16FA               1218              JSR     TAILINIT
00001960  4EB8 18BA               1219              JSR     SCOINIT
00001964  6000 FE34               1220              BRA     APPLEINIT
00001968                          1221  
00001968                          1222  ; ------------------------------------------------------------------------------
00001968                          1223  GAMUPD
00001968                          1224  ; UPDATES THE GAME
00001968                          1225  ; INPUT    : NONE
00001968                          1226  ; OUTPUT   : NONE
00001968                          1227  ; MODIFIES : NONE
00001968                          1228  ; ------------------------------------------------------------------------------
00001968  4EB8 170C               1229              JSR     TAILUPD
0000196C  4EB8 1628               1230              JSR     SEGUPD                  ; Actualizar componentes del juego
00001970  4EB8 130E               1231              JSR     HEADUPD
00001974  6000 01EE               1232              BRA     MTZUPD       
00001978                          1233  
00001978                          1234  ; ------------------------------------------------------------------------------
00001978                          1235  GAMPLOT
00001978                          1236  ; PLOTS THE GAME
00001978                          1237  ; INPUT    : NONE
00001978                          1238  ; OUTPUT   : NONE
00001978                          1239  ; MODIFIES : NONE
00001978                          1240  ; ------------------------------------------------------------------------------
00001978  4EB8 1576               1241              JSR    HEADPLOT
0000197C  4EB8 16BA               1242              JSR    SEGPLOT
00001980  4EB8 175A               1243              JSR    TAILPLOT                 ; Dibujar componentes del juego
00001984  4EB8 180A               1244              JSR    APPLEPLOT
00001988  4EB9 00001D68           1245              JSR    MTZPLOT
0000198E  6000 FF5A               1246              BRA    SCOPLOT
00001992                          1247  
00001992                          1248  
00001992                          1249  
00001992                          1250  
00001992                          1251  
00001992                          1252  
00001992                          1253  -------------------- end include --------------------
00001992                          1254              INCLUDE 'MATRIZ.X68'
00001992                          1255  ; ----------------------------------------------------------------------------
00001992                          1256  ; MATRIZ
00001992                          1257  ; ----------------------------------------------------------------------------
00001992                          1258  
00001992                          1259  ;-----------------------------------------------------------------------------
00001992                          1260  MTZINIT
00001992                          1261  ; INICIALIZA LA MATRIZ, AL PRINCIPIO ESTÁ VACÍA
00001992                          1262  ; INPUT    : NONE
00001992                          1263  ; OUTPUT   : NONE
00001992                          1264  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001992                          1265  ; ----------------------------------------------------------------------------
00001992                          1266              
00001992  48A7 E080               1267              MOVEM.W D0-D2/A0,-(A7)
00001996                          1268              
00001996  41F9 000023A2           1269              LEA ESTDCLDS,A0                 ; Apunta al inicio de ESTDCLDS
0000199C  303C 0300               1270              MOVE.W #TCELDAS,D0              ; Número total de celdas
000019A0                          1271  
000019A0                          1272  CLNCLDS:
000019A0  4218                    1273              CLR.B (A0)+                     ; Coloca 0 en cada celda
000019A2  5340                    1274              SUBI.W #1, D0                   ; Decrementa el contador de celdas
000019A4  66FA                    1275              BNE CLNCLDS                     ; Repite hasta que esten vacías
000019A6                          1276              
000019A6                          1277              
000019A6  3239 0000236E           1278              MOVE.W  (CBZPOSX),D1            ; Vemos la posición de la cabeza             
000019AC  3439 00002370           1279              MOVE.W  (CBZPOSY),D2
000019B2  4EB9 00001A24           1280              JSR     CINDMTRZ
000019B8  4EB9 00001A5E           1281              JSR     CBZOCPD                 ; Marcamos la posición de la cabeza
000019BE                          1282              
000019BE  3239 0000237A           1283              MOVE.W  (SGMPOSX),D1
000019C4  3439 0000237C           1284              MOVE.W  (SGMPOSY),D2            ; Vemos la posición del segmento
000019CA  4EB9 00001A24           1285              JSR     CINDMTRZ
000019D0  4EB9 00001A8A           1286              JSR     SGMOCPD                 ; Marcamos la posición del segmento
000019D6                          1287              
000019D6  3239 0000237E           1288              MOVE.W  (SGMPOSX2),D1
000019DC  3439 00002380           1289              MOVE.W  (SGMPOSY2),D2           ; Vemos la posición del segmento 2
000019E2  4EB9 00001A24           1290              JSR     CINDMTRZ
000019E8  4EB9 00001A8A           1291              JSR     SGMOCPD                 ; Marcamos la posición del segmento 2
000019EE                          1292              
000019EE  3239 00002376           1293              MOVE.W  (COLPOSX),D1            ; Vemos la posición de la cola
000019F4  3439 00002378           1294              MOVE.W  (COLPOSY),D2
000019FA  4EB9 00001A24           1295              JSR     CINDMTRZ
00001A00  4EB9 00001AA0           1296              JSR     COLOCPD                 ; Marcamos la posición de la cola
00001A06                          1297              
00001A06  3239 0000236A           1298              MOVE.W  (MNZPOSX),D1            ; Vemos la posicion de la manzana
00001A0C  3439 0000236C           1299              MOVE.W  (MNZPOSY),D2
00001A12  4EB9 00001A24           1300              JSR     CINDMTRZ
00001A18  4EB9 00001AB6           1301              JSR     MNZOCPD                 ; Marcamos la posición de la manzana
00001A1E                          1302              
00001A1E                          1303              
00001A1E  4C9F 0107               1304              MOVEM.W (A7)+,D0-D2/A0
00001A22                          1305  
00001A22  4E75                    1306              RTS
00001A24                          1307  
00001A24                          1308  ;-----------------------------------------------------------------------------
00001A24                          1309  CINDMTRZ
00001A24                          1310  ; CALCULA EL ÍNDICE DE UNA CELDA
00001A24                          1311  ; INPUT    : D1 = coordenada X pantalla, D2 = coordenada Y pantalla
00001A24                          1312  ; OUTPUT   : D0 = índice de la celda en ESTDCLDS
00001A24                          1313  ; MODIFIES : NONE
00001A24                          1314  ; ----------------------------------------------------------------------------
00001A24                          1315  
00001A24  48A7 7000               1316               MOVEM.W D1-D3,-(A7)            ; Guarda los registros D1-D3 en la pila
00001A28                          1317  
00001A28                          1318              ; Divide X por SIZECLDA
00001A28  3601                    1319              MOVE.W  D1,D3                   ; Copia X a D3
00001A2A  4241                    1320              CLR.W   D1                      ; Inicializa el cociente de X
00001A2C                          1321  
00001A2C  B67C 0014               1322  DIVX:       CMP.W   #SIZECLDA,D3            ; Compara D3 con SIZECLDA
00001A30  6D00 000A               1323              BLT     ENDDIVX                 ; Si D3 < SIZECLDA, salta a ENDDIVX
00001A34  0443 0014               1324              SUB.W   #SIZECLDA,D3            ; Resta SIZECLDA de D3
00001A38  5241                    1325              ADDQ.W  #1,D1                   ; Incrementa el cociente de X
00001A3A  60F0                    1326              BRA     DIVX                    ; Repite el bucle
00001A3C                          1327  
00001A3C                          1328  ENDDIVX:
00001A3C                          1329  
00001A3C                          1330              ; Divide Y por SIZECLDA
00001A3C  3602                    1331              MOVE.W  D2,D3                   ; Copia Y a D3
00001A3E  4242                    1332              CLR.W   D2                      ; Inicializa el cociente de Y
00001A40                          1333  
00001A40  B67C 0014               1334  DIVY:       CMP.W   #SIZECLDA,D3            ; Compara D3 con SIZECLDA
00001A44  6D00 000A               1335              BLT     ENDDIVY                 ; Si D3 < SIZECLDA, salta a ENDDIVY
00001A48  0443 0014               1336              SUB.W   #SIZECLDA,D3            ; Resta SIZECLDA de D3
00001A4C  5242                    1337              ADDQ.W  #1, D2                  ; Incrementa el cociente de Y
00001A4E  60F0                    1338              BRA     DIVY                    ; Repite el bucle
00001A50                          1339  
00001A50                          1340  ENDDIVY:
00001A50                          1341  
00001A50                          1342              ; Calcula el índice
00001A50  4240                    1343              CLR.W   D0
00001A52  3002                    1344              MOVE.W  D2, D0                  ; D0 = Y_CELDA
00001A54  EB40                    1345              ASL.W   #5, D0                  ; D0 = Y_CELDA * NUMCLMNS (32 = 2^5)
00001A56  D041                    1346              ADD.W   D1, D0                  ; D0 = Y_CELDA * NUMCLMNS + X_CELDA
00001A58                          1347  
00001A58  4C9F 000E               1348              MOVEM.W (A7)+,D1-D3             ; Restaura los registros D1-D3 desde la pila
00001A5C                          1349  
00001A5C  4E75                    1350              RTS  
00001A5E                          1351              
00001A5E                          1352  ;-----------------------------------------------------------------------------
00001A5E                          1353  CBZOCPD
00001A5E                          1354  ; MARCA UNA CELDA COMO OCUPADA POR LA CABEZA
00001A5E                          1355  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A5E                          1356  ; OUTPUT   : NONE
00001A5E                          1357  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A5E                          1358  ; ----------------------------------------------------------------------------
00001A5E                          1359  
00001A5E  48A7 0080               1360              MOVEM.W A0,-(A7)
00001A62                          1361  
00001A62  41F9 000023A2           1362              LEA     ESTDCLDS,A0             ; Dirección de la matriz en A0
00001A68  11BC 0003 0000          1363              MOVE.B  #3,(A0, D0.W)           ; Marca la celda como ocupada
00001A6E                          1364              
00001A6E  4C9F 0100               1365              MOVEM.W (A7)+,A0
00001A72                          1366              
00001A72  4E75                    1367              RTS
00001A74                          1368              
00001A74                          1369              
00001A74                          1370                         
00001A74                          1371  ;-----------------------------------------------------------------------------
00001A74                          1372  MCLDVCIA
00001A74                          1373  ; MARCA UNA CELDA COMO VACÍA
00001A74                          1374  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A74                          1375  ; OUTPUT   : NONE
00001A74                          1376  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A74                          1377  ; ----------------------------------------------------------------------------
00001A74                          1378  
00001A74  48A7 0080               1379              MOVEM.W A0,-(A7)
00001A78                          1380  
00001A78  41F9 000023A2           1381              LEA     ESTDCLDS,A0             ; Direccion de la matriz en A0
00001A7E  11BC 0000 0000          1382              MOVE.B  #0,(A0,D0.W)            ; Marca la celda como vacía
00001A84                          1383              
00001A84  4C9F 0100               1384              MOVEM.W (A7)+,A0
00001A88                          1385              
00001A88  4E75                    1386              RTS
00001A8A                          1387  
00001A8A                          1388  ;-----------------------------------------------------------------------------
00001A8A                          1389  SGMOCPD
00001A8A                          1390  ; MARCA UNA CELDA COMO OCUPADA POR EL SEGMENTO
00001A8A                          1391  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A8A                          1392  ; OUTPUT   : NONE
00001A8A                          1393  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A8A                          1394  ; ----------------------------------------------------------------------------
00001A8A                          1395  
00001A8A  48A7 0080               1396              MOVEM.W A0,-(A7)
00001A8E                          1397  
00001A8E  41F9 000023A2           1398              LEA ESTDCLDS,A0                 ; Dirección de la matriz en A0
00001A94  11BC 0002 0000          1399              MOVE.B #2,(A0,D0.W)             ; Marca la celda como ocupada
00001A9A                          1400              
00001A9A  4C9F 0100               1401              MOVEM.W (A7)+,A0
00001A9E                          1402              
00001A9E  4E75                    1403              RTS
00001AA0                          1404              
00001AA0                          1405  ;-----------------------------------------------------------------------------
00001AA0                          1406  COLOCPD
00001AA0                          1407  ; MARCA UNA CELDA COMO OCUPADA POR LA COLA
00001AA0                          1408  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001AA0                          1409  ; OUTPUT   : NONE
00001AA0                          1410  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001AA0                          1411  ; ----------------------------------------------------------------------------
00001AA0                          1412  
00001AA0  48A7 0080               1413              MOVEM.W A0,-(A7)
00001AA4                          1414  
00001AA4  41F9 000023A2           1415              LEA ESTDCLDS,A0                 ; Dirección de la matriz en A0
00001AAA  11BC 0001 0000          1416              MOVE.B #1,(A0,D0.W)             ; Marca la celda como ocupada
00001AB0                          1417              
00001AB0  4C9F 0100               1418              MOVEM.W (A7)+,A0
00001AB4                          1419              
00001AB4  4E75                    1420              RTS
00001AB6                          1421  
00001AB6                          1422  
00001AB6                          1423  ;-----------------------------------------------------------------------------
00001AB6                          1424  MNZOCPD
00001AB6                          1425  ; MARCA UNA CELDA COMO OCUPADA POR LA MANZANA
00001AB6                          1426  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001AB6                          1427  ; OUTPUT   : NONE
00001AB6                          1428  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001AB6                          1429  ; ----------------------------------------------------------------------------
00001AB6                          1430  
00001AB6  48A7 0080               1431              MOVEM.W A0,-(A7)
00001ABA                          1432  
00001ABA  41F9 000023A2           1433              LEA ESTDCLDS,A0                 ; Dirección de la matriz en A0
00001AC0  11BC 0004 0000          1434              MOVE.B #4,(A0,D0.W)             ; Marca la celda como ocupada
00001AC6                          1435              
00001AC6  4C9F 0100               1436              MOVEM.W (A7)+,A0
00001ACA                          1437              
00001ACA  4E75                    1438              RTS
00001ACC                          1439  
00001ACC                          1440              
00001ACC                          1441  ;-----------------------------------------------------------------------------
00001ACC                          1442  CNVICOOR
00001ACC                          1443  ; Convierte un índice de celda a coordenadas de pantalla (X, Y)
00001ACC                          1444  ; INPUT    : D0 = índice de la celda en ESTADO_CELDAS
00001ACC                          1445  ; OUTPUT   : D1 = coordenada X, D2 = coordenada Y
00001ACC                          1446  ; MODIFIES : NONE
00001ACC                          1447  ; ----------------------------------------------------------------------------
00001ACC                          1448  
00001ACC  48A7 9800               1449              MOVEM.W D0/D3-D4,-(A7)
00001AD0                          1450  
00001AD0  3400                    1451              MOVE.W  D0,D2                   ; Copia índice a D2 para calcular la fila
00001AD2  EA4A                    1452              LSR.W   #5,D2                   ; D2 = índice / NUM_COLUMNAS (32 = 2^5)
00001AD4  3200                    1453              MOVE.W  D0,D1                   ; Copia índice a D1 para calcular la columna
00001AD6  C27C 001F               1454              AND.W   #$1F,D1                 ; D1 = índice % NUM_COLUMNAS (31 = 0x1F) (CREO)
00001ADA                          1455  
00001ADA                          1456              ; Multiplica por TAMAÑO_CELDA = 10
00001ADA  363C 0014               1457              MOVE.W  #SIZECLDA, D3
00001ADE  3801                    1458              MOVE.W  D1,D4                   ; Copia D1 para multiplicar por 10
00001AE0  4241                    1459              CLR.W   D1                      ; Inicializa resultado
00001AE2                          1460  
00001AE2                          1461  
00001AE2                          1462  MULTLOOPX: 
00001AE2  B87C 0000               1463              CMP.W   #0,D4                   ; ¿Quedan iteraciones?
00001AE6  6700 0008               1464              BEQ     ENDMULTX
00001AEA  D243                    1465              ADD.W   D3,D1                   ; Suma TAMANO_CELDA (10) repetidamente
00001AEC                          1466  
00001AEC  5344                    1467              SUBQ.W  #1,D4                   ; Cuenta las iteraciones restantes
00001AEE  60F2                    1468              BRA     MULTLOOPX               ; Repite mientras no sea 0
00001AF0                          1469  ENDMULTX: 
00001AF0  3802                    1470              MOVE.W  D2,D4                   ; Copia D2 para multiplicar por 10
00001AF2  4242                    1471              CLR.W   D2                      ; Inicializa resultado
00001AF4                          1472  
00001AF4                          1473  MULTLOOPY: 
00001AF4  B87C 0000               1474              CMP.W   #0,D4                   ; ¿Quedan iteraciones?
00001AF8  6700 0008               1475              BEQ     ENDMULTY
00001AFC  D443                    1476              ADD.W   D3,D2                   ; Suma TAMANO_CELDA (10) repetidamente
00001AFE  5344                    1477              SUBQ.W  #1,D4                   ; Cuenta las iteraciones restantes
00001B00  60F2                    1478              BRA     MULTLOOPY               ; Repite mientras no sea 0
00001B02                          1479  ENDMULTY:
00001B02  4C9F 0019               1480              MOVEM.W (A7)+,D0/D3-D4
00001B06                          1481  
00001B06  4E75                    1482              RTS
00001B08                          1483  
00001B08                          1484  ; ----------------------------------------------------------------------------
00001B08                          1485  CHECKCLD
00001B08                          1486  ; INPUT: D0 = índice de la celda
00001B08                          1487  ; OUTPUT: D0 = 0 si está vacía, 1 si está ocupada
00001B08                          1488  ; MODIFIES: Ninguno
00001B08                          1489  ; ----------------------------------------------------------------------------
00001B08                          1490  
00001B08  41F9 000023A2           1491              LEA     ESTDCLDS,A0             ; Carga la dirección de la matriz ESTDCLDS
00001B0E  1230 0000               1492              MOVE.B  (A0,D0.W),D1            ; Carga el estado de la celda en D1
00001B12  B23C 0000               1493              CMP.B   #0,D1                   ; Compara si está vacía (0)
00001B16  6700 0008               1494              BEQ     CLDFREE                 ; Si está vacía
00001B1A  303C 0001               1495              MOVE.W  #1,D0                   ; Si está ocupada, devuelve 1 (ocupada)
00001B1E                          1496  
00001B1E  4E75                    1497              RTS
00001B20                          1498  
00001B20                          1499  CLDFREE:
00001B20  303C 0000               1500              MOVE.W  #0,D0                   ; Devuelve 0 (libre)
00001B24                          1501  
00001B24  4E75                    1502              RTS
00001B26                          1503  
00001B26                          1504  
00001B26                          1505  ;-----------------------------------------------------------------------------
00001B26                          1506  FONPLOT
00001B26                          1507  ; DIBUJADO DEL FONDO
00001B26                          1508  ; INPUT    : NONE
00001B26                          1509  ; OUTPUT   : NONE
00001B26                          1510  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001B26                          1511  ; ----------------------------------------------------------------------------
00001B26                          1512  
00001B26  3F00                    1513              MOVE.W  D0,-(A7)
00001B28  3003                    1514              MOVE.W  D3,D0
00001B2A  4EB8 1ACC               1515              JSR     CNVICOOR
00001B2E  2F01                    1516              MOVE.L  D1,-(A7)
00001B30                          1517              
00001B30  103C 0050               1518              MOVE.B  #80,D0
00001B34  223C 0090EE90           1519              MOVE.L  #COLFND,D1              ; Ponemos el color de dibujado a COLFND
00001B3A  4E4F                    1520              TRAP    #15
00001B3C                          1521              
00001B3C  103C 0051               1522              MOVE.B  #81,D0
00001B40  223C 0090EE90           1523              MOVE.L  #COLFND,D1              ; Ponemos el color del relleno a COLFND
00001B46  4E4F                    1524              TRAP    #15
00001B48                          1525              
00001B48  103C 0057               1526              MOVE.B  #87,D0
00001B4C  221F                    1527              MOVE.L  (A7)+,D1
00001B4E  3F03                    1528              MOVE.W  D3,-(A7)
00001B50  3601                    1529              MOVE.W  D1,D3
00001B52  0643 0014               1530              ADD.W   #SIZECLDA,D3
00001B56  3802                    1531              MOVE.W  D2,D4                    ; Dibujamos el cuadrado
00001B58  0644 0014               1532              ADD.W   #SIZECLDA,D4
00001B5C  4E4F                    1533              TRAP    #15                     
00001B5E                          1534                          
00001B5E  361F                    1535              MOVE.W  (A7)+,D3  
00001B60  301F                    1536              MOVE.W  (A7)+,D0
00001B62  4E75                    1537              RTS         
00001B64                          1538  
00001B64                          1539  
00001B64                          1540  
00001B64                          1541  ;-----------------------------------------------------------------------------
00001B64                          1542  MTZUPD
00001B64                          1543  ; ACTUALIZA LA MATRIZ CASILLA A CASILLA
00001B64                          1544  ; INPUT    : NONE
00001B64                          1545  ; OUTPUT   : NONE
00001B64                          1546  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001B64                          1547  ; ----------------------------------------------------------------------------
00001B64                          1548  
00001B64                          1549  
00001B64  48E7 F1C0               1550              MOVEM.L D0-D3/D7/A0-A1,-(A7)
00001B68                          1551              
00001B68  41F9 000023A2           1552              LEA ESTDCLDS,A0                 ; Apunta al inicio de ESTDCLDS
00001B6E  303C 0300               1553              MOVE.W #TCELDAS,D0              ; Número total de celdas
00001B72                          1554  
00001B72                          1555  .CLNCLDS:
00001B72  4218                    1556              CLR.B (A0)+                     ; Coloca 0 en cada celda
00001B74  5340                    1557              SUBI.W #1,D0                    ; Decrementa el contador de celdas
00001B76  66FA                    1558              BNE .CLNCLDS                    ; Repite hasta que esten vacías
00001B78                          1559              
00001B78                          1560              
00001B78  3239 0000236E           1561              MOVE.W  (CBZPOSX),D1            ; Vemos la posición de la cabexa             
00001B7E  3439 00002370           1562              MOVE.W  (CBZPOSY),D2
00001B84  4EB8 1A24               1563              JSR     CINDMTRZ
00001B88  4EB8 1A5E               1564              JSR     CBZOCPD                 ; Marcamos la posición de la cabeza
00001B8C                          1565              
00001B8C  3239 0000237A           1566              MOVE.W  (SGMPOSX),D1
00001B92  3439 0000237C           1567              MOVE.W  (SGMPOSY),D2            ; Vemos la posición del segmento
00001B98  4EB8 1A24               1568              JSR     CINDMTRZ
00001B9C  4EB8 1A8A               1569              JSR     SGMOCPD                 ; Marcamos la posición del segmento
00001BA0                          1570              
00001BA0  3239 0000237E           1571              MOVE.W  (SGMPOSX2),D1
00001BA6  3439 00002380           1572              MOVE.W  (SGMPOSY2),D2           ; Vemos la posición del segmento 2
00001BAC  4EB8 1A24               1573              JSR     CINDMTRZ
00001BB0  4EB8 1A8A               1574              JSR     SGMOCPD                 ; Marcamos la posición del segmento 2
00001BB4                          1575              
00001BB4  3239 00002376           1576              MOVE.W  (COLPOSX),D1            ; Vemos la posicion de la cola
00001BBA  3439 00002378           1577              MOVE.W  (COLPOSY),D2
00001BC0  4EB8 1A24               1578              JSR     CINDMTRZ
00001BC4  4EB8 1AA0               1579              JSR     COLOCPD                 ; Marcamos la posicion de la cola
00001BC8                          1580              
00001BC8  3239 0000236A           1581              MOVE.W  (MNZPOSX),D1            ; Vemos la posición de la manzana
00001BCE  3439 0000236C           1582              MOVE.W  (MNZPOSY),D2
00001BD4  4EB8 1A24               1583              JSR     CINDMTRZ
00001BD8  4EB8 1AB6               1584              JSR     MNZOCPD                 ; Marcamos la posición de la manzana
00001BDC                          1585              
00001BDC                          1586              
00001BDC                          1587              
00001BDC  5379 00002384           1588              SUBQ.W  #1,(JGOTIM)             ; Restamos 1 al timer
00001BE2  0C79 0000 00002384      1589              CMP     #0,(JGOTIM)             ; Miramos si ha terminado el tiempo
00001BEA  6700 0006               1590              BEQ     .GAMEOVER
00001BEE  6000 0130               1591              BRA     .FIN                    ; Saltamos si no ha acabado
00001BF2                          1592              
00001BF2  33FC 0003 0000238E      1593  .GAMEOVER    MOVE.W  #3,(STANEXT)
00001BFA  4280                    1594              CLR.L   D0                      ; Borramos los registros que vamos a utilizar
00001BFC  4281                    1595              CLR.L   D1
00001BFE  4282                    1596              CLR.L   D2
00001C00  4283                    1597              CLR.L   D3
00001C02  42B9 00002394           1598              CLR.L   (BFFLEC)
00001C08                          1599              
00001C08                          1600              ; Escribir puntuación
00001C08  103C 0032               1601              MOVE.B  #50,D0                  ; Cerramos todos los archivos
00001C0C  4E4F                    1602              TRAP    #15
00001C0E                          1603  
00001C0E                          1604               ; Verificar si el archivo existe
00001C0E  43F9 00001D58           1605              LEA     .FILE,A1                ; Dirección del nombre del archivo
00001C14  103C 003B               1606              MOVE.B  #59,D0                  ; Verificar existencia del archivo
00001C18  4E4F                    1607              TRAP    #15
00001C1A  B07C 0000               1608              CMP.W   #0,D0                   ; Verificar si el archivo existe
00001C1E  6700 0006               1609              BEQ     .ABRIR_ARCHIVO          ; Si existe, abrir archivo
00001C22  6000 0062               1610              BRA     .CREAR_ARCHIVO          ; Si no existe, crear archivo
00001C26                          1611  
00001C26                          1612  .ABRIR_ARCHIVO
00001C26                          1613              ; Abrir archivo existente
00001C26  103C 0033               1614              MOVE.B  #51,D0                  ; Abrir archivo existente
00001C2A  4E4F                    1615              TRAP    #15
00001C2C  B07C 0000               1616              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001C30  6600 0120               1617              BNE     .ERROR                  ; Si falla, ir a ERROR
00001C34  23C1 00002390           1618              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001C3A                          1619  
00001C3A                          1620              ; Leer hasta encontrar el marcador `#`
00001C3A  2239 00002390           1621              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C40  7400                    1622              MOVE.L  #0,D2                   ; Posicionarse al inicio del archivo
00001C42  103C 0037               1623              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001C46  4E4F                    1624              TRAP    #15
00001C48                          1625  
00001C48                          1626  .BUSCAR_FINAL
00001C48  43F9 00002394           1627              LEA     BFFLEC,A1               ; Buffer para leer datos
00001C4E  2239 00002390           1628              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C54  7401                    1629              MOVE.L  #1,D2                   ; Leer 1 byte
00001C56  103C 0035               1630              MOVE.B  #53,D0                  ; Leer archivo
00001C5A  4E4F                    1631              TRAP    #15
00001C5C  B07C 0001               1632              CMP.W   #1,D0                   ; Verificar si alcanzamos EOF
00001C60  6700 003C               1633              BEQ     .ESCRIBIR               ; Si alcanzamos EOF, escribir al final
00001C64  0C39 0023 00002394      1634              CMP.B   #'#',(BFFLEC)           ; Comparar con el marcador `#`
00001C6C  6700 0006               1635              BEQ     .POSICIONAR             ; Si encontramos el marcador, posicionarnos ahí
00001C70  5283                    1636              ADDQ.L  #1,D3                   ; Incrementar contador de bytes leídos
00001C72  60D4                    1637              BRA     .BUSCAR_FINAL           ; Continuar buscando el marcador
00001C74                          1638  
00001C74                          1639  .POSICIONAR
00001C74                          1640              ; Posicionarse al marcador para sobrescribir
00001C74  2403                    1641              MOVE.L  D3,D2                   ; Cargar la posición del marcador desde el contador
00001C76  2239 00002390           1642              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C7C  103C 0037               1643              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001C80  4E4F                    1644              TRAP    #15
00001C82  6000 001A               1645              BRA     .ESCRIBIR               ; Ir a escribir datos
00001C86                          1646  
00001C86                          1647  .CREAR_ARCHIVO
00001C86                          1648              ; Crear archivo nuevo
00001C86  103C 0034               1649              MOVE.B  #52,D0                  ; Abrir o crear archivo
00001C8A  4E4F                    1650              TRAP    #15
00001C8C  B07C 0000               1651              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001C90  6600 00C0               1652              BNE     .ERROR                  ; Si falla, ir a ERROR
00001C94  23C1 00002390           1653              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
00001C9A  6000 0002               1654              BRA     .ESCRIBIR               ; Ir directamente a escribir datos
00001C9E                          1655  
00001C9E                          1656  .ESCRIBIR
00001C9E                          1657              ; Convertir el número en caracteres ASCII y escribirlos uno por uno
00001C9E  41F9 00002382           1658              LEA     JGOPNTS,A0              ; Dirección del número
00001CA4  3010                    1659              MOVE.W  (A0),D0                 ; Cargar el número en D0
00001CA6  4EB9 00001D26           1660              JSR     .CONVERTIR_NUMERO       ; Convertir número a ASCII en el buffer
00001CAC                          1661  
00001CAC                          1662              ; Escribir los caracteres del buffer
00001CAC  41F9 00002395           1663              LEA     ASCBFF,A0               ; Dirección del buffer de caracteres ASCII
00001CB2                          1664              
00001CB2                          1665  
00001CB2                          1666  .ESCRIBIR_BUCLE:
00001CB2  1010                    1667              MOVE.B  (A0),D0                 ; Leer carácter del buffer
00001CB4  6700 0028               1668              BEQ     .ESCRIBIR_FIN_BLOQUE    ; Si terminador NULL, ir al delimitador
00001CB8  2403                    1669              MOVE.L  D3,D2                   ; Cargar posición actual
00001CBA  2239 00002390           1670              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001CC0  103C 0037               1671              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001CC4  4E4F                    1672              TRAP    #15                     ; Posicionar antes de escribir
00001CC6  103C 0036               1673              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001CCA  43D0                    1674              LEA     (A0),A1
00001CCC  7401                    1675              MOVE.L  #1,D2
00001CCE  4E4F                    1676              TRAP    #15                     ; Escribir carácter
00001CD0  B07C 0000               1677              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00001CD4  6600 007C               1678              BNE     .ERROR                  ; Si falla, ir a ERROR
00001CD8  5283                    1679              ADDQ.L  #1,D3                   ; Incrementar posición
00001CDA  1018                    1680              MOVE.B  (A0)+,D0                ; Restaurar carácter actual
00001CDC  60D4                    1681              BRA     .ESCRIBIR_BUCLE         ; Continuar con el siguiente carácter
00001CDE                          1682  
00001CDE                          1683  .ESCRIBIR_FIN_BLOQUE
00001CDE                          1684              ; Escribir delimitador `?`
00001CDE  43F9 00001D63           1685              LEA     .TXT1,A1
00001CE4  4EB9 00001CFA           1686              JSR     .ESCRIBIR_CARACTER
00001CEA                          1687              ; Escribir marcador `#`
00001CEA  43F9 00001D65           1688              LEA     .TXT2,A1
00001CF0  4EB9 00001CFA           1689              JSR     .ESCRIBIR_CARACTER
00001CF6  6000 001C               1690              BRA     .FINESC
00001CFA                          1691  
00001CFA                          1692  .ESCRIBIR_CARACTER:
00001CFA  2403                    1693              MOVE.L  D3,D2                   ; Cargar posición actual
00001CFC  2239 00002390           1694              MOVE.L  FILEID,D1               ; File-ID del archivo
00001D02  103C 0037               1695              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001D06  4E4F                    1696              TRAP    #15                     ; Posicionar antes de escribir
00001D08  103C 0036               1697              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001D0C  7401                    1698              MOVE.L  #1,D2
00001D0E  4E4F                    1699              TRAP    #15                     ; Escribir carácter
00001D10  5283                    1700              ADDQ.L  #1,D3                   ; Incrementar posición
00001D12  4E75                    1701              RTS                             ; Retornar
00001D14                          1702  
00001D14                          1703  .FINESC
00001D14                          1704              ; Cerrar archivo
00001D14  2239 00002390           1705              MOVE.L  FILEID,D1               ; File-ID del archivo
00001D1A  103C 0038               1706              MOVE.B  #56,D0                  ; Cerrar archivo
00001D1E  4E4F                    1707              TRAP    #15
00001D20                          1708  .FIN
00001D20  4CDF 038F               1709              MOVEM.L (A7)+,D0-D3/D7/A0-A1    ; Restaurar registros
00001D24  4E75                    1710              RTS                             ; Retornar
00001D26                          1711  
00001D26                          1712  .CONVERTIR_NUMERO
00001D26  48E7 F040               1713               MOVEM.L D0-D3/A1,-(A7)         ; Guardar registros usados en la pila
00001D2A                          1714  
00001D2A                          1715      ; Inicialización
00001D2A  43F9 00002395           1716      LEA     ASCBFF,A1              ; Dirección del buffer
00001D30  740A                    1717      MOVEQ   #10,D2                 ; Base decimal (10)
00001D32                          1718  
00001D32                          1719      ; Convertir número hexadecimal a decimal y guardar dígitos
00001D32                          1720  .CONVERTDELO:
00001D32  80C2                    1721      DIVU    D2,D0                  ; Dividir D0 por 10: cociente en D0, residuo en bits bajos
00001D34  3600                    1722      MOVE.W  D0,D3
00001D36  C0BC 0000000F           1723      AND.L   #$000F,D0              ; Asegurarnos de trabajar con el residuo (0-9)
00001D3C  0600 0030               1724      ADD.B   #48,D0                 ; Convertir residuo a carácter ASCII ('0'-'9')
00001D40  12C0                    1725      MOVE.B  D0,(A1)+               ; Almacenar carácter en el buffer
00001D42  3003                    1726      MOVE.W  D3,D0
00001D44  4A43                    1727      TST.W   D3                     ; Verificar si el cociente es 0
00001D46  66EA                    1728      BNE     .CONVERTDELO           ; Si no es 0, continuar con el próximo dígito
00001D48                          1729  
00001D48                          1730              
00001D48                          1731      ; Añadir terminador NULL al final
00001D48  12FC 0000               1732      MOVE.B  #0,(A1)+               ; Finalizar cadena con NULL
00001D4C                          1733  
00001D4C  4CDF 020F               1734      MOVEM.L (A7)+,D0-D3/A1         ; Restaurar registros usados
00001D50  4E75                    1735              RTS                    ; Retornar              
00001D52                          1736  .ERROR
00001D52  103C 0009               1737              MOVE.B  #9,D0          ; Terminar el programa
00001D56  4E4F                    1738              TRAP    #15
00001D58                          1739     
00001D58                          1740              
00001D58                          1741              
00001D58= 50 55 4E 54 4F 53 ...   1742  .FILE        DC.B    'PUNTOS.TXT',0 
00001D63= 3F 00                   1743  .TXT1       DC.B    '?',0
00001D65= 23 00                   1744  .TXT2       DC.B    '#',0  
00001D68                          1745              DS.W    0        
00001D68                          1746  
00001D68                          1747  
00001D68                          1748  
00001D68                          1749  
00001D68                          1750  
00001D68                          1751  ;-----------------------------------------------------------------------------
00001D68                          1752  MTZPLOT
00001D68                          1753  ; DIBUJA LA MATRIZ CASILLA A CASILLA
00001D68                          1754  ; INPUT    : NONE
00001D68                          1755  ; OUTPUT   : NONE
00001D68                          1756  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001D68                          1757  ; ----------------------------------------------------------------------------
00001D68  48E7 F080               1758              MOVEM.L D0-D3/A0,-(A7)
00001D6C                          1759  
00001D6C  4240                    1760              CLR.W   D0
00001D6E  4243                    1761              CLR.W   D3
00001D70  41F9 000023A2           1762              LEA     ESTDCLDS,A0            ; Apunta al inicio de ESTDCLDS
00001D76  303C 0300               1763              MOVE.W  #TCELDAS,D0            ; Número total de celdas
00001D7A  363C 0000               1764              MOVE.W  #0,D3                  ; Lo utilizamos para saber en el indice que nos encontramos
00001D7E  4241                    1765              CLR.W   D1
00001D80  4242                    1766              CLR.W   D2
00001D82                          1767              
00001D82                          1768  
00001D82                          1769  PLOTCLDS:
00001D82  1218                    1770              MOVE.B  (A0)+,D1                ; Movemos el valor de la celda a D1
00001D84  B23C 0000               1771              CMP.B   #0,D1
00001D88  6700 0034               1772              BEQ     PLOTVAC                 ; Salta a dibujar posición vacía
00001D8C  B23C 0001               1773              CMP.B   #1,D1 
00001D90  6700 0032               1774              BEQ     PLOTCOL                 ; Salta a dibujar cola
00001D94  B23C 0002               1775              CMP.B   #2,D1
00001D98  6700 0030               1776              BEQ     PLOTSEG                 ; Salta a dibujar segmento
00001D9C  B23C 0003               1777              CMP.B   #3,D1
00001DA0  6700 0016               1778              BEQ     PLOTCBZ                 ; Salta a dibujar cabeza
00001DA4  B23C 0004               1779              CMP.B   #4,D1                 
00001DA8  6700 0026               1780              BEQ     PLOTAPPLE               ; Salta a dibujar manzana
00001DAC                          1781    
00001DAC                          1782  DONEPLOT            
00001DAC  5243                    1783              ADDQ    #1,D3                   ; Aumentamos el indice de celda
00001DAE  5340                    1784              SUBI.W  #1,D0                   ; Decrementa el contador de celdas
00001DB0  66D0                    1785              BNE     PLOTCLDS                ; Repite hasta que esten vacías
00001DB2  4CDF 010F               1786              MOVEM.L (A7)+,D0-D3/A0
00001DB6  4E75                    1787              RTS
00001DB8                          1788  PLOTCBZ:
00001DB8  4EB8 1576               1789              JSR     HEADPLOT
00001DBC  60EE                    1790              BRA     DONEPLOT
00001DBE                          1791  
00001DBE                          1792  PLOTVAC:    
00001DBE  4EB8 1B26               1793              JSR     FONPLOT
00001DC2  60E8                    1794              BRA     DONEPLOT                ; Dibujado hecho 
00001DC4                          1795  
00001DC4                          1796  PLOTCOL:   
00001DC4  4EB8 175A               1797              JSR     TAILPLOT 
00001DC8  60E2                    1798              BRA     DONEPLOT                ; Dibujado hecho 
00001DCA                          1799              
00001DCA                          1800  PLOTSEG:    
00001DCA  4EB8 16BA               1801              JSR     SEGPLOT
00001DCE  60DC                    1802              BRA     DONEPLOT                ; Dibujado hecho   
00001DD0                          1803  
00001DD0                          1804  PLOTAPPLE:
00001DD0  4EB8 180A               1805              JSR     APPLEPLOT
00001DD4  60D6                    1806              BRA     DONEPLOT            
00001DD6                          1807  
00001DD6                          1808  
00001DD6                          1809  
00001DD6                          1810  
00001DD6                          1811  
00001DD6                          1812  
00001DD6                          1813  
00001DD6                          1814  
00001DD6                          1815  
00001DD6                          1816  
00001DD6                          1817  
00001DD6                          1818  
00001DD6                          1819  
00001DD6                          1820  
00001DD6                          1821  
00001DD6                          1822  
00001DD6                          1823  
00001DD6                          1824  
00001DD6                          1825  
00001DD6                          1826  
00001DD6                          1827  
00001DD6                          1828  
00001DD6                          1829  
00001DD6                          1830  
00001DD6                          1831  -------------------- end include --------------------
00001DD6                          1832              INCLUDE 'INTRO.X68'
00001DD6                          1833  ; ==============================================================================
00001DD6                          1834  ; INTRO SCREEN
00001DD6                          1835  ; ==============================================================================
00001DD6                          1836  
00001DD6                          1837  ; ------------------------------------------------------------------------------
00001DD6                          1838  ISCINIT
00001DD6                          1839  ; INTRO SCREEN INIT
00001DD6                          1840  ; INPUT    : NONE
00001DD6                          1841  ; OUTPUT   : NONE
00001DD6                          1842  ; MODIFIES : NONE
00001DD6                          1843  ; ------------------------------------------------------------------------------
00001DD6                          1844  
00001DD6  4279 00002386           1845              CLR.W   (ISCTIMER)
00001DDC                          1846              
00001DDC  4E75                    1847              RTS
00001DDE                          1848  
00001DDE                          1849  ; ------------------------------------------------------------------------------
00001DDE                          1850  ISCUPD
00001DDE                          1851  ; INTRO SCREEN UPDATE
00001DDE                          1852  ; INPUT    : NONE
00001DDE                          1853  ; OUTPUT   : NONE
00001DDE                          1854  ; MODIFIES : NONE
00001DDE                          1855  ; ------------------------------------------------------------------------------
00001DDE                          1856  
00001DDE  48E7 FC00               1857              MOVEM.L D0-D5,-(A7)
00001DE2                          1858              
00001DE2  323C 0107               1859              MOVE.W  #$0107,D1               ;Habilitar IRQ
00001DE6  303C 003C               1860              MOVE.W  #60,D0
00001DEA  4E4F                    1861              TRAP    #15
00001DEC                          1862              
00001DEC                          1863  .MAINLOOP            
00001DEC  123C 0000               1864              MOVE.B  #0,D1                   ; Leer estado actual del ratón
00001DF0  303C 003D               1865              MOVE.   #61,D0
00001DF4  4E4F                    1866              TRAP    #15
00001DF6                          1867              
00001DF6  2401                    1868              MOVE.L  D1,D2                   ; Guardar coordenadas en D2
00001DF8  0200 0001               1869              ANDI.B  #1,D0                   ; Comprobar click izquierdo
00001DFC  4A40                    1870              TST     D0
00001DFE  6700 0032               1871              BEQ     .CONT
00001E02                          1872              
00001E02                          1873              ; Miramos si se ha pulsado el texto correspondiente
00001E02  263C 00000108           1874              MOVE.L  #$108,D3                 ; (640 - 112) / 2 = 264 PIXELES -> COORDENADA X
00001E08  7819                    1875              MOVE.L  #$19,D4                  ; Coordenada Y del texto 25
00001E0A                          1876              
00001E0A  2A02                    1877              MOVE.L  D2,D5                   ; Coordenada Y del ratón
00001E0C  0285 0000FFFF           1878              ANDI.L  #$0000FFFF,D5
00001E12  BA84                    1879              CMP.L   D4,D5
00001E14  6D00 001C               1880              BLT     .CONT                   ; Si Y < TEXTO
00001E18                          1881  
00001E18  2A02                    1882              MOVE.L  D2,D5                   ; Coordenada X del ratón
00001E1A  0285 0000FFFF           1883              ANDI.L  #$FFFF,D5               ; Extraer X (bits bajos)
00001E20  BA83                    1884              CMP.L   D3,D5
00001E22  6D00 000E               1885              BLT     .CONT                   ; Si X < TEXTO
00001E26                          1886              
00001E26                          1887              ; Si el click está dentro del area de texto
00001E26  33FC 0002 0000238E      1888              MOVE.W  #2,(STANEXT)            ; Si coincide iniciar juego
00001E2E  6000 0034               1889              BRA     .DONE            
00001E32                          1890              
00001E32                          1891  .CONT       
00001E32                          1892  
00001E32  103C 0013               1893              MOVE.B  #19,D0                  ; Detectar teclas
00001E36  7250                    1894              MOVE.L  #'P',D1                 ; Código ASCII de la tecla P
00001E38  4E4F                    1895              TRAP    #15
00001E3A  0801 0000               1896              BTST.L  #0,D1                   ; Verificar si la tecla P está presionada
00001E3E  6700 000A               1897              BEQ     .END                    ; Si no está presionada, continuar
00001E42  33FC 0004 0000238E      1898              MOVE.W  #4,(STANEXT)            ; Cambiar STANEXT a 4 si la tecla P está presionada
00001E4A                          1899  .END            
00001E4A  5279 00002386           1900              ADDQ.W  #1,(ISCTIMER)
00001E50  0C79 01F4 00002386      1901              CMP.W   #ISCMAXTM,(ISCTIMER)
00001E58  6D00 000A               1902              BLT     .DONE
00001E5C  33FC 0001 0000238E      1903              MOVE.W  #1,(STANEXT)
00001E64                          1904              
00001E64                          1905  .DONE       
00001E64  4CDF 003F               1906              MOVEM.L (A7)+,D0-D5
00001E68  4E75                    1907              RTS
00001E6A                          1908  
00001E6A                          1909  ; ------------------------------------------------------------------------------
00001E6A                          1910  ISCPLOT
00001E6A                          1911  ; INTRO SCREEN PLOT
00001E6A                          1912  ; INPUT    : NONE
00001E6A                          1913  ; OUTPUT   : NONE
00001E6A                          1914  ; MODIFIES : NONE
00001E6A                          1915  ; ------------------------------------------------------------------------------
00001E6A  48E7 C080               1916              MOVEM.L D0-D1/A0,-(A7)
00001E6E                          1917                          
00001E6E  4281                    1918              CLR.L   D1
00001E70  103C 0051               1919              MOVE.B  #81,D0
00001E74  4E4F                    1920              TRAP    #15
00001E76                          1921              
00001E76  41F9 00001EAE           1922              LEA     .TXT1,A0
00001E7C  103C 000A               1923              MOVE.B  #10,D0
00001E80  4EB8 119E               1924              JSR     UTLPRINT
00001E84                          1925              
00001E84  0839 0004 000026AB      1926              BTST.B  #4,(SCRCYCCT)
00001E8C  6700 001A               1927              BEQ     .DONE                   ; Dibujamos la pantalla de introducción
00001E90                          1928              
00001E90  41F9 00001EC0           1929              LEA     .TXT2,A0
00001E96  103C 0017               1930              MOVE.B  #23,D0
00001E9A  4EB8 119E               1931              JSR     UTLPRINT
00001E9E                          1932              
00001E9E  41F9 00001ED4           1933              LEA     .TXT3,A0
00001EA4  4EB8 119E               1934              JSR     UTLPRINT
00001EA8                          1935              
00001EA8  4CDF 0103               1936  .DONE       MOVEM.L (A7)+,D0-D1/A0
00001EAC                          1937  
00001EAC  4E75                    1938              RTS
00001EAE                          1939              
00001EAE= 53 4E 41 4B 45 20 ...   1940  .TXT1       DC.B    'SNAKE TIMER 68000',0
00001EC0= 43 4C 49 43 4B 20 ...   1941  .TXT2       DC.B    'CLICK HERE TO START',0
00001ED4= 50 52 45 53 53 20 ...   1942  .TXT3       DC.B    'PRESS KEY P TO SEE SCORE TABLE',0
00001EF4                          1943              DS.W    0
00001EF4                          1944  
00001EF4                          1945  
00001EF4                          1946  
00001EF4                          1947  
00001EF4                          1948  
00001EF4                          1949  
00001EF4                          1950  
00001EF4                          1951  
00001EF4                          1952  
00001EF4                          1953  
00001EF4                          1954  
00001EF4                          1955  
00001EF4                          1956  
00001EF4                          1957  
00001EF4                          1958  
00001EF4                          1959  
00001EF4                          1960  
00001EF4                          1961  -------------------- end include --------------------
00001EF4                          1962              INCLUDE 'INSTRUCTIONS.X68'
00001EF4                          1963  ; ==============================================================================
00001EF4                          1964  ; INSTRUCTIONS SCREEN
00001EF4                          1965  ; ==============================================================================
00001EF4                          1966  
00001EF4                          1967  ; ------------------------------------------------------------------------------
00001EF4                          1968  INSINIT
00001EF4                          1969  ; INSTRUCTIONS SCREEN INIT
00001EF4                          1970  ; INPUT    : NONE
00001EF4                          1971  ; OUTPUT   : NONE
00001EF4                          1972  ; MODIFIES : NONE
00001EF4                          1973  ; ------------------------------------------------------------------------------
00001EF4                          1974  
00001EF4  4279 00002388           1975              CLR.W   (INSTIMER)              ; Reseteamos el timer
00001EFA  4E75                    1976              RTS
00001EFC                          1977  
00001EFC                          1978  ; ------------------------------------------------------------------------------
00001EFC                          1979  INSUPD
00001EFC                          1980  ; INSTRUCTIONS SCREEN UPDATE
00001EFC                          1981  ; INPUT    : NONE
00001EFC                          1982  ; OUTPUT   : NONE
00001EFC                          1983  ; MODIFIES : NONE
00001EFC                          1984  ; ------------------------------------------------------------------------------
00001EFC                          1985  
00001EFC  5279 00002388           1986              ADDQ.W  #1,(INSTIMER)
00001F02  0C79 01F4 00002388      1987              CMP.W   #INSMAXTM,(INSTIMER)    ; Miramos si hay que seguir en instrucciones
00001F0A  6D00 0008               1988              BLT     .DONE
00001F0E  4279 0000238E           1989              CLR.W   (STANEXT)
00001F14                          1990  .DONE
00001F14  4E75                    1991              RTS
00001F16                          1992  
00001F16                          1993  ; ------------------------------------------------------------------------------
00001F16                          1994  INSPLOT
00001F16                          1995  ; INSTRUCTIONS SCREEN PLOT
00001F16                          1996  ; INPUT    : NONE
00001F16                          1997  ; OUTPUT   : NONE
00001F16                          1998  ; MODIFIES : NONE
00001F16                          1999  ; ------------------------------------------------------------------------------
00001F16                          2000  
00001F16  48E7 C0C0               2001              MOVEM.L D0-D1/A0-A1,-(A7)
00001F1A                          2002              
00001F1A                          2003              ;JSR     FONPLOT
00001F1A                          2004              
00001F1A  103C 000B               2005              MOVE.B  #11,D0
00001F1E  43F9 00002098           2006              LEA     .TXTLST,A1
00001F24  2219                    2007  .LOOP       MOVE.L  (A1)+,D1
00001F26  6700 000A               2008              BEQ     .DONE                   ; Dibujamos la pantalla de instrucciones
00001F2A  2041                    2009              MOVE.L  D1,A0
00001F2C  4EB8 119E               2010              JSR     UTLPRINT
00001F30  60F2                    2011              BRA     .LOOP
00001F32                          2012              
00001F32  4CDF 0303               2013  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
00001F36  4E75                    2014              RTS
00001F38= 57 45 4C 43 4F 4D ...   2015  .TXT1       DC.B    'WELCOME TO THE GAME OF SNAKE TIMER 68000!',0
00001F62= 59 4F 55 52 20 47 ...   2016  .TXT2       DC.B    'YOUR GOAL IN THIS GAME IS TO EAT AS MUCH APPLES AS THE TIMER ALLOWS YOU',0
00001FAA= 45 41 43 48 20 41 ...   2017  .TXT3       DC.B    'EACH APPLE EATEN INCREASES THE TIME YOU CAN PLAY',0
00001FDB= 54 4F 20 54 48 49 ...   2018  .TXT4       DC.B    'TO THIS END, MOVE THE SNAKE WITH THE ARROWS',0
00002007= 48 4F 57 20 54 4F ...   2019  .TXT5       DC.B    'HOW TO DO IT? YOU MAY ASK.',0
00002022= 49 54 20 49 53 20 ...   2020  .TXT6       DC.B    'IT IS EASY: JUST USE THE UP, DOWN, LEFT, RIGHT KEYS TO MOVE THE SNAKE',0
00002068= 42 45 20 43 41 52 ...   2021  .TXT7       DC.B    'BE CAREFUL WITH THE WALLS! TRY NOT TO HIT THEM.',0
00002098= 00001F38 00001F62 ...   2022  .TXTLST     DC.L    .TXT1,.TXT2,.TXT3,.TXT4,.TXT5,.TXT6,.TXT7,0
000020B8                          2023  
000020B8                          2024  
000020B8                          2025  
000020B8                          2026  
000020B8                          2027  
000020B8                          2028  
000020B8                          2029  
000020B8                          2030  
000020B8                          2031  
000020B8                          2032  
000020B8                          2033  
000020B8                          2034  
000020B8                          2035  
000020B8                          2036  
000020B8                          2037  
000020B8                          2038  -------------------- end include --------------------
000020B8                          2039              INCLUDE 'GAMEOVER.X68'
000020B8                          2040  ; ==============================================================================
000020B8                          2041  ; GAME OVER SCREEN
000020B8                          2042  ; ==============================================================================
000020B8                          2043  
000020B8                          2044  ; ------------------------------------------------------------------------------
000020B8                          2045  GOVINIT
000020B8                          2046  ; GAME OVER SCREEN INIT
000020B8                          2047  ; INPUT    : NONE
000020B8                          2048  ; OUTPUT   : NONE
000020B8                          2049  ; MODIFIES : NONE
000020B8                          2050  ; ------------------------------------------------------------------------------
000020B8                          2051  
000020B8  4279 0000238A           2052              CLR.W  (GOVTIMER)
000020BE  4E75                    2053              RTS
000020C0                          2054  
000020C0                          2055  ; ------------------------------------------------------------------------------
000020C0                          2056  GOVUPD
000020C0                          2057  ; GAME OVER SCREEN UPDATE
000020C0                          2058  ; INPUT    : NONE
000020C0                          2059  ; OUTPUT   : NONE
000020C0                          2060  ; MODIFIES : NONE
000020C0                          2061  ; ------------------------------------------------------------------------------
000020C0  48E7 C000               2062              MOVEM.L D0-D1,-(A7)
000020C4                          2063              
000020C4  103C 0013               2064              MOVE.B  #19,D0                  ; Detectar la tecla S
000020C8  7253                    2065              MOVE.L  #'S',D1                 
000020CA  4E4F                    2066              TRAP    #15
000020CC  0801 0000               2067              BTST.L  #0,D1                   ; Verificar si la tecla S está presionada
000020D0  6700 0008               2068              BEQ     CONT                    ; Si no está presionada, continuar
000020D4                          2069  
000020D4  4279 0000238E           2070              CLR.W (STANEXT)                 ; Cambiar STANEXT a 0 si la tecla S está presionada
000020DA                          2071  
000020DA                          2072  
000020DA                          2073  CONT
000020DA                          2074  
000020DA                          2075              
000020DA                          2076              
000020DA  5279 0000238A           2077              ADDQ.W  #1,(GOVTIMER)
000020E0  0C79 01F4 0000238A      2078              CMP.W   #500,(GOVTIMER)
000020E8  6D00 0008               2079              BLT     .DONE
000020EC  4279 0000238E           2080              CLR.W   (STANEXT)
000020F2                          2081  .DONE
000020F2                          2082  
000020F2  4CDF 0003               2083              MOVEM.L (A7)+,D0-D1
000020F6                          2084              
000020F6  4E75                    2085              RTS
000020F8                          2086              
000020F8                          2087  ; ------------------------------------------------------------------------------
000020F8                          2088  GOVPLOT
000020F8                          2089  ; GAME OVER SCREEN PLOT
000020F8                          2090  ; INPUT    : NONE
000020F8                          2091  ; OUTPUT   : NONE
000020F8                          2092  ; MODIFIES : NONE
000020F8                          2093  ; ------------------------------------------------------------------------------
000020F8  48E7 C080               2094              MOVEM.L D0-D1/A0,-(A7)
000020FC                          2095                          
000020FC  4281                    2096              CLR.L   D1
000020FE  103C 0051               2097              MOVE.B  #81,D0
00002102  4E4F                    2098              TRAP    #15
00002104                          2099              
00002104  41F9 00002126           2100              LEA     .TXT1,A0
0000210A  103C 000A               2101              MOVE.B  #10,D0                  ; Enseñar pantalla game over
0000210E  4EB8 119E               2102              JSR     UTLPRINT
00002112                          2103              
00002112  41F9 00002130           2104              LEA     .TXT2,A0
00002118  103C 0014               2105              MOVE.B  #20,D0
0000211C  4EB8 119E               2106              JSR     UTLPRINT
00002120                          2107              
00002120  4CDF 0103               2108  .DONE       MOVEM.L (A7)+,D0-D1/A0
00002124                          2109  
00002124  4E75                    2110              RTS
00002126= 47 41 4D 45 20 4F ...   2111  .TXT1       DC.B    'GAME OVER',0
00002130= 57 41 49 54 20 54 ...   2112  .TXT2       DC.B    'WAIT TO RETURN TO MAIN PAGE OR PRESS KEY S',0
0000215C                          2113              DS.W    0
0000215C                          2114  
0000215C                          2115  
0000215C                          2116  
0000215C                          2117  
0000215C                          2118  
0000215C                          2119  
0000215C                          2120  
0000215C                          2121  
0000215C                          2122  
0000215C                          2123  
0000215C                          2124  
0000215C                          2125  
0000215C                          2126  
0000215C                          2127  
0000215C                          2128  
0000215C                          2129  
0000215C                          2130  
0000215C                          2131  
0000215C                          2132  
0000215C                          2133  
0000215C                          2134  -------------------- end include --------------------
0000215C                          2135              INCLUDE 'TABLE.X68'
0000215C                          2136  ; ==============================================================================
0000215C                          2137  ; TABLE SCREEN
0000215C                          2138  ; ==============================================================================
0000215C                          2139  
0000215C                          2140  ; ------------------------------------------------------------------------------
0000215C                          2141  TABINIT
0000215C                          2142  ; TABLE SCREEN INIT
0000215C                          2143  ; INPUT    : NONE
0000215C                          2144  ; OUTPUT   : NONE
0000215C                          2145  ; MODIFIES : NONE
0000215C                          2146  ; ------------------------------------------------------------------------------
0000215C                          2147  
0000215C                          2148             
0000215C  4E75                    2149              RTS
0000215E                          2150  
0000215E                          2151  ; ------------------------------------------------------------------------------
0000215E                          2152  TABUPD
0000215E                          2153  ; TABLE SCREEN UPDATE
0000215E                          2154  ; INPUT    : NONE
0000215E                          2155  ; OUTPUT   : NONE
0000215E                          2156  ; MODIFIES : NONE
0000215E                          2157  ; ------------------------------------------------------------------------------
0000215E  103C 0013               2158              MOVE.B  #19,D0                  ; Detectar teclas
00002162  7253                    2159              MOVE.L  #'S',D1                 ; Código ASCII de la tecla S
00002164  4E4F                    2160              TRAP    #15
00002166  0801 0000               2161              BTST.L  #0,D1                   ; Verificar si la tecla S está presionada
0000216A  6700 0008               2162              BEQ     END                     ; Si no está presionada, continuar
0000216E                          2163  
0000216E  4279 0000238E           2164              CLR.W (STANEXT)                 ; Cambiar STANEXT a 4 si la tecla S está presionada
00002174                          2165  
00002174                          2166  
00002174                          2167  END:
00002174                          2168             
00002174  4E75                    2169              RTS
00002176                          2170  
00002176                          2171  ; ------------------------------------------------------------------------------
00002176                          2172  TABPLOT
00002176                          2173  ; TABLE SCREEN PLOT
00002176                          2174  ; INPUT    : NONE
00002176                          2175  ; OUTPUT   : NONE
00002176                          2176  ; MODIFIES : NONE
00002176                          2177  ; ------------------------------------------------------------------------------
00002176                          2178  
00002176                          2179              
00002176  48E7 F0C0               2180              MOVEM.L D0-D3/A0-A1,-(A7)
0000217A                          2181  
0000217A  4243                    2182              CLR.W   D3                      ; Inicializar contador de partidas
0000217C                          2183              ; Cerrar todos los archivos abiertos al inicio
0000217C                          2184  
0000217C  103C 0032               2185              MOVE.B  #50,D0                  ; Cerrar todos los archivos
00002180  4E4F                    2186              TRAP    #15
00002182                          2187  
00002182                          2188              ; Abrir archivo existente
00002182  43F9 00002268           2189              LEA     .FILE,A1                ; Dirección del nombre del archivo
00002188  103C 0033               2190              MOVE.B  #51,D0                  ; Abrir archivo existente
0000218C  4E4F                    2191              TRAP    #15
0000218E  B07C 0000               2192              CMP.W   #0,D0                   ; Verificar si la operación fue exitosa
00002192  6600 F3CC               2193              BNE     ERROR                   ; Saltar a error si D0 != 0
00002196  23C1 00002390           2194              MOVE.L  D1,FILEID               ; Guardar el File-ID para operaciones posteriores
0000219C                          2195  
0000219C  4281                    2196              CLR.L   D1                      ; Limpiar acumulador para número actual
0000219E  41F9 00002395           2197              LEA     ASCBFF,A0               ; Puntero al buffer donde acumularemos el número
000021A4                          2198  
000021A4                          2199  .LEC
000021A4                          2200              ; Leer un byte del archivo
000021A4  43F9 00002394           2201              LEA     BFFLEC,A1               ; Dirección del buffer temporal para lectura
000021AA  2239 00002390           2202              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
000021B0  7401                    2203              MOVE.L  #1,D2                   ; Leer 1 byte
000021B2  103C 0035               2204              MOVE.B  #53,D0                  ; Leer archivo
000021B6  4E4F                    2205              TRAP    #15
000021B8  B07C 0001               2206              CMP.W   #1,D0                   ; Verificar si alcanzamos EOF
000021BC  6700 007C               2207              BEQ     .EOF                    ; Si D0 = 1, finalizar lectura
000021C0                          2208  
000021C0  1011                    2209              MOVE.B  (A1),D0                 ; Mover el byte leído a D0 para procesarlo
000021C2                          2210  
000021C2                          2211              ; Verificar si es marcador de fin de fichero `#`
000021C2  B03C 0023               2212              CMP.B   #'#',D0                 ; Comparar el byte leído con `#`
000021C6  6700 0072               2213              BEQ     .EOF                    ; Si es `#`, finalizar lectura
000021CA                          2214  
000021CA                          2215              ; Verificar si es delimitador de bloque `?`
000021CA  B03C 003F               2216              CMP.B   #'?',D0                 ; Comparar el byte leído con `?`
000021CE  6700 0012               2217              BEQ     .MOSTRAR_PARTIDA        ; Si es `?`, procesar el número acumulado
000021D2                          2218  
000021D2                          2219              ; Si es un número ASCII, acumular en el buffer
000021D2  B03C 0030               2220              CMP.B   #'0',D0                 ; Verificar si es un número (>= '0')
000021D6  6DCC                    2221              BLT     .LEC                    ; Si es menor, ignorar y leer el siguiente
000021D8  B03C 0039               2222              CMP.B   #'9',D0                 ; Verificar si es un número (<= '9')
000021DC  6EC6                    2223              BGT     .LEC                    ; Si es mayor, ignorar y leer el siguiente
000021DE  10C0                    2224              MOVE.B  D0,(A0)+                ; Acumular carácter en el buffer
000021E0  60C2                    2225              BRA     .LEC                    ; Continuar leyendo
000021E2                          2226  
000021E2                          2227  .MOSTRAR_PARTIDA
000021E2                          2228              ; Terminar la cadena acumulada con un NULL
000021E2  10BC 0000               2229              MOVE.B  #0,(A0)                 ; Añadir NULL al final del buffer
000021E6                          2230  
000021E6                          2231              ; Mostrar "PARTIDA : " antes del número
000021E6  43F9 00002273           2232              LEA     .TXT1,A1                ; Dirección del texto base
000021EC  103C 000E               2233              MOVE.B  #14,D0                  ; Mostrar texto sin CR, LF
000021F0  4E4F                    2234              TRAP    #15
000021F2                          2235  
000021F2                          2236              ; Convertir número del buffer de ASCII a decimal
000021F2  4281                    2237              CLR.L   D1                      ; Acumulador para el número convertido
000021F4  41F9 00002395           2238              LEA     ASCBFF,A0               ; Dirección del buffer
000021FA                          2239  .CONVERTIR
000021FA  1018                    2240              MOVE.B  (A0)+,D0                ; Leer carácter del buffer
000021FC  B03C 0000               2241              CMP.B   #0,D0                   ; Verificar si es NULL (fin de cadena)
00002200  6700 000E               2242              BEQ     .MOSTRAR_NUMERO         ; Si es NULL, ir a mostrar el número
00002204  0400 0030               2243              SUB.B   #48,D0                  ; Convertir de ASCII a decimal
00002208  C2FC 000A               2244              MULU    #10,D1                  ; Multiplicar acumulador por 10
0000220C  D240                    2245              ADD.W   D0,D1                   ; Sumar el dígito convertido
0000220E  60EA                    2246              BRA     .CONVERTIR              ; Continuar con el siguiente carácter
00002210                          2247  
00002210                          2248  .MOSTRAR_NUMERO
00002210                          2249              ; Mostrar el número convertido en D1
00002210  2001                    2250              MOVE.L  D1,D0                   ; Mover número convertido a D0
00002212  103C 000F               2251              MOVE.B  #15,D0                  ; Mostrar número en base 10
00002216  143C 000A               2252              MOVE.B  #10,D2                  ; Base 10
0000221A  4E4F                    2253              TRAP    #15
0000221C                          2254  
0000221C                          2255              ; Separar líneas
0000221C  43F9 0000227E           2256              LEA     .TXT2,A1
00002222  103C 000D               2257              MOVE.B  #13,D0                  ; Carriage return
00002226  4E4F                    2258              TRAP    #15
00002228  103C 000A               2259              MOVE.B  #10,D0                  ; Line feed
0000222C  4E4F                    2260              TRAP    #15
0000222E                          2261  
0000222E                          2262              ; Reiniciar el buffer para el siguiente número
0000222E  41F9 00002395           2263              LEA     ASCBFF,A0               ; Reiniciar puntero del buffer
00002234  5243                    2264              ADDQ.W  #1,D3                   ; Incrementar número de partida
00002236  6000 FF6C               2265              BRA     .LEC                    ; Continuar lectura
0000223A                          2266  
0000223A                          2267  .EOF
0000223A                          2268              ; Cerrar archivo
0000223A  2239 00002390           2269              MOVE.L  FILEID,D1               ; File-ID del archivo
00002240  103C 0038               2270              MOVE.B  #56,D0                  ; Tarea 56: Cerrar archivo
00002244  4E4F                    2271              TRAP    #15
00002246                          2272  
00002246  4281                    2273              CLR.L   D1
00002248  103C 0051               2274              MOVE.B  #81,D0
0000224C  4E4F                    2275              TRAP    #15
0000224E                          2276              
0000224E  41F9 0000227F           2277              LEA     .TXT3,A0
00002254  103C 0014               2278              MOVE.B  #20,D0
00002258  4EB8 119E               2279              JSR     UTLPRINT
0000225C                          2280  
0000225C                          2281  
0000225C  4CDF 030F               2282              MOVEM.L (A7)+,D0-D3/A0-A1
00002260  4E75                    2283              RTS                             ; Retornar
00002262                          2284  
00002262                          2285  .ERROR
00002262  103C 0009               2286              MOVE.B  #9,D0                   ; Terminar el programa
00002266  4E4F                    2287              TRAP    #15
00002268= 50 55 4E 54 4F 53 ...   2288  .FILE       DC.B    'PUNTOS.TXT',0          ; Nombre del archivo, null-terminated
00002273= 50 41 52 54 49 44 ...   2289  .TXT1       DC.B    'PARTIDA : ',0
0000227E= 00                      2290  .TXT2       DC.B    '',0
0000227F= 50 52 45 53 53 20 ...   2291  .TXT3       DC.B    'PRESS S TO RETURN',0
00002292                          2292              DS.W    0
00002292                          2293  
00002292                          2294  
00002292                          2295  -------------------- end include --------------------
00002292                          2296              INCLUDE 'STATES.X68'
00002292                          2297  ; =============================================================================
00002292                          2298  ; GAME STATE MANAGEMENT
00002292                          2299  ; =============================================================================
00002292                          2300  
00002292                          2301  ; -----------------------------------------------------------------------------
00002292                          2302  STAINIT
00002292                          2303  ; INITALIZES THE STATE MANAGER
00002292                          2304  ; INPUT    - NONE
00002292                          2305  ; OUTPUT   - NONE
00002292                          2306  ; MODIFIES - NONE
00002292                          2307  ; -----------------------------------------------------------------------------
00002292  33FC FFFF 0000238C      2308              MOVE.W  #STANONE,(STACUR)
0000229A  4279 0000238E           2309              CLR.W   (STANEXT)               ; Inicamos en estado 0
000022A0  4E75                    2310              RTS
000022A2                          2311  
000022A2                          2312  ; -----------------------------------------------------------------------------
000022A2                          2313  STAUPD
000022A2                          2314  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000022A2                          2315  ; INPUT    - NONE
000022A2                          2316  ; OUTPUT   - NONE
000022A2                          2317  ; MODIFIES - NONE
000022A2                          2318  ; -----------------------------------------------------------------------------
000022A2  48E7 8080               2319              MOVEM.L D0/A0,-(A7)
000022A6                          2320              
000022A6  4280                    2321              CLR.L   D0
000022A8  3039 0000238E           2322              MOVE.W  (STANEXT),D0
000022AE  B079 0000238C           2323              CMP.W   (STACUR),D0
000022B4  6700 0012               2324              BEQ     .DOUPD
000022B8  33C0 0000238C           2325              MOVE.W  D0,(STACUR)             ; Si los estados cambiar hacer init
000022BE  E588                    2326              LSL.L   #2,D0
000022C0  2040                    2327              MOVE.L  D0,A0
000022C2  2068 22E0               2328              MOVE.L  .INITBL(A0),A0
000022C6  4E90                    2329              JSR     (A0)
000022C8  4280                    2330  .DOUPD      CLR.L   D0                      ; En otro caso hacer update
000022CA  3039 0000238C           2331              MOVE.W  (STACUR),D0
000022D0  E588                    2332              LSL.L   #2,D0
000022D2  2040                    2333              MOVE.L  D0,A0
000022D4  2068 22F4               2334              MOVE.L  .UPDTBL(A0),A0
000022D8  4E90                    2335              JSR     (A0)
000022DA                          2336              
000022DA  4CDF 0101               2337              MOVEM.L (A7)+,D0/A0
000022DE  4E75                    2338              RTS
000022E0= 00001DD6 00001EF4 ...   2339  .INITBL     DC.L    ISCINIT,INSINIT,GAMINIT,GOVINIT,TABINIT
000022F4= 00001DDE 00001EFC ...   2340  .UPDTBL     DC.L    ISCUPD,INSUPD,GAMUPD,GOVUPD,TABUPD
00002308                          2341  
00002308                          2342  ; -----------------------------------------------------------------------------
00002308                          2343  STAPLOT
00002308                          2344  ; PERFORMS STATE PLOT
00002308                          2345  ; INPUT    - NONE
00002308                          2346  ; OUTPUT   - NONE
00002308                          2347  ; MODIFIES - NONE
00002308                          2348  ; -----------------------------------------------------------------------------
00002308  48E7 8080               2349              MOVEM.L D0/A0,-(A7)
0000230C  4280                    2350              CLR.L   D0
0000230E  3039 0000238C           2351              MOVE.W  (STACUR),D0
00002314  E588                    2352              LSL.L   #2,D0
00002316  2040                    2353              MOVE.L  D0,A0                   ; Saltamos a dibujar el estado correspondiente
00002318  2068 2324               2354              MOVE.L  .PLTTBL(A0),A0
0000231C  4E90                    2355              JSR     (A0)
0000231E  4CDF 0101               2356              MOVEM.L (A7)+,D0/A0
00002322  4E75                    2357              RTS
00002324= 00001E6A 00001F16 ...   2358  .PLTTBL     DC.L    ISCPLOT,INSPLOT,GAMPLOT,GOVPLOT,TABPLOT
00002338                          2359  
00002338                          2360  ; -----------------------------------------------------------------------------
00002338                          2361  STAEMPTY
00002338                          2362  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00002338                          2363  ; INPUT    - NONE
00002338                          2364  ; OUTPUT   - NONE
00002338                          2365  ; MODIFIES - NONE
00002338                          2366  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00002338                          2367  ; -----------------------------------------------------------------------------
00002338  4E75                    2368              RTS
0000233A                          2369  
0000233A                          2370  
0000233A                          2371  
0000233A                          2372  
0000233A                          2373  
0000233A                          2374  
0000233A                          2375  
0000233A                          2376  
0000233A                          2377  
0000233A                          2378  
0000233A                          2379  
0000233A                          2380  
0000233A                          2381  
0000233A                          2382  
0000233A                          2383  -------------------- end include --------------------
0000233A                          2384              
0000233A                          2385              
0000233A                          2386  START:
0000233A                          2387                  
0000233A                          2388  ; --- INIZIALIZACIÓN ---------------------------------------------------------
0000233A                          2389  
0000233A  007C 0700               2390              ORI.W   #$0700,SR
0000233E  4EB8 1000               2391              JSR     SYSINIT
00002342  4EB8 1188               2392              JSR     UTLINIT
00002346  4EB8 2292               2393              JSR     STAINIT
0000234A                          2394  
0000234A                          2395  
0000234A                          2396  .LOOP
0000234A                          2397  
0000234A                          2398  ; --- ACTUALIZAR -------------------------------------------------------------
0000234A                          2399  
0000234A                          2400  ; LEER DISPOSITIVOS DE ENTRADA
0000234A                          2401  
0000234A  4E41                    2402              TRAP    #KBDUPTN
0000234C                          2403  
0000234C                          2404  ; ACTUALIZAR LÓGICA DEL JUEGO
0000234C  4EB8 22A2               2405              JSR     STAUPD
00002350                          2406              
00002350                          2407  ; --- SINCRONIZACIÓN ---------------------------------------------------------
00002350                          2408              
00002350  4A39 000026AA           2409  .WINT       TST.B   (SCRINTCT)
00002356  67F8                    2410              BEQ     .WINT   
00002358  4239 000026AA           2411              CLR.B   (SCRINTCT)         
0000235E                          2412  
0000235E                          2413  
0000235E                          2414  ; --- DIBUJAR ----------------------------------------------------------------
0000235E                          2415              
0000235E  4EB8 2308               2416              JSR     STAPLOT            
00002362  4E40                    2417              TRAP    #SCRUPTN                      ; ACTUALIZA DOBLE BUFFER
00002364                          2418  
00002364                          2419  
00002364  60E4                    2420              BRA     .LOOP
00002366                          2421  
00002366  FFFF FFFF               2422              SIMHALT
0000236A                          2423  
0000236A                          2424              INCLUDE 'VARS.X68'
0000236A                          2425  ; ----------------------------------------------------------------------------
0000236A                          2426  ; VARIABLES DEL JUEGO
0000236A                          2427  ; ----------------------------------------------------------------------------
0000236A                          2428  
0000236A                          2429  ; --- VARIABLES DE LA MANZANA ------------------------------------------------
0000236A                          2430  
0000236A                          2431  MNZPOSX     DS.W    1                       ; COORDENADA X DE LA MANZANA
0000236C                          2432  MNZPOSY     DS.W    1                       ; COORDENADA Y DE LA MANZANA
0000236E                          2433  
0000236E                          2434  ; --- VARIABLES DE LA SERPIENTE ----------------------------------------------
0000236E                          2435  
0000236E                          2436  CBZPOSX     DS.W    1                       ; COORDENADA X CABEZA
00002370                          2437  CBZPOSY     DS.W    1                       ; COORDENADA Y CABEZA
00002372                          2438  CBZVELX     DS.W    1                       ; VELOCIDAD X CABEZA
00002374                          2439  CBZVELY     DS.W    1                       ; VELOCIDAD Y CABEZA
00002376                          2440  COLPOSX     DS.W    1                       ; COORDENADA X COLA
00002378                          2441  COLPOSY     DS.W    1                       ; COORDENADA Y COLA
0000237A                          2442  SGMPOSX     DS.W    1                       ; COORDENADA X SEGMENTO
0000237C                          2443  SGMPOSY     DS.W    1                       ; COORDENADA Y SEGMENTO
0000237E                          2444  SGMPOSX2    DS.W    1                       ; COORDENADA X SEGMENTO 2
00002380                          2445  SGMPOSY2    DS.W    1                       ; COORDENADA Y SEGMENTO 2
00002382                          2446  
00002382                          2447  ; --- VARIABLES DEL MARCADOR -------------------------------------------------
00002382                          2448  
00002382                          2449  JGOPNTS     DS.W    1                       ; PUNTUACIÓN DEL JUEGO
00002384                          2450  JGOTIM      DS.W    1                       ; TEMPORIZADOR DEL JUEGO
00002386                          2451  
00002386                          2452  ; --- INTRO STATE RELATED VARIABLES ------------------------------------------
00002386                          2453  
00002386                          2454  ISCTIMER    DS.W    1                       ; INTRO TIMER
00002388                          2455  
00002388                          2456  ; --- INSTRUCTIONS  STATE RELATED VARIABLES ----------------------------------
00002388                          2457  INSTIMER    DS.W    1                       ;INTRUCTIONS TIMER
0000238A                          2458  
0000238A                          2459  ; -- GAME OVER STATE RELATED VARIABLES ---------------------------------------
0000238A                          2460  
0000238A                          2461  GOVTIMER    DS.W    1
0000238C                          2462  
0000238C                          2463  ; --- VARIABLES RELACIONADAS CON LOS ESTADOS ---------------------------------
0000238C                          2464  
0000238C                          2465  STACUR      DS.W    1                       ; ESTADO ACTUAL
0000238E                          2466  STANEXT     DS.W    1                       ; ESTADO SIGUIENTE
00002390                          2467  
00002390                          2468  ; --- VARIABLES PARA LEER/ESCRIBIR ARCHIVOS ----------------------------------
00002390                          2469  
00002390                          2470  FILEID      DS.L    1                       ; ID DEL ARCHIVO
00002394                          2471  BFFLEC      DS.B    1                       ; BUFFER PARA LEER ARCHIVO
00002395                          2472  ASCBFF      DS.B    10                      ; BUFFER PARA CONVERTIR A ASCII
000023A0                          2473              DS.W    0
000023A0                          2474  
000023A0                          2475  
000023A0                          2476  
000023A0                          2477  
000023A0                          2478  
000023A0                          2479  
000023A0                          2480  
000023A0                          2481  
000023A0                          2482  
000023A0                          2483  
000023A0                          2484  
000023A0                          2485  
000023A0                          2486  
000023A0                          2487  
000023A0                          2488  
000023A0                          2489  
000023A0                          2490  
000023A0                          2491  
000023A0                          2492  
000023A0                          2493  
000023A0                          2494  
000023A0                          2495  -------------------- end include --------------------
000023A0                          2496              INCLUDE 'LIB/UTLVARS.X68'
000023A0                          2497  ; =============================================================================
000023A0                          2498  ; UTILITY VARIABLES
000023A0                          2499  ; =============================================================================
000023A0                          2500  
000023A0                          2501  UTLRNDIX    DS.B    1                       ; NEXT INDEX TO RANDOM NUMBER
000023A2                          2502              DS.W    0
000023A2                          2503  -------------------- end include --------------------
000023A2                          2504              INCLUDE 'SYSVARS.X68'
000023A2                          2505  ; ----------------------------------------------------------------------------
000023A2                          2506  ; VARIABLES DEL SISTEMA
000023A2                          2507  ; ----------------------------------------------------------------------------
000023A2                          2508  
000023A2                          2509  ; --- VARIABLES DE LA MATRIZ -------------------------------------------------
000023A2                          2510  
000023A2                          2511  ESTDCLDS    DS.B    TCELDAS                 ; ESTADO DE LAS CELDAS 0=VACÍO  1=COLA   2=SEGMENTO  TRZPLOT=CABEZA  4=MANZANA    
000026A2                          2512  ESTDCBZ     DS.B    1                       ; 0 = DERECHA, 1 = ARRIBA, 2 = IZQUIERDA, 3 = ABAJO
000026A3                          2513  
000026A3                          2514  ; --- VARIABLES DE TECLADO ---------------------------------------------------
000026A3                          2515  
000026A3                          2516  KBDVAL      DS.B    1
000026A4                          2517  KBDEDGE     DS.B    1                       ; KEY EDGE
000026A6                          2518  LASTKEY     DS.L    1                       
000026AA                          2519  
000026AA                          2520  ;--- TIMED INTERRUPT RELATED VARIABLES ---------------------------------------
000026AA                          2521              
000026AA                          2522  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER
000026AB                          2523  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000026AC                          2524              DS.W    0
000026AC                          2525  
000026AC                          2526  
000026AC                          2527  
000026AC                          2528  
000026AC                          2529  
000026AC                          2530  
000026AC                          2531  
000026AC                          2532  
000026AC                          2533  
000026AC                          2534  
000026AC                          2535  
000026AC                          2536  
000026AC                          2537  
000026AC                          2538  
000026AC                          2539  
000026AC                          2540  
000026AC                          2541  -------------------- end include --------------------
000026AC                          2542      
000026AC                          2543      
000026AC                          2544              END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
APPLEINIT           179A
APPLEPLOT           180A
APPLEUPD            17CC
ARR                 1162
ASCBFF              2395
BFFLEC              2394
CBZFCOL             AA00
CBZHEIGH            14
CBZOCPD             1A5E
CBZPCOL             FF00
CBZPOSX             236E
CBZPOSY             2370
CBZVEL              14
CBZVELX             2372
CBZVELY             2374
CBZWIDTH            14
CHCKUPDT            17E4
CHECK               17A6
CHECKCLD            1B08
CHKBORDE            1380
CHKCOL              13AC
CINDMTRZ            1A24
CLDFREE             1B20
CLNCLDS             19A0
CNVICOOR            1ACC
COLFCOL             AA00
COLFND              90EE90
COLHEIGH            A
COLOCPD             1AA0
COLPCOL             FF00
COLPOSX             2376
COLPOSY             2378
COLWIDTH            A
CONT                20DA
CONT:DONE           20F2
CONTINU             1182
CONVERTIR_NUMERO    1534
CONVERTIR_NUMERO:CONVERTDELO  1540
DER                 1156
DIVX                1A2C
DIVY                1A40
DONEPLOT            1DAC
DWN                 117A
END                 2174
ENDDIVX             1A3C
ENDDIVY             1A50
ENDMULTX            1AF0
ENDMULTY            1B02
ERROR               1560
ESCRIBIR_CARACTER   1508
ESTDCBZ             26A2
ESTDCLDS            23A2
FILE                1566
FILEID              2390
FIN                 152E
FINESC              1522
FINUPD              1754
FONPLOT             1B26
GAMEOVER            13FA
GAMEOVER:ABRIR_ARCHIVO  1434
GAMEOVER:BUSCAR_FINAL  1456
GAMEOVER:CREAR_ARCHIVO  1494
GAMEOVER:ESCRIBIR   14AC
GAMEOVER:ESCRIBIR_BUCLE  14C0
GAMEOVER:ESCRIBIR_FIN_BLOQUE  14EC
GAMEOVER:POSICIONAR  1482
GAMINIT             194E
GAMPLOT             1978
GAMUPD              1968
GENPOSMNZ           1888
GOVINIT             20B8
GOVPLOT             20F8
GOVPLOT:DONE        2120
GOVPLOT:TXT1        2126
GOVPLOT:TXT2        2130
GOVTIMER            238A
GOVUPD              20C0
HEADINIT            12EE
HEADPLOT            1576
HEADUPD             130E
INSINIT             1EF4
INSMAXTM            1F4
INSPLOT             1F16
INSPLOT:DONE        1F32
INSPLOT:LOOP        1F24
INSPLOT:TXT1        1F38
INSPLOT:TXT2        1F62
INSPLOT:TXT3        1FAA
INSPLOT:TXT4        1FDB
INSPLOT:TXT5        2007
INSPLOT:TXT6        2022
INSPLOT:TXT7        2068
INSPLOT:TXTLST      2098
INSTIMER            2388
INSUPD              1EFC
INSUPD:DONE         1F14
ISCINIT             1DD6
ISCMAXTM            1F4
ISCPLOT             1E6A
ISCPLOT:DONE        1EA8
ISCPLOT:TXT1        1EAE
ISCPLOT:TXT2        1EC0
ISCPLOT:TXT3        1ED4
ISCTIMER            2386
ISCUPD              1DDE
ISCUPD:CONT         1E32
ISCUPD:DONE         1E64
ISCUPD:END          1E4A
ISCUPD:MAINLOOP     1DEC
IZQ                 116E
JGOPNTS             2382
JGOTIM              2384
KBDDOWN             28
KBDEDGE             26A4
KBDINIT             1106
KBDLEFT             25
KBDRIGHT            27
KBDUP               26
KBDUPD              1114
KBDUPTN             1
KBDVAL              26A3
LASTKEY             26A6
LNGINI              1
MARKMNZ             17BE
MAXSGM              1
MCLDVCIA            1A74
MNZFCOL             FF
MNZHEIGH            14
MNZOCPD             1AB6
MNZPCOL             AAFF
MNZPOSX             236A
MNZPOSY             236C
MNZWIDTH            14
MTZINIT             1992
MTZPLOT             1D68
MTZUPD              1B64
MTZUPD:ABRIR_ARCHIVO  1C26
MTZUPD:BUSCAR_FINAL  1C48
MTZUPD:CLNCLDS      1B72
MTZUPD:CONVERTDELO  1D32
MTZUPD:CONVERTIR_NUMERO  1D26
MTZUPD:CREAR_ARCHIVO  1C86
MTZUPD:ERROR        1D52
MTZUPD:ESCRIBIR     1C9E
MTZUPD:ESCRIBIR_BUCLE  1CB2
MTZUPD:ESCRIBIR_CARACTER  1CFA
MTZUPD:ESCRIBIR_FIN_BLOQUE  1CDE
MTZUPD:FILE         1D58
MTZUPD:FIN          1D20
MTZUPD:FINESC       1D14
MTZUPD:GAMEOVER     1BF2
MTZUPD:POSICIONAR   1C74
MTZUPD:TXT1         1D63
MTZUPD:TXT2         1D65
MULTLOOPX           1AE2
MULTLOOPY           1AF4
NEWMNZ              17FC
NOCOL               13DE
NUMCLMNS            20
NUMFILAS            18
OJOFCOL             FFFFFF
OJOHEIGH            A
OJOPCOL             0
OJOWIDTH            A
PANHEIGH            1E0
PANWIDTH            280
PLOTAPPLE           1DD0
PLOTCBZ             1DB8
PLOTCLDS            1D82
PLOTCOL             1DC4
PLOTSEG             1DCA
PLOTVAC             1DBE
PNTSFCOL            0
PNTSTEXT            65
SCOINIT             18BA
SCOPLOT             18EA
SCOPLOT:TXT1        193A
SCOPLOT:TXT2        1944
SCOUPD              18D0
SCRCYCCT            26AB
SCRFPS              32
SCRINIT             109A
SCRINTCT            26AA
SCRINTN             1
SCRPLOT             10EC
SCRTIM              10DE
SCRUPTN             0
SEGINIT             15FA
SEGPLOT             16BA
SEGUPD              1628
SGMFCOL             AA00
SGMHEIGH            14
SGMOCPD             1A8A
SGMPCOL             FF00
SGMPOSX             237A
SGMPOSX2            237E
SGMPOSY             237C
SGMPOSY2            2380
SGMWIDTH            14
SIGABA              1378
SIGARR              1360
SIGDER              1354
SIGIZQ              136C
SIZECLDA            14
SNDEAT              0
SNDGMOV             1
SNDINIT             103A
SNDINIT:DONE        1058
SNDINIT:LOOP        1046
SNDINIT:SNDEAT      105E
SNDINIT:SNDGMOV     106A
SNDINIT:SNDLIST     107C
SNDPLAY             1088
SNDPLTN             2
STACUR              238C
STAEMPTY            2338
STAINIT             2292
STANEXT             238E
STANONE             FFFFFFFF
STAPLOT             2308
STAPLOT:PLTTBL      2324
START               233A
START:LOOP          234A
START:WINT          2350
STAUPD              22A2
STAUPD:DOUPD        22C8
STAUPD:INITBL       22E0
STAUPD:UPDTBL       22F4
SYSINIT             1000
TABINIT             215C
TABPLOT             2176
TABPLOT:CONVERTIR   21FA
TABPLOT:EOF         223A
TABPLOT:ERROR       2262
TABPLOT:FILE        2268
TABPLOT:LEC         21A4
TABPLOT:MOSTRAR_NUMERO  2210
TABPLOT:MOSTRAR_PARTIDA  21E2
TABPLOT:TXT1        2273
TABPLOT:TXT2        227E
TABPLOT:TXT3        227F
TABUPD              215E
TAILINIT            16FA
TAILPLOT            175A
TAILUPD             170C
TCELDAS             300
TXT1                1571
TXT2                1573
UTLCHRWD            8
UTLINIT             1188
UTLPRINT            119E
UTLPRINT:ENDLOOP    11B0
UTLPRINT:LOOP       11A6
UTLRAND             11D0
UTLRAND:RANDVEC     11EE
UTLRNDIX            23A0
