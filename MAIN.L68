00002340 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 08/01/2025 13:02:02

00000000                             1  *-----------------------------------------------------------------------------
00000000                             2  * Title      : MAIN
00000000                             3  * Written by : Maria Kupriyenko Chupaida y Joan Jiménez Rigo
00000000                             4  * Date       : 10/1/2025
00000000                             5  * Description: SNAKE TIMER GAME
00000000                             6  *-----------------------------------------------------------------------------
00000000                             7  
00001000                             8              ORG    $1000
00001000                             9              
00001000                            10              INCLUDE 'CONST.X68'
00001000                            11  ; ----------------------------------------------------------------------------
00001000                            12  ; CONSTANTES DEL JUEGO
00001000                            13  ; ----------------------------------------------------------------------------
00001000                            14     
00001000                            15  ; --- CONSTANTES DE LA MANZANA -----------------------------------------------
00001000                            16  
00001000  =00000014                 17  MNZWIDTH    EQU     20                      ; Anchura de la manzana
00001000  =00000014                 18  MNZHEIGH    EQU     20                      ; Altura de la manzana
00001000  =0000AAFF                 19  MNZPCOL     EQU     $0000AAFF               ; Color contorno de la manzana
00001000  =000000FF                 20  MNZFCOL     EQU     $000000FF               ; Color relleno de la manzana
00001000                            21  
00001000                            22  ; --- CONSTANTES DE LA SERPIENTE ---------------------------------------------
00001000                            23  
00001000  =00000014                 24  CBZVEL      EQU     20                      ; Velocidad de la cabeza
00001000  =00000014                 25  SGMWIDTH    EQU     20                      ; Anchura de un segmento
00001000  =00000014                 26  SGMHEIGH    EQU     20                      ; Altura de un segmento
00001000  =0000FF00                 27  SGMPCOL     EQU     $0000FF00               ; Color controrno de segmento
00001000  =0000AA00                 28  SGMFCOL     EQU     $0000AA00               ; Color relleno de segmento
00001000  =0000000A                 29  COLWIDTH    EQU     10                      ; Anchura de la cola
00001000  =0000000A                 30  COLHEIGH    EQU     10                      ; Altura de la cola
00001000  =0000FF00                 31  COLPCOL     EQU     $0000FF00               ; Color contorno de la cola
00001000  =0000AA00                 32  COLFCOL     EQU     $0000AA00               ; Color relleno de la cola
00001000  =00000014                 33  CBZWIDTH    EQU     20                      ; Anchura de la cabeza
00001000  =00000014                 34  CBZHEIGH    EQU     20                      ; Altura de la cabeza
00001000  =0000FF00                 35  CBZPCOL     EQU     $0000FF00               ; Color contorno de la cabeza
00001000  =0000AA00                 36  CBZFCOL     EQU     $0000AA00               ; Color relleno de la cabeza
00001000  =0000000A                 37  OJOWIDTH    EQU     10                      ; Anchura ojo de serpiente
00001000  =0000000A                 38  OJOHEIGH    EQU     10                      ; Altura ojo de serpiente
00001000  =00000000                 39  OJOPCOL     EQU     $00000000               ; Color contorno del ojo
00001000  =00FFFFFF                 40  OJOFCOL     EQU     $00FFFFFF               ; Color relleno del ojo
00001000                            41  
00001000                            42  ; --- CONSTANTES MARCADOR ----------------------------------------------------
00001000                            43  
00001000  =00000000                 44  PNTSFCOL    EQU     $00000000               ; Color fondo marcador
00001000  =00000065                 45  PNTSTEXT    EQU     0101                    ; Coordenadas del marcador
00001000                            46  
00001000                            47  ; --- CONSTANTES RELACIONADAS CON LOS ESTADOS --------------------------------
00001000                            48  
00001000  =FFFFFFFF                 49  STANONE     EQU     -1                      ; Número de estado no existente
00001000  =000001F4                 50  ISCMAXTM    EQU     500                     ; Ciclos de espera de la intro
00001000  =000001F4                 51  INSMAXTM    EQU     500                     ; Ciclos de espera de las instr
00001000                            52  
00001000                            53  
00001000                            54  
00001000                            55  
00001000                            56  
00001000                            57  
00001000                            58  
00001000                            59  
00001000                            60  -------------------- end include --------------------
00001000                            61              INCLUDE 'SYSCONST.X68'
00001000                            62  ; ----------------------------------------------------------------------------
00001000                            63  ; CONSTANTES DEL SISTEMA
00001000                            64  ; ----------------------------------------------------------------------------
00001000                            65  
00001000                            66  ; --- CONSTANTES DE LA PANTALLA ----------------------------------------------
00001000                            67  
00001000  =00000280                 68  PANWIDTH    EQU     640                     ; Ancho de la pantalla
00001000  =000001E0                 69  PANHEIGH    EQU     480                     ; Altura de la pantalla
00001000  =0090EE90                 70  COLFND      EQU     $90EE90                 ; Color fondo de la pantalla
00001000  =00000046                 71  SCRFPS      EQU     70
00001000                            72  
00001000                            73  ; --- CONSTANTES DE LA MATRIZ ------------------------------------------------
00001000                            74  
00001000  =00000014                 75  SIZECLDA    EQU     20                      ; Tamaño de una celda en pixeles
00001000  =00000020                 76  NUMCLMNS    EQU     32                      ; Columnas de celdas
00001000  =00000018                 77  NUMFILAS    EQU     24                      ; Filas de celdas
00001000  =00000300                 78  TCELDAS     EQU     768                     ; Total de celdas
00001000                            79  
00001000                            80  ; --- CÓDIGOS DE TECLADO -----------------------------------------------------
00001000                            81  
00001000  =00000025                 82  KBDLEFT     EQU     $25
00001000  =00000026                 83  KBDUP       EQU     $26
00001000  =00000027                 84  KBDRIGHT    EQU     $27
00001000  =00000028                 85  KBDDOWN     EQU     $28
00001000                            86  
00001000                            87  ; --- IDENTIFICADORES DE SONIDO ----------------------------------------------
00001000                            88  
00001000  =00000000                 89  SNDEAT      EQU     0
00001000  =00000001                 90  SNDGMOV     EQU     1
00001000                            91  
00001000                            92  ; --- NÚMEROS DE TRAP --------------------------------------------------------
00001000                            93  
00001000  =00000000                 94  SCRUPTN     EQU     0                       ; Actualización de pantalla
00001000  =00000001                 95  KBDUPTN     EQU     1                       ; Número de trap del teclado
00001000  =00000002                 96  SNDPLTN     EQU     2                       ; Número de trap del sonido
00001000                            97  
00001000                            98  ; --- NÚMEROS DE INTERRUPCIÓN ------------------------------------------------
00001000                            99  
00001000  =00000001                100  SCRINTN     EQU     1     
00001000                           101  
00001000                           102  
00001000                           103  
00001000                           104  
00001000                           105  
00001000                           106  
00001000                           107  
00001000                           108  
00001000                           109  
00001000                           110  -------------------- end include --------------------
00001000                           111              INCLUDE 'SYSTEM.X68'
00001000                           112   
00001000                           113  ; ----------------------------------------------------------------------------
00001000                           114  SYSINIT
00001000                           115  ; Inicia el sistema
00001000                           116  ; INPUT    : NONE
00001000                           117  ; OUTPUT   : NONE
00001000                           118  ; MODIFIES : NONE
00001000                           119  ; ----------------------------------------------------------------------------
00001000                           120              
00001000  21FC 000010EC 0080       121              MOVE.L  #SCRPLOT,($80+SCRUPTN*4)
00001008  21FC 00001114 0084       122              MOVE.L  #KBDUPD,($80+KBDUPTN*4)
00001010  21FC 00001088 0088       123              MOVE.L  #SNDPLAY,($80+SNDPLTN*4)
00001018  21FC 000010DE 0064       124              MOVE.L  #SCRTIM,($60+SCRINTN*4)
00001020                           125              
00001020  4EB9 0000109A            126              JSR     SCRINIT                 ; Inicializamos las interrupciones
00001026  4EB9 00001106            127              JSR     KBDINIT
0000102C  4EB9 0000103A            128              JSR     SNDINIT
00001032                           129              
00001032  40E7                     130              MOVE.W  SR,-(A7)
00001034  0257 D8FF                131              ANDI.W  #$D8FF,(A7)             ; Pasamos a modo usuario
00001038                           132              
00001038  4E73                     133              RTE
0000103A                           134              
0000103A                           135  ; ----------------------------------------------------------------------------
0000103A                           136  SNDINIT
0000103A                           137  ; Inicializa el sonido del sistema
0000103A                           138  ; INPUT    : NONE
0000103A                           139  ; OUTPUT   : NONE
0000103A                           140  ; MODIFIES : NONE
0000103A                           141  ; ----------------------------------------------------------------------------
0000103A                           142  
0000103A  48E7 C0C0                143              MOVEM.L D0-D1/A0-A1,-(A7)
0000103E                           144  
0000103E  4201                     145              CLR.B   D1
00001040  41F9 0000107C            146              LEA     .SNDLIST,A0
00001046  2018                     147  .LOOP       MOVE.L  (A0)+,D0
00001048  6700 000E                148              BEQ     .DONE
0000104C  2240                     149              MOVE.L  D0,A1
0000104E  103C 0047                150              MOVE.B  #71,D0
00001052  4E4F                     151              TRAP    #15                     ; Inicializamos los sonidos
00001054  5201                     152              ADDQ.B  #1,D1
00001056  60EE                     153              BRA     .LOOP
00001058                           154              
00001058  4CDF 0303                155  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
0000105C  4E75                     156              RTS
0000105E                           157              
0000105E= 53 4E 44 2F 45 41 ...    158  .SNDEAT     DC.B    'SND/EAT.wav',0
0000106A= 53 4E 44 2F 47 41 ...    159  .SNDGMOV    DC.B    'SND/GAMEOVER.wav',0
0000107C= 0000105E 0000106A ...    160  .SNDLIST    DC.L    .SNDEAT,.SNDGMOV,0
00001088                           161              
00001088                           162  ; ----------------------------------------------------------------------------
00001088                           163  SNDPLAY
00001088                           164  ; Play sonido
00001088                           165  ; INPUT    : D7 sonido ID
00001088                           166  ; OUTPUT   : NONE
00001088                           167  ; MODIFIES : NONE
00001088                           168  ; ----------------------------------------------------------------------------            
00001088                           169              
00001088  48A7 C000                170              MOVEM.W D0-D1,-(A7)
0000108C                           171              
0000108C  103C 0048                172              MOVE.B  #72,D0                  ; Hacemos sonar el sonido
00001090  1207                     173              MOVE.B  D7,D1
00001092  4E4F                     174              TRAP    #15
00001094                           175              
00001094  4C9F 0003                176              MOVEM.W (A7)+,D0-D1
00001098  4E73                     177              RTE
0000109A                           178               
0000109A                           179              
0000109A                           180  ; ----------------------------------------------------------------------------
0000109A                           181  SCRINIT
0000109A                           182  ; Inicializa la pantalla
0000109A                           183  ; INPUT    : NONE
0000109A                           184  ; OUTPUT   : NONE
0000109A                           185  ; MODIFIES : NONE
0000109A                           186  ; ----------------------------------------------------------------------------
0000109A                           187  
0000109A  48E7 C000                188              MOVEM.L D0-D1,-(A7)
0000109E                           189  
0000109E                           190              ; Establece la resolución de la pantalla
0000109E  103C 0021                191              MOVE.B  #33,D0
000010A2  223C 028001E0            192              MOVE.L  #PANWIDTH<<16|PANHEIGH,D1
000010A8  4E4F                     193              TRAP    #15
000010AA                           194              
000010AA                           195              ; Establece modo ventana
000010AA  7201                     196              MOVE.L  #1,D1
000010AC  4E4F                     197              TRAP    #15
000010AE                           198              
000010AE                           199              ; Limpia la pantalla
000010AE  103C 000B                200              MOVE.B  #11,D0
000010B2  323C FF00                201              MOVE.W  #$FF00,D1
000010B6  4E4F                     202              TRAP    #15
000010B8                           203              
000010B8                           204              ; Habilita doble buffer
000010B8  103C 005C                205              MOVE.B  #92,D0
000010BC  123C 0011                206              MOVE.B  #17,D1
000010C0  4E4F                     207              TRAP    #15
000010C2                           208              
000010C2                           209              ; Habilita la temporización de las interrupciones
000010C2  103C 0020                210              MOVE.B  #32,D0
000010C6  123C 0006                211              MOVE.B  #6,D1
000010CA  143C 0081                212              MOVE.B  #$80|SCRINTN,D2
000010CE  760E                     213              MOVE.L  #1000/SCRFPS,D3        ; Ponemos los FPS segun SCRFPS
000010D0  4E4F                     214              TRAP    #15
000010D2                           215              
000010D2                           216              ; Limpia el contador de interrupciones
000010D2  4279 000026B0            217              CLR.W   (SCRINTCT)
000010D8                           218              
000010D8  4CDF 0003                219              MOVEM.L (A7)+,D0-D1
000010DC                           220              
000010DC  4E75                     221              RTS    
000010DE                           222              
000010DE                           223  ; ------------------------------------------------------------------------------
000010DE                           224  SCRTIM
000010DE                           225  ; Rutina de servicio de interrupción temporizada
000010DE                           226  ; INPUT    : NONE
000010DE                           227  ; OUTPUT   : NONE
000010DE                           228  ; MODIFIES : NONE
000010DE                           229  ; ------------------------------------------------------------------------------
000010DE  5239 000026B0            230              ADDQ.B  #1,(SCRINTCT)
000010E4  5239 000026B1            231              ADDQ.B  #1,(SCRCYCCT)           ; Actualizamos timer
000010EA  4E73                     232              RTE
000010EC                           233              
000010EC                           234  
000010EC                           235  ; ------------------------------------------------------------------------------
000010EC                           236  SCRPLOT
000010EC                           237  ; Actualiza el doble buffer
000010EC                           238  ; INPUT    : NONE
000010EC                           239  ; OUTPUT   : NONE
000010EC                           240  ; MODIFIES : NONE
000010EC                           241  ; ------------------------------------------------------------------------------
000010EC                           242  
000010EC  48A7 C000                243              MOVEM.W D0-D1,-(A7)
000010F0                           244              
000010F0                           245              ; Cambia los buffers
000010F0  103C 005E                246              MOVE.B  #94,D0
000010F4  4E4F                     247              TRAP    #15
000010F6                           248              
000010F6                           249              ; Limpia el buffer escondido
000010F6  103C 000B                250              MOVE.B  #11,D0
000010FA  323C FF00                251              MOVE.W  #$FF00,D1
000010FE  4E4F                     252              TRAP    #15
00001100                           253              
00001100  4C9F 0003                254              MOVEM.W (A7)+,D0-D1
00001104                           255              
00001104  4E73                     256              RTE
00001106                           257          
00001106                           258  ; ----------------------------------------------------------------------------
00001106                           259  KBDINIT
00001106                           260  ; Inicializa el teclado
00001106                           261  ; INPUT    : NONE
00001106                           262  ; OUTPUT   : NONE
00001106                           263  ; MODIFIES : NONE
00001106                           264  ; ----------------------------------------------------------------------------
00001106                           265  
00001106  4239 000026A9            266              CLR.B   (KBDVAL)
0000110C  4239 000026AA            267              CLR.B   (KBDEDGE)             ; Reseteamos los valores del teclado
00001112  4E75                     268              RTS
00001114                           269  
00001114                           270  ; ----------------------------------------------------------------------------
00001114                           271  KBDUPD
00001114                           272  ; Actualiza la info del teclado
00001114                           273  ; INPUT    : NONE
00001114                           274  ; OUTPUT   : NONE
00001114                           275  ; MODIFIES : NONE
00001114                           276  ; ----------------------------------------------------------------------------
00001114                           277  
00001114  48E7 C000                278              MOVEM.L D0-D1,-(A7)
00001118                           279  
00001118                           280              ; Lee el estado del teclado
00001118  103C 0013                281              MOVE.B  #19,D0
0000111C  223C 25262728            282              MOVE.L  #KBDLEFT<<24|KBDUP<<16|KBDRIGHT<<8|KBDDOWN,D1
00001122  4E4F                     283              TRAP    #15                     ; Lee las teclas y guarda en D1
00001124                           284              
00001124  23C1 000026AA            285              MOVE.L  D1,(KBDEDGE)
0000112A                           286  
0000112A  B2BC 000000FF            287              CMP.L   #$000000FF,D1
00001130  6700 0048                288              BEQ     DWN
00001134  B2BC 0000FF00            289              CMP.L   #$0000FF00,D1
0000113A  6700 001A                290              BEQ     DER
0000113E  B2BC 00FF0000            291              CMP.L   #$00FF0000,D1
00001144  6700 001C                292              BEQ     ARR
00001148  B2BC FF000000            293              CMP.L   #$FF000000,D1
0000114E  6700 001E                294              BEQ     IZQ
00001152                           295  
00001152                           296              ; Si no hay pulsaciones, mantiene el estado
00001152  6000 002E                297              BRA     CONTINU
00001156                           298  
00001156  33FC 0000 000026A8       299  DER:        MOVE.W  #0,(ESTDCBZ)           ; Actualiza estado a DERECHA
0000115E  6000 0022                300              BRA     CONTINU
00001162                           301              
00001162  33FC 0001 000026A8       302  ARR:        MOVE.W  #1,(ESTDCBZ)           ; Actualiza estado a ARRIBA
0000116A  6000 0016                303              BRA     CONTINU
0000116E                           304  
0000116E  33FC 0002 000026A8       305  IZQ:        MOVE.W  #2,(ESTDCBZ)           ; Actualiza estado a IZQUIERDA
00001176  6000 000A                306              BRA     CONTINU                    
0000117A                           307  
0000117A  33FC 0003 000026A8       308  DWN:        MOVE.W  #3,(ESTDCBZ)           ; Actualiza estado a ABAJO
00001182                           309  
00001182                           310  CONTINU:
00001182  4CDF 0003                311              MOVEM.L (A7)+,D0-D1
00001186  4E73                     312              RTE
00001188                           313   
00001188                           314  
00001188                           315  
00001188                           316  -------------------- end include --------------------
00001188                           317              INCLUDE 'LIB/UTLCODE.X68'
00001188                           318  ; =============================================================================
00001188                           319  ; UTILITY CODE
00001188                           320  ; =============================================================================
00001188                           321  
00001188                           322  ; -----------------------------------------------------------------------------
00001188                           323  UTLINIT
00001188                           324  ; INITIALIZES UTILITY CODE
00001188                           325  ; INPUT    - NONE
00001188                           326  ; OUTPUT   - NONE
00001188                           327  ; MODIFIES - NONE
00001188                           328  ; -----------------------------------------------------------------------------
00001188  48E7 C000                329              MOVEM.L D0-D1,-(A7)
0000118C  103C 0008                330              MOVE.B  #8,D0
00001190  4E4F                     331              TRAP    #15
00001192  13C1 000023A6            332              MOVE.B  D1,(UTLRNDIX)
00001198  4CDF 0003                333              MOVEM.L (A7)+,D0-D1
0000119C  4E75                     334              RTS
0000119E                           335  
0000119E                           336  
0000119E                           337  ; -----------------------------------------------------------------------------
0000119E                           338  UTLPRINT
0000119E                           339  ; PRINT SCREEN CENTERED TEXT
0000119E                           340  ; INPUT    : A0 POINTER TO ZERO-TERMINATED STRING
0000119E                           341  ;            D0.B SCREEN ROW TO PRINT TEXT
0000119E                           342  ; OUTPUT   : D0.B NEXT ROW
0000119E                           343  ; MODIFIES : NONE (ASIDE OF OUTPUT)
0000119E                           344  ; -----------------------------------------------------------------------------
0000119E  48E7 C0C0                345              MOVEM.L D0-D1/A0-A1,-(A7)
000011A2  4201                     346              CLR.B   D1
000011A4  2248                     347              MOVE.L  A0,A1
000011A6  4A18                     348  .LOOP       TST.B   (A0)+
000011A8  6700 0006                349              BEQ     .ENDLOOP
000011AC  5201                     350              ADDQ.B  #1,D1
000011AE  60F6                     351              BRA     .LOOP
000011B0  E209                     352  .ENDLOOP    LSR.B   #1,D1
000011B2  0401 0028                353              SUB.B   #(PANWIDTH/UTLCHRWD)/2,D1
000011B6  4401                     354              NEG.B   D1
000011B8  E141                     355              ASL.W   #8,D1
000011BA  8240                     356              OR.W    D0,D1
000011BC  103C 000B                357              MOVE.B  #11,D0
000011C0  4E4F                     358              TRAP    #15
000011C2  103C 000D                359              MOVE.B  #13,D0
000011C6  4E4F                     360              TRAP    #15
000011C8  4CDF 0303                361              MOVEM.L (A7)+,D0-D1/A0-A1
000011CC  5200                     362              ADDQ.B  #1,D0
000011CE  4E75                     363              RTS
000011D0                           364              
000011D0                           365              
000011D0                           366  
000011D0                           367  
000011D0                           368              ; (SCRWIDTH/UTLCHRWD)/2 - D1/2
000011D0                           369  
000011D0                           370  ; -----------------------------------------------------------------------------
000011D0                           371  UTLRAND
000011D0                           372  ; PROVIDES A PSEUDO-RANDOM BYTE
000011D0                           373  ; INPUT    - NONE
000011D0                           374  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
000011D0                           375  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011D0                           376  ; -----------------------------------------------------------------------------
000011D0  2F08                     377              MOVE.L  A0,-(A7)
000011D2  41F9 000011EE            378              LEA     .RANDVEC,A0
000011D8  4280                     379              CLR.L   D0
000011DA  1039 000023A6            380              MOVE.B  (UTLRNDIX),D0
000011E0  1030 0800                381              MOVE.B  (A0,D0.L),D0
000011E4  5239 000023A6            382              ADDQ.B  #1,(UTLRNDIX)
000011EA  205F                     383              MOVE.L  (A7)+,A0
000011EC  4E75                     384              RTS
000011EE                           385  
000011EE                           386  
000011EE= A2 EE 9A 0C F5 24 ...    387  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
000011F6= 2A A3 51 26 E0 AC ...    388              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
000011FE= 75 51 CA FD 33 EB ...    389              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001206= 60 CC E7 B8 9A EB ...    390              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
0000120E= 1D 76 B5 95 B0 89 ...    391              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001216= 39 15 48 C9 6E CA ...    392              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
0000121E= 43 E7 E2 7C 37 25 ...    393              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
00001226= E9 94 CE E9 E4 52 ...    394              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
0000122E= 37 6D 9A 84 A2 28 ...    395              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
00001236= 19 E2 C6 77 80 D4 ...    396              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
0000123E= 0A 5A 32 67 33 C2 ...    397              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
00001246= 59 80 DC 0E 57 FC ...    398              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
0000124E= 8A AB BC F7 07 4D ...    399              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
00001256= EF D5 77 6E 1E BB ...    400              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
0000125E= D6 E0 2A 8F BD 28 ...    401              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
00001266= 13 4F 66 EC 0A 64 ...    402              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
0000126E= 56 52 9A 16 9B 90 ...    403              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
00001276= 06 8A A4 F7 01 DA ...    404              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
0000127E= F2 E7 77 28 B1 76 ...    405              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
00001286= A4 42 E3 81 B1 67 ...    406              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
0000128E= BF CE FA 16 BF 38 ...    407              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
00001296= D1 8B 50 0C 5F 49 ...    408              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
0000129E= DE 4C 14 A2 40 DC ...    409              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
000012A6= B6 9B 0A 38 5D AB ...    410              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
000012AE= E2 1B DD 75 15 82 ...    411              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
000012B6= 8A 26 51 30 9F 47 ...    412              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
000012BE= 1E 8A BB 71 C6 6E ...    413              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
000012C6= 9F 47 E5 34 94 27 ...    414              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
000012CE= 7D 06 D6 BA 30 0F ...    415              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
000012D6= EC 7F 7E 03 CF 2D ...    416              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
000012DE= 94 5B 23 F2 8B CD ...    417              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
000012E6= 74 33 EC B9 0F D5 ...    418              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
000012EE                           419  
000012EE                           420  
000012EE                           421  -------------------- end include --------------------
000012EE                           422              INCLUDE 'LIB/UTLCONST.X68'
000012EE                           423  ; ==============================================================================
000012EE                           424  ; UTIL CONSTANTS
000012EE                           425  ; ==============================================================================
000012EE                           426  
000012EE  =00000008                427  UTLCHRWD    EQU     8                       ; CHARACTER WIDTH IN PIXELS
000012EE  =00000008                428  -------------------- end include --------------------
000012EE                           429              INCLUDE 'HEADSRP.X68'
000012EE                           430  
000012EE                           431  ; ----------------------------------------------------------------------------
000012EE                           432  HEADINIT
000012EE                           433  ; Inicializa la cabeza
000012EE                           434  ; INPUT    : NONE 
000012EE                           435  ; OUTPUT   : NONE
000012EE                           436  ; MODIFIES : ESTDCBZ
000012EE                           437  ; ----------------------------------------------------------------------------
000012EE  33FC 0140 00002374       438              MOVE.W  #PANWIDTH/2,(CBZPOSX)
000012F6  33FC 00F0 00002376       439              MOVE.W  #PANHEIGH/2,(CBZPOSY)
000012FE  4279 000026A8            440              CLR.W   (ESTDCBZ)            ; Inicializar la cabeza en el centro
00001304  33FC 0000 000026A8       441              MOVE.W  #0,(ESTDCBZ)
0000130C  4E75                     442              RTS
0000130E                           443              
0000130E                           444  ; ----------------------------------------------------------------------------
0000130E                           445  HEADUPD
0000130E                           446  ; Actualiza la cabeza
0000130E                           447  ; INPUT    : NONE 
0000130E                           448  ; OUTPUT   : Sonidos de comer y game over
0000130E                           449  ; MODIFIES : Posiciones de la cabeza, posición de la manzana, STANEXT,
0000130E                           450  ;            fichero de puntuaciones
0000130E                           451  ; ----------------------------------------------------------------------------
0000130E                           452  
0000130E  48E7 F1C0                453              MOVEM.L D0-D3/D7/A0-A1,-(A7)
00001312                           454  
00001312                           455              ; Marca la celda actual como vacía
00001312  3239 00002374            456              MOVE.W  (CBZPOSX),D1
00001318  3439 00002376            457              MOVE.W  (CBZPOSY),D2
0000131E  4EB9 00001A24            458              JSR     CINDMTRZ
00001324  4EB9 00001A74            459              JSR     MCLDVCIA
0000132A                           460              
0000132A                           461              ; Actualiza la posición de la cabeza según ESTDCBZ
0000132A  3039 000026A8            462              MOVE.W  (ESTDCBZ),D0
00001330  B07C 0000                463              CMP.W   #0,D0
00001334  6700 001E                464              BEQ     SIGDER
00001338  B07C 0001                465              CMP.W   #1,D0
0000133C  6700 0022                466              BEQ     SIGARR
00001340  B07C 0002                467              CMP.W   #2,D0
00001344  6700 0026                468              BEQ     SIGIZQ
00001348  B07C 0003                469              CMP.W   #3,D0
0000134C  6700 002A                470              BEQ     SIGABA
00001350                           471  
00001350                           472              ; Si no hay dirección válida, sale
00001350  6000 01DC                473              BRA     FIN
00001354                           474  
00001354                           475              ; Mueve la cabeza
00001354                           476  SIGDER:
00001354  0679 0014 00002374       477              ADD.W   #CBZVEL,(CBZPOSX)
0000135C  6000 0022                478              BRA     CHKBORDE
00001360                           479  
00001360                           480  SIGARR:
00001360  0479 0014 00002376       481              SUB.W   #CBZVEL,(CBZPOSY)
00001368  6000 0016                482              BRA     CHKBORDE
0000136C                           483  
0000136C                           484  SIGIZQ:
0000136C  0479 0014 00002374       485              SUB.W   #CBZVEL,(CBZPOSX)
00001374  6000 000A                486              BRA     CHKBORDE
00001378                           487  
00001378                           488  SIGABA:
00001378  0679 0014 00002376       489              ADD.W   #CBZVEL,(CBZPOSY)
00001380                           490              
00001380                           491  CHKBORDE:
00001380                           492              ; Verifica las colisiones con los bordes
00001380  3239 00002374            493              MOVE.W  (CBZPOSX),D1
00001386  B27C 0280                494              CMP.W   #PANWIDTH,D1            ; Si CBZPOSX < 0
0000138A  6E00 006E                495              BGT     GAMEOVER
0000138E  B27C 0000                496              CMP.W   #0,D1                   ; Si CBZPOSX >= PANWIDTH
00001392  6D00 0066                497              BLT     GAMEOVER
00001396                           498  
00001396  3239 00002376            499              MOVE.W  (CBZPOSY),D1
0000139C  B27C 0000                500              CMP.W   #0,D1                   ; Si CBZPOSY < 0
000013A0  6D00 0058                501              BLT     GAMEOVER
000013A4  B27C 01E0                502              CMP.W   #PANHEIGH,D1            ; Si CBZPOSY >= PANHEIGH
000013A8  6E00 0050                503              BGT     GAMEOVER
000013AC                           504  
000013AC                           505                          
000013AC                           506  CHKCOL:
000013AC                           507              ; Verifica la colisión con la manzana
000013AC  3239 00002374            508              MOVE.W  (CBZPOSX),D1
000013B2  3439 00002376            509              MOVE.W  (CBZPOSY),D2
000013B8  B279 00002370            510              CMP.W   (MNZPOSX),D1
000013BE  6600 001E                511              BNE     NOCOL
000013C2  B479 00002372            512              CMP.W   (MNZPOSY),D2
000013C8  6600 0014                513              BNE     NOCOL
000013CC                           514              
000013CC                           515              ; Colisión detectada
000013CC  4EB9 000017CC            516              JSR     APPLEUPD
000013D2  4EB9 000018D0            517              JSR     SCOUPD
000013D8  1E3C 0000                518              MOVE.B  #SNDEAT,D7
000013DC  4E42                     519              TRAP    #SNDPLTN
000013DE                           520  
000013DE                           521  NOCOL:
000013DE                           522              ; Convierte la posición nueva a índice
000013DE  3239 00002374            523              MOVE.W  (CBZPOSX),D1
000013E4  3439 00002376            524              MOVE.W  (CBZPOSY),D2
000013EA  4EB9 00001A24            525              JSR     CINDMTRZ
000013F0  4EB9 00001A5E            526              JSR     CBZOCPD                 ; Marca la celda como ocupada
000013F6                           527              
000013F6  6000 0136                528              BRA     FIN
000013FA                           529  
000013FA                           530  
000013FA                           531  GAMEOVER:
000013FA  1E3C 0001                532              MOVE.B  #SNDGMOV,D7             ; Pone el sonido game over
000013FE  4E42                     533              TRAP    #SNDPLTN
00001400  33FC 0003 00002394       534              MOVE.W  #3,(STANEXT)
00001408                           535              
00001408  4280                     536              CLR.L   D0                      ; Borramos los registros que vamos 
0000140A  4281                     537              CLR.L   D1                      ; a utilizar para escribir en el fichero
0000140C  4282                     538              CLR.L   D2
0000140E  4283                     539              CLR.L   D3
00001410  42B9 0000239A            540              CLR.L   (BFFLEC)
00001416                           541              
00001416                           542              ; Escribie la puntuación
00001416  103C 0032                543              MOVE.B  #50,D0                  ; Cerramos todos los archivos
0000141A  4E4F                     544              TRAP    #15
0000141C                           545  
0000141C                           546               ; Verifica si el archivo existe
0000141C  43F9 00001566            547              LEA     FILE,A1                 ; Dirección del nombre del archivo
00001422  103C 003B                548              MOVE.B  #59,D0
00001426  4E4F                     549              TRAP    #15
00001428  B07C 0000                550              CMP.W   #0,D0
0000142C  6700 0006                551              BEQ     .ABRIR_ARCHIVO          ; Si existe, abrir archivo
00001430  6000 0062                552              BRA     .CREAR_ARCHIVO          ; Si no existe, crear archivo
00001434                           553  
00001434                           554  .ABRIR_ARCHIVO
00001434                           555              ; Abre el archivo existente
00001434  103C 0033                556              MOVE.B  #51,D0
00001438  4E4F                     557              TRAP    #15
0000143A  B07C 0000                558              CMP.W   #0,D0                   ; Verifica si ha funcionado
0000143E  6600 0120                559              BNE     ERROR                   ; Si falla, ir a ERROR
00001442  23C1 00002396            560              MOVE.L  D1,FILEID               ; Guarda el File-ID
00001448                           561  
00001448                           562              ; Lee hasta encontrar el marcador `#`
00001448  2239 00002396            563              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
0000144E  7400                     564              MOVE.L  #0,D2                   ; Se pone al inicio del archivo
00001450  103C 0037                565              MOVE.B  #55,D0                  ; Pone el archivo
00001454  4E4F                     566              TRAP    #15
00001456                           567  
00001456                           568  .BUSCAR_FINAL
00001456  43F9 0000239A            569              LEA     BFFLEC,A1               ; Buffer para leer datos
0000145C  2239 00002396            570              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001462  7401                     571              MOVE.L  #1,D2                   ; Leer 1 byte
00001464  103C 0035                572              MOVE.B  #53,D0                  ; Tarea 53: Leer archivo
00001468  4E4F                     573              TRAP    #15
0000146A  B07C 0001                574              CMP.W   #1,D0                   ; Verifica si alcanzamos EOF
0000146E  6700 003C                575              BEQ     .ESCRIBIR               ; Si alcanza EOF, escribe al final
00001472  0C39 0023 0000239A       576              CMP.B   #'#',(BFFLEC)           ; Compara con el marcador `#`
0000147A  6700 0006                577              BEQ     .POSICIONAR             ; Si encuentra el marcador
0000147E  5283                     578              ADDQ.L  #1,D3                   ; Incrementa el contador de bytes
00001480  60D4                     579              BRA     .BUSCAR_FINAL           ; Continua buscando el marcador
00001482                           580  
00001482                           581  .POSICIONAR
00001482                           582              ; Posicionarse en el marcador para sobrescribir
00001482  2403                     583              MOVE.L  D3,D2                   ; Carga la posición del marcador
00001484  2239 00002396            584              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
0000148A  103C 0037                585              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
0000148E  4E4F                     586              TRAP    #15
00001490  6000 001A                587              BRA     .ESCRIBIR
00001494                           588  
00001494                           589  .CREAR_ARCHIVO
00001494                           590              ; Crea un archivo nuevo
00001494  103C 0034                591              MOVE.B  #52,D0                  ; Abrir o crear archivo
00001498  4E4F                     592              TRAP    #15
0000149A  B07C 0000                593              CMP.W   #0,D0                   ; Verifica si ha funcionado
0000149E  6600 00C0                594              BNE     ERROR                   ; Si falla, ir a ERROR
000014A2  23C1 00002396            595              MOVE.L  D1,FILEID               ; Guarda el File-ID
000014A8  6000 0002                596              BRA     .ESCRIBIR               ; Va directamente a escribir datos
000014AC                           597  
000014AC                           598  .ESCRIBIR
000014AC                           599              ; Convierte el número en caracteres ASCI y los escribe uno por uno
000014AC  41F9 00002388            600              LEA     JGOPNTS,A0              ; Dirección del número
000014B2  3010                     601              MOVE.W  (A0),D0                 ; Carga el número en D0
000014B4  4EB9 00001534            602              JSR     CONVERTIR_NUMERO        ; Lo convierte a ASCII en el buffer
000014BA                           603  
000014BA                           604              ; Escribe los caracteres del buffer
000014BA  41F9 0000239B            605              LEA     ASCBFF,A0               ; Dirección del buffer
000014C0                           606              
000014C0                           607  
000014C0                           608  .ESCRIBIR_BUCLE:
000014C0  1010                     609              MOVE.B  (A0),D0                 ; Lee el carácter del buffer
000014C2  6700 0028                610              BEQ     .ESCRIBIR_FIN_BLOQUE    ; Si terminador NULL
000014C6  2403                     611              MOVE.L  D3,D2                   ; Carga la posición actual
000014C8  2239 00002396            612              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
000014CE  103C 0037                613              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
000014D2  4E4F                     614              TRAP    #15                     ; Posiciona antes de escribir
000014D4  103C 0036                615              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
000014D8  43D0                     616              LEA     (A0),A1
000014DA  7401                     617              MOVE.L  #1,D2
000014DC  4E4F                     618              TRAP    #15                     ; Escribe el carácter
000014DE  B07C 0000                619              CMP.W   #0,D0                   ; Verifica si ha funcionado
000014E2  6600 007C                620              BNE     ERROR                   ; Si falla, ir a ERROR
000014E6  5283                     621              ADDQ.L  #1,D3                   ; Incrementa la posición
000014E8  1018                     622              MOVE.B  (A0)+,D0                ; Restaura el carácter actual
000014EA  60D4                     623              BRA     .ESCRIBIR_BUCLE         ; Continua con el siguiente
000014EC                           624  
000014EC                           625  .ESCRIBIR_FIN_BLOQUE
000014EC                           626              ; Escribir delimitador `?`
000014EC  43F9 00001571            627              LEA     TXT1,A1
000014F2  4EB9 00001508            628              JSR     ESCRIBIR_CARACTER
000014F8                           629              ; Escribir marcador `#`
000014F8  43F9 00001573            630              LEA     TXT2,A1
000014FE  4EB9 00001508            631              JSR     ESCRIBIR_CARACTER
00001504  6000 001C                632              BRA     FINESC
00001508                           633  
00001508                           634  ESCRIBIR_CARACTER:
00001508  2403                     635              MOVE.L  D3,D2                   ; Carga la posición actual
0000150A  2239 00002396            636              MOVE.L  FILEID,D1               ; File-ID del archivo
00001510  103C 0037                637              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001514  4E4F                     638              TRAP    #15                     ; Posiciona antes de escribir
00001516  103C 0036                639              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
0000151A  7401                     640              MOVE.L  #1,D2
0000151C  4E4F                     641              TRAP    #15                     ; Escribe el carácter
0000151E  5283                     642              ADDQ.L  #1,D3                   ; Incrementa la posición
00001520  4E75                     643              RTS
00001522                           644  
00001522                           645  FINESC
00001522                           646              ; Cierra el archivo
00001522  2239 00002396            647              MOVE.L  FILEID,D1               ; File-ID del archivo
00001528  103C 0038                648              MOVE.B  #56,D0                  ; Tarea 56: Cerrar archivo
0000152C  4E4F                     649              TRAP    #15
0000152E                           650  FIN
0000152E  4CDF 038F                651              MOVEM.L (A7)+,D0-D3/D7/A0-A1
00001532  4E75                     652              RTS
00001534                           653  
00001534                           654  CONVERTIR_NUMERO
00001534  48E7 F040                655               MOVEM.L D0-D3/A1,-(A7)
00001538                           656  
00001538                           657              ; Inicialización
00001538  43F9 0000239B            658              LEA     ASCBFF,A1               ; Dirección del buffer
0000153E  740A                     659              MOVEQ   #10,D2                  ; Base decimal (10)
00001540                           660  
00001540                           661              ; Convierte el número hexadecimal a decimal y guarda los dígitos
00001540                           662  .CONVERTDELO:
00001540  80C2                     663              DIVU    D2,D0          ; Dividie D0 por 10: cociente en D0,
00001542  3600                     664              MOVE.W  D0,D3          ; residuo en bits bajos
00001544  C0BC 0000000F            665              AND.L   #$000F,D0      ; Asegura de trabajar con el residuo (0-9)
0000154A  0600 0030                666              ADD.B   #48,D0         ; Convierte el residuo a carácter ASCII
0000154E  12C0                     667              MOVE.B  D0,(A1)+       ; Almacena el carácter en el buffer
00001550  3003                     668              MOVE.W  D3,D0
00001552  4A43                     669              TST.W   D3             ; Verifica si el cociente es 0
00001554  66EA                     670              BNE     .CONVERTDELO   ; Si no es 0, continua con el próximo dígito
00001556                           671              
00001556                           672              
00001556                           673              ; Añade el terminador NULL al final
00001556  12FC 0000                674              MOVE.B  #0,(A1)+                ; Finaliza la cadena con NULL
0000155A                           675              
0000155A  4CDF 020F                676              MOVEM.L (A7)+,D0-D3/A1
0000155E  4E75                     677              RTS                             
00001560                           678  ERROR
00001560  103C 0009                679              MOVE.B  #9,D0                   ; Tarea 9: Terminar el programa
00001564  4E4F                     680              TRAP    #15
00001566                           681     
00001566                           682              
00001566                           683              
00001566= 50 55 4E 54 4F 53 ...    684  FILE        DC.B    'PUNTOS.TXT',0 
00001571= 3F 00                    685  TXT1        DC.B    '?',0
00001573= 23 00                    686  TXT2        DC.B    '#',0  
00001576                           687              DS.W    0        
00001576                           688  
00001576                           689  
00001576                           690              
00001576                           691              
00001576                           692  ; ----------------------------------------------------------------------------
00001576                           693  HEADPLOT
00001576                           694  ; Dibuja la cabeza
00001576                           695  ; INPUT    : NONE 
00001576                           696  ; OUTPUT   : NONE aparte de la salida del buffer
00001576                           697  ; MODIFIES : NONE
00001576                           698  ; ----------------------------------------------------------------------------
00001576                           699                         
00001576  3F00                     700              MOVE.W  D0,-(A7)               ; Guardamos D0
00001578  3003                     701              MOVE.W  D3,D0                  ; Calculamos las coordenadas
0000157A  4EB9 00001ACC            702              JSR     CNVICOOR
00001580  2F01                     703              MOVE.L  D1,-(A7)
00001582                           704              
00001582                           705              ; Ponemos el color de la cabeza
00001582  103C 0050                706              MOVE.B  #80,D0
00001586  223C 0000FF00            707              MOVE.L  #CBZPCOL,D1
0000158C  4E4F                     708              TRAP    #15
0000158E                           709              
0000158E                           710              ; Ponemos el color de la cabeza
0000158E  103C 0051                711              MOVE.B  #81,D0
00001592  223C 0000AA00            712              MOVE.L  #CBZFCOL,D1
00001598  4E4F                     713              TRAP    #15
0000159A                           714              
0000159A                           715              ; Dibujamos la cabeza
0000159A  103C 0057                716              MOVE.B  #87,D0
0000159E  221F                     717              MOVE.L  (A7)+,D1
000015A0  3F03                     718              MOVE.W  D3,-(A7)
000015A2  3601                     719              MOVE.W  D1,D3
000015A4  0643 0014                720              ADD.W   #CBZWIDTH,D3
000015A8  3802                     721              MOVE.W  D2,D4
000015AA  0644 0014                722              ADD.W   #CBZHEIGH,D4
000015AE  4E4F                     723              TRAP    #15
000015B0                           724              
000015B0  2F01                     725              MOVE.L  D1,-(A7)
000015B2                           726              
000015B2                           727              ; Ponemos color del ojo
000015B2  103C 0050                728              MOVE.B  #80,D0
000015B6  7200                     729              MOVE.L  #OJOPCOL,D1
000015B8  4E4F                     730              TRAP    #15
000015BA                           731              
000015BA                           732              ; Ponemos el color del ojo
000015BA  103C 0051                733              MOVE.B  #81,D0
000015BE  223C 00FFFFFF            734              MOVE.L  #OJOFCOL,D1
000015C4  4E4F                     735              TRAP    #15
000015C6                           736              
000015C6                           737              ; Dibujamos el ojo
000015C6  103C 0058                738              MOVE.B  #88,D0
000015CA  221F                     739              MOVE.L  (A7)+,D1
000015CC  2F01                     740              MOVE.L  D1,-(A7)
000015CE  2F02                     741              MOVE.L  D2,-(A7)
000015D0  5A41                     742              ADD.W   #OJOWIDTH/2,D1            
000015D2  3601                     743              MOVE.W  D1,D3
000015D4  0643 000A                744              ADD.W   #OJOWIDTH,D3
000015D8  5A42                     745              ADD.W   #OJOHEIGH/2,D2
000015DA  3802                     746              MOVE.W  D2,D4
000015DC  0644 000A                747              ADD.W   #OJOHEIGH,D4
000015E0  4E4F                     748              TRAP    #15
000015E2                           749  
000015E2                           750              ; Define y dibuja el iris
000015E2  241F                     751              MOVE.L  (A7)+,D2
000015E4  221F                     752              MOVE.L  (A7)+,D1
000015E6  0641 000A                753              ADD.W   #OJOWIDTH,D1
000015EA  0642 000A                754              ADD.W   #OJOHEIGH,D2
000015EE  103C 0052                755              MOVE.B  #82,D0
000015F2  4E4F                     756              TRAP    #15                     
000015F4                           757              
000015F4  361F                     758              MOVE.W  (A7)+,D3
000015F6  301F                     759              MOVE.W  (A7)+,D0
000015F8                           760  
000015F8  4E75                     761              RTS
000015FA                           762  
000015FA                           763  
000015FA                           764  
000015FA                           765  
000015FA                           766  
000015FA                           767  
000015FA                           768  
000015FA                           769  
000015FA                           770  -------------------- end include --------------------
000015FA                           771              INCLUDE 'SEGSRP.X68'
000015FA                           772  
000015FA                           773  ; ----------------------------------------------------------------------------
000015FA                           774  SEGINIT
000015FA                           775  ; Inicializa los dos segmentos
000015FA                           776  ; INPUT    : NONE 
000015FA                           777  ; OUTPUT   : NONE
000015FA                           778  ; MODIFIES : NONE
000015FA                           779  ; ----------------------------------------------------------------------------
000015FA  33FC 012C 00002380       780              MOVE.W  #(PANWIDTH/2)-CBZWIDTH,(SGMPOSX)
00001602  33FC 00F0 00002382       781              MOVE.W  #PANHEIGH/2,(SGMPOSY)
0000160A  33F9 00002380 00002384   782              MOVE.W  (SGMPOSX),(SGMPOSX2)
00001614  33F9 00002382 00002386   783              MOVE.W  (SGMPOSY),(SGMPOSY2)
0000161E  0479 0014 00002384       784              SUB.W   #SGMWIDTH,(SGMPOSX2)
00001626  4E75                     785              RTS
00001628                           786              
00001628                           787  ; ----------------------------------------------------------------------------
00001628                           788  SEGUPD
00001628                           789  ; ACTUALIZAR SEGMENTO.
00001628                           790  ; INPUT    : NONE 
00001628                           791  ; OUTPUT   : NONE
00001628                           792  ; MODIFIES : Posiciones de los segmentos
00001628                           793  ; ----------------------------------------------------------------------------
00001628                           794  
00001628  48A7 6000                795              MOVEM.W D1-D2,-(A7)
0000162C                           796              
0000162C                           797              ; Marca la posición anterior del segmento como vacía
0000162C  3239 00002380            798              MOVE.W  (SGMPOSX),D1            ; Posición X actual del segmento2
00001632  3439 00002382            799              MOVE.W  (SGMPOSY),D2            ; Posición Y actual del segmento2
00001638  4EB9 00001A24            800              JSR     CINDMTRZ                ; Obtiene el índice de celda en D0
0000163E  4EB9 00001A74            801              JSR     MCLDVCIA                ; Marca celda como vacía
00001644                           802              
00001644                           803              ; Marca la posición anterior del segmento2 como vacía
00001644  3239 00002384            804              MOVE.W  (SGMPOSX2),D1           ; Posición X actual del segmento2
0000164A  3439 00002386            805              MOVE.W  (SGMPOSY2),D2           ; Posición Y actual del segmento2
00001650  4EB9 00001A24            806              JSR     CINDMTRZ                ; Obtiene el índice de celda en D0
00001656  4EB9 00001A74            807              JSR     MCLDVCIA                ; Marca celda como vacía
0000165C                           808              
0000165C                           809              ; Actualiza la posición del segmento para seguir a la cabeza
0000165C  33F9 00002380 00002384   810              MOVE.W  (SGMPOSX),(SGMPOSX2)
00001666  33F9 00002382 00002386   811              MOVE.W  (SGMPOSY),(SGMPOSY2)
00001670  33F9 00002374 00002380   812              MOVE.W  (CBZPOSX),(SGMPOSX)
0000167A  33F9 00002376 00002382   813              MOVE.W  (CBZPOSY),(SGMPOSY)
00001684                           814  
00001684                           815              ; Marca la nueva posición del segmento como ocupada
00001684  3239 00002380            816              MOVE.W  (SGMPOSX),D1            ; Carga nueva posición X
0000168A  3439 00002382            817              MOVE.W  (SGMPOSY),D2            ; Carga nueva posición Y
00001690  4EB9 00001A24            818              JSR     CINDMTRZ                ; Obtiene el índice de celda en D0
00001696  4EB9 00001A8A            819              JSR     SGMOCPD
0000169C                           820              
0000169C  3239 00002384            821              MOVE.W  (SGMPOSX2),D1           ; Carga nueva posición X del segm2
000016A2  3439 00002386            822              MOVE.W  (SGMPOSY2),D2           ; Carga nueva posición Y del segm2
000016A8  4EB9 00001A24            823              JSR     CINDMTRZ                ; Obtiene índice de celda en D0
000016AE  4EB9 00001A8A            824              JSR     SGMOCPD
000016B4                           825              
000016B4  4C9F 0006                826              MOVEM.W (A7)+,D1-D2            
000016B8  4E75                     827              RTS
000016BA                           828           
000016BA                           829              
000016BA                           830  ; ----------------------------------------------------------------------------
000016BA                           831  SEGPLOT
000016BA                           832  ; Dibuja los segmentos
000016BA                           833  ; INPUT    : NONE 
000016BA                           834  ; OUTPUT   : Segmentos de la serpiente
000016BA                           835  ; MODIFIES : NONE
000016BA                           836  ; ----------------------------------------------------------------------------
000016BA  3F00                     837              MOVE.W  D0,-(A7)
000016BC  3003                     838              MOVE.W  D3,D0
000016BE  4EB9 00001ACC            839              JSR     CNVICOOR
000016C4  2F01                     840              MOVE.L  D1,-(A7)
000016C6                           841              
000016C6  103C 0050                842              MOVE.B  #80,D0
000016CA  223C 0000FF00            843              MOVE.L  #SGMPCOL,D1            ; Ponemos el color de dibujado
000016D0  4E4F                     844              TRAP    #15
000016D2                           845              
000016D2  103C 0051                846              MOVE.B  #81,D0
000016D6  223C 0000AA00            847              MOVE.L  #SGMFCOL,D1            ; Ponemos el color de dibujado
000016DC  4E4F                     848              TRAP    #15
000016DE                           849              
000016DE  103C 0057                850              MOVE.B  #87,D0
000016E2  221F                     851              MOVE.L  (A7)+,D1
000016E4  3F03                     852              MOVE.W  D3,-(A7)
000016E6  3601                     853              MOVE.W  D1,D3
000016E8  0643 0014                854              ADD.W   #SIZECLDA,D3
000016EC  3802                     855              MOVE.W  D2,D4                   ; Dibujamos el cuadrado
000016EE  0644 0014                856              ADD.W   #SIZECLDA,D4
000016F2  4E4F                     857              TRAP    #15                     
000016F4                           858                          
000016F4  361F                     859              MOVE.W  (A7)+,D3  
000016F6  301F                     860              MOVE.W  (A7)+,D0
000016F8                           861  
000016F8  4E75                     862              RTS
000016FA                           863  
000016FA                           864  
000016FA                           865  
000016FA                           866  -------------------- end include --------------------
000016FA                           867              INCLUDE 'TAILSRP.X68'
000016FA                           868     
000016FA                           869  ; ----------------------------------------------------------------------------
000016FA                           870  TAILINIT
000016FA                           871  ; Inicializa la cola
000016FA                           872  ; INPUT    : NONE 
000016FA                           873  ; OUTPUT   : NONE
000016FA                           874  ; MODIFIES : NONE
000016FA                           875  ; ----------------------------------------------------------------------------
000016FA                           876  
000016FA  33FC 011D 0000237C       877              MOVE.W  #(PANWIDTH/2)-CBZWIDTH-SGMWIDTH+(COLWIDTH/2),(COLPOSX)
00001702  33FC 00F0 0000237E       878              MOVE.W  #(PANHEIGH/2),(COLPOSY)
0000170A                           879              
0000170A  4E75                     880              RTS
0000170C                           881              
0000170C                           882  ; ----------------------------------------------------------------------------
0000170C                           883  TAILUPD
0000170C                           884  ; Actualiza la cola
0000170C                           885  ; INPUT    : NONE 
0000170C                           886  ; OUTPUT   : NONE
0000170C                           887  ; MODIFIES : Posición de la cola
0000170C                           888  ; ----------------------------------------------------------------------------
0000170C  48A7 6000                889              MOVEM.W D1-D2,-(A7)
00001710                           890              
00001710                           891              ; Marca la posición actual de la cola como vacía
00001710  3239 0000237C            892              MOVE.W  (COLPOSX),D1
00001716  3439 0000237E            893              MOVE.W  (COLPOSY),D2
0000171C  4EB9 00001A24            894              JSR     CINDMTRZ
00001722  4EB9 00001A74            895              JSR     MCLDVCIA
00001728                           896  
00001728                           897              ; Actualiza la posición de la cola para seguir al último segmento
00001728  33F9 00002384 0000237C   898              MOVE.W  (SGMPOSX2),(COLPOSX)
00001732  33F9 00002386 0000237E   899              MOVE.W  (SGMPOSY2),(COLPOSY)
0000173C                           900              
0000173C                           901              ; Marca la nueva posición como cola
0000173C  3239 0000237C            902              MOVE.W  (COLPOSX),D1
00001742  3439 0000237E            903              MOVE.W  (COLPOSY),D2
00001748  4EB9 00001A24            904              JSR     CINDMTRZ
0000174E  4EB9 00001AA0            905              JSR     COLOCPD
00001754                           906  
00001754                           907  FINUPD
00001754  4C9F 0006                908              MOVEM.W (A7)+,D1-D2
00001758  4E75                     909              RTS
0000175A                           910              
0000175A                           911  ; ------------------------------------------------------------------------------
0000175A                           912  TAILPLOT
0000175A                           913  ; Dibuja la cola
0000175A                           914  ; INPUT    : NONE 
0000175A                           915  ; OUTPUT   : Cola de la serpiente
0000175A                           916  ; MODIFIES : NONE
0000175A                           917  ; ------------------------------------------------------------------------------
0000175A                           918  
0000175A  3F00                     919              MOVE.W  D0,-(A7)
0000175C  3003                     920              MOVE.W  D3,D0
0000175E  4EB9 00001ACC            921              JSR     CNVICOOR
00001764  2F01                     922              MOVE.L  D1,-(A7)
00001766                           923              
00001766  103C 0050                924              MOVE.B  #80,D0
0000176A  223C 0000FF00            925              MOVE.L  #COLPCOL,D1            ; Ponemos el color de dibujado
00001770  4E4F                     926              TRAP    #15
00001772                           927              
00001772  103C 0051                928              MOVE.B  #81,D0
00001776  223C 0000AA00            929              MOVE.L  #COLFCOL,D1            ; Ponemos el color de dibujado
0000177C  4E4F                     930              TRAP    #15
0000177E                           931              
0000177E  103C 0057                932              MOVE.B  #87,D0
00001782  221F                     933              MOVE.L  (A7)+,D1
00001784  3F03                     934              MOVE.W  D3,-(A7)
00001786  3601                     935              MOVE.W  D1,D3
00001788  0643 0014                936              ADD.W   #SIZECLDA,D3
0000178C  3802                     937              MOVE.W  D2,D4                    
0000178E  0644 0014                938              ADD.W   #SIZECLDA,D4
00001792  4E4F                     939              TRAP    #15                    ; Dibujamos el cuadrado 
00001794                           940                          
00001794  361F                     941              MOVE.W  (A7)+,D3  
00001796  301F                     942              MOVE.W  (A7)+,D0
00001798                           943  
00001798  4E75                     944              RTS
0000179A                           945  
0000179A                           946  
0000179A                           947  
0000179A                           948  
0000179A                           949  -------------------- end include --------------------
0000179A                           950              INCLUDE 'APPLE.X68'
0000179A                           951     
0000179A                           952  ; ----------------------------------------------------------------------------
0000179A                           953  APPLEINIT
0000179A                           954  ; Inicializa la manzana en una posición aleatoria
0000179A                           955  ; INPUT    : NONE 
0000179A                           956  ; OUTPUT   : NONE
0000179A                           957  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
0000179A                           958  ; ----------------------------------------------------------------------------
0000179A                           959  
0000179A                           960              ; Llama a la función para generar la posición aleatoria
0000179A  4EB9 00001888            961              JSR     GENPOSMNZ
000017A0                           962  
000017A0                           963              ; Convierte las coordenadas de la manzana a índice de la matriz
000017A0  4EB9 00001A24            964              JSR     CINDMTRZ
000017A6                           965  
000017A6                           966              ; Verifica si la celda está ocupada o libre
000017A6                           967  CHECK:
000017A6  4EB9 00001B08            968              JSR     CHECKCLD
000017AC  6700 0010                969              BEQ     MARKMNZ                 ; Si está libre
000017B0                           970  
000017B0                           971              ; Si la celda está ocupada
000017B0  4EB9 00001888            972              JSR     GENPOSMNZ               ; Genera una nueva posición
000017B6  4EB9 00001A24            973              JSR     CINDMTRZ                ; Convierte las coordenadas
000017BC  60E8                     974              BRA     CHECK                   ; Repite la comprobación
000017BE                           975  
000017BE                           976  MARKMNZ:
000017BE                           977              ; Marca la celda como ocupada con la manzana (estado 4)
000017BE  4EB9 00001AB6            978              JSR     MNZOCPD
000017C4                           979  
000017C4                           980              ; Dibuja la manzana en la pantalla
000017C4  4EB9 0000180A            981              JSR     APPLEPLOT
000017CA                           982  
000017CA  4E75                     983              RTS
000017CC                           984  
000017CC                           985  ; ----------------------------------------------------------------------------
000017CC                           986  APPLEUPD
000017CC                           987  ; Actualiza la posición de la manzana cuando la serpiente come
000017CC                           988  ; INPUT    : NONE 
000017CC                           989  ; OUTPUT   : NONE
000017CC                           990  ; MODIFIES : MNZPOSX, MNZPOSY, ESTDCLDS
000017CC                           991  ; ----------------------------------------------------------------------------
000017CC                           992  
000017CC                           993              ; Convierte las coordenadas actuales de la manzana 
000017CC                           994              ; a índice de la matriz
000017CC  4EB9 00001A24            995              JSR     CINDMTRZ
000017D2                           996  
000017D2                           997              ; Marca la celda anterior como vacía
000017D2  4EB9 00001A74            998              JSR     MCLDVCIA
000017D8                           999  
000017D8                          1000              ; Llama a la función para generar una nueva posición aleatoria
000017D8  4EB9 00001888           1001              JSR     GENPOSMNZ
000017DE                          1002  
000017DE                          1003              ; Convierte las nuevas coordenadas de la manzana 
000017DE                          1004              ; a índice de la matriz
000017DE  4EB9 00001A24           1005              JSR     CINDMTRZ
000017E4                          1006  
000017E4                          1007  CHCKUPDT:
000017E4  4EB9 00001B08           1008              JSR     CHECKCLD                ; Verifica si la celda está libre
000017EA  6700 0010               1009              BEQ     NEWMNZ                  ; Si está libre
000017EE                          1010  
000017EE                          1011              ; Si la celda está ocupada
000017EE  4EB9 00001888           1012              JSR     GENPOSMNZ               ; Genera una nueva posición
000017F4  4EB9 00001A24           1013              JSR     CINDMTRZ                ; Convierte las nuevas coordenadas
000017FA  60E8                    1014              BRA     CHCKUPDT                ; Repite la comprobación
000017FC                          1015  
000017FC                          1016  NEWMNZ:
000017FC                          1017              ; Marca la celda como ocupada con la manzana (estado 4)
000017FC  4EB9 00001AB6           1018              JSR     MNZOCPD
00001802                          1019  
00001802                          1020              ; Dibuja la nueva manzana en la pantalla
00001802  4EB9 0000180A           1021              JSR     APPLEPLOT
00001808                          1022  
00001808  4E75                    1023              RTS
0000180A                          1024              
0000180A                          1025  ; ----------------------------------------------------------------------------
0000180A                          1026  APPLEPLOT
0000180A                          1027  ; Dibuja la manzana
0000180A                          1028  ; INPUT    : NONE 
0000180A                          1029  ; OUTPUT   : NONE
0000180A                          1030  ; MODIFIES : NONE
0000180A                          1031  ; ----------------------------------------------------------------------------
0000180A  3F00                    1032              MOVE.W  D0,-(A7)
0000180C  3003                    1033              MOVE.W  D3,D0
0000180E  4EB9 00001ACC           1034              JSR     CNVICOOR
00001814  2F01                    1035              MOVE.L  D1,-(A7)                ; Primero debemos dibujar el fondo
00001816                          1036              
00001816  103C 0050               1037              MOVE.B  #80,D0
0000181A  223C 0090EE90           1038              MOVE.L  #COLFND,D1              ; Ponemos el color de dibujado
00001820  4E4F                    1039              TRAP    #15
00001822                          1040              
00001822  103C 0051               1041              MOVE.B  #81,D0
00001826  223C 0090EE90           1042              MOVE.L  #COLFND,D1              ; Ponemos el color de relleno
0000182C  4E4F                    1043              TRAP    #15
0000182E                          1044              
0000182E  103C 0057               1045              MOVE.B  #87,D0
00001832  221F                    1046              MOVE.L  (A7)+,D1
00001834  3F03                    1047              MOVE.W  D3,-(A7)
00001836  3601                    1048              MOVE.W  D1,D3
00001838  0643 0014               1049              ADD.W   #SIZECLDA,D3
0000183C  3802                    1050              MOVE.W  D2,D4                   ; Dibujamos el cuadrado del 
0000183E  0644 0014               1051              ADD.W   #SIZECLDA,D4            ; fondo donde irá la manzana
00001842  4E4F                    1052              TRAP    #15                     
00001844                          1053                          
00001844  361F                    1054              MOVE.W  (A7)+,D3  
00001846  301F                    1055              MOVE.W  (A7)+,D0
00001848                          1056  
00001848  3F00                    1057              MOVE.W  D0,-(A7)
0000184A  3003                    1058              MOVE.W  D3,D0
0000184C  4EB9 00001ACC           1059              JSR     CNVICOOR
00001852  2F01                    1060              MOVE.L  D1,-(A7)
00001854                          1061              
00001854  103C 0050               1062              MOVE.B  #80,D0
00001858  223C 0000AAFF           1063              MOVE.L  #MNZPCOL,D1             ; Ponemos el color de dibujado
0000185E  4E4F                    1064              TRAP    #15                     ; al color de fondo de la manzana
00001860                          1065              
00001860  103C 0051               1066              MOVE.B  #81,D0
00001864  223C 000000FF           1067              MOVE.L  #MNZFCOL,D1             ; Ponemos el color de dibujado
0000186A  4E4F                    1068              TRAP    #15                     ; al color del relleno de la manzana
0000186C                          1069              
0000186C  103C 0058               1070              MOVE.B  #88,D0
00001870  221F                    1071              MOVE.L  (A7)+,D1
00001872  3F03                    1072              MOVE.W  D3,-(A7)
00001874  3601                    1073              MOVE.W  D1,D3
00001876  0643 0014               1074              ADD.W   #SIZECLDA,D3
0000187A  3802                    1075              MOVE.W  D2,D4                    ; Dibujamos el círculo
0000187C  0644 0014               1076              ADD.W   #SIZECLDA,D4
00001880  4E4F                    1077              TRAP    #15                     
00001882                          1078                          
00001882  361F                    1079              MOVE.W  (A7)+,D3  
00001884  301F                    1080              MOVE.W  (A7)+,D0
00001886                          1081  
00001886                          1082  
00001886  4E75                    1083              RTS
00001888                          1084  ; ----------------------------------------------------------------------------
00001888                          1085  GENPOSMNZ
00001888                          1086  ; Genera una posición aleatoria para la manzana
00001888                          1087  ; INPUT: NONE
00001888                          1088  ; OUTPUT:
00001888                          1089  ; MODIFIES: MNZPOSX, MNZPOSY
00001888                          1090  ; ----------------------------------------------------------------------------
00001888                          1091  
00001888  48E7 8000               1092              MOVEM.L D0,-(A7)
0000188C                          1093  
0000188C                          1094              ; Genera la coordenada X aleatoria
0000188C  4EB8 11D0               1095              JSR     UTLRAND
00001890  0240 001F               1096              ANDI.W  #NUMCLMNS-1, D0         ; [0, NUMCLMNS-1]
00001894  C0FC 0014               1097              MULU    #SIZECLDA, D0           ; Escala al tamaño de las celdas
00001898  3200                    1098              MOVE.W  D0,D1
0000189A  33C0 00002370           1099              MOVE.W  D0, MNZPOSX             ; Guarda la coordenada X
000018A0                          1100              
000018A0                          1101              ; Genera la coordenada Y aleatoria
000018A0  4EB8 11D0               1102              JSR     UTLRAND
000018A4  0240 0017               1103              ANDI.W  #NUMFILAS-1, D0         ; [0, NUMFILAS-1]
000018A8  C0FC 0014               1104              MULU    #SIZECLDA, D0           ; Escala al tamaño de las celdas
000018AC  3400                    1105              MOVE.W  D0,D2
000018AE  33C0 00002372           1106              MOVE.W  D0, MNZPOSY             ; Guarda la coordenada Y
000018B4                          1107              
000018B4  4CDF 0001               1108              MOVEM.L (A7)+,D0
000018B8  4E75                    1109              RTS 
000018BA                          1110  
000018BA                          1111  
000018BA                          1112  
000018BA                          1113  
000018BA                          1114  
000018BA                          1115  
000018BA                          1116  
000018BA                          1117  
000018BA                          1118  -------------------- end include --------------------
000018BA                          1119              INCLUDE 'SCORE.X68'
000018BA                          1120     
000018BA                          1121  ; ----------------------------------------------------------------------------
000018BA                          1122  SCOINIT
000018BA                          1123  ; Inicializar marcador
000018BA                          1124  ; INPUT    : NONE 
000018BA                          1125  ; OUTPUT   : NONE
000018BA                          1126  ; MODIFIES : JGOTIM,JGOPNTS
000018BA                          1127  ; ----------------------------------------------------------------------------
000018BA  4279 00002388           1128              CLR.W   (JGOPNTS)
000018C0  4279 0000238A           1129              CLR.W   (JGOTIM)                ; Reiniciamos timer y puntuación
000018C6  33FC 0096 0000238A      1130              MOVE.W  #150,(JGOTIM)
000018CE  4E75                    1131              RTS
000018D0                          1132              
000018D0                          1133  ; ----------------------------------------------------------------------------
000018D0                          1134  SCOUPD
000018D0                          1135  ; Actualiza el marcador
000018D0                          1136  ; INPUT    : NONE 
000018D0                          1137  ; OUTPUT   : NONE
000018D0                          1138  ; MODIFIES : JGPNTS
000018D0                          1139  ; ----------------------------------------------------------------------------
000018D0                          1140              
000018D0  48E7 8000               1141              MOVEM.L D0,-(A7)
000018D4                          1142              
000018D4                          1143              ;Incrementa el marcador
000018D4  3039 00002388           1144              MOVE.W  (JGOPNTS),D0
000018DA  0640 000A               1145              ADD.W  #10,D0
000018DE  33C0 00002388           1146              MOVE.W  D0,(JGOPNTS)
000018E4                          1147              
000018E4  4CDF 0001               1148              MOVEM.L (A7)+,D0
000018E8                          1149  
000018E8  4E75                    1150              RTS
000018EA                          1151              
000018EA                          1152  ; ----------------------------------------------------------------------------
000018EA                          1153  SCOPLOT
000018EA                          1154  ; Dibuja el marcador
000018EA                          1155  ; INPUT    : NONE 
000018EA                          1156  ; OUTPUT   : Marcador
000018EA                          1157  ; MODIFIES : NONE
000018EA                          1158  ; ----------------------------------------------------------------------------
000018EA  48E7 C040               1159              MOVEM.L  D0-D1/A1,-(A7)
000018EE                          1160              ; Ponemos color del fondo
000018EE  103C 0051               1161              MOVE.B   #81,D0
000018F2  223C 0090EE90           1162              MOVE.L   #COLFND,D1
000018F8  4E4F                    1163              TRAP     #15
000018FA                          1164           
000018FA                          1165              ; Esquina superior izquierda
000018FA  4241                    1166              CLR.W    D1
000018FC  103C 000B               1167              MOVE.B   #11,D0
00001900  4E4F                    1168              TRAP     #15
00001902                          1169              ; Dibuja la linea de puntuación
00001902  43F9 0000193A           1170              LEA     .TXT1,A1
00001908  4281                    1171              CLR.L   D1
0000190A  3239 00002388           1172              MOVE.W  (JGOPNTS),D1
00001910  103C 0011               1173              MOVE.B  #17,D0
00001914  4E4F                    1174              TRAP    #15
00001916                          1175              
00001916                          1176              ; Bajamos una linea 
00001916  323C 0001               1177              MOVE.W   #1,D1
0000191A  103C 000B               1178              MOVE.B   #11,D0
0000191E  4E4F                    1179              TRAP     #15
00001920                          1180              ; Dibuja la linea timer
00001920  43F9 00001944           1181              LEA     .TXT2,A1
00001926  4281                    1182              CLR.L   D1
00001928  3239 0000238A           1183              MOVE.W  (JGOTIM),D1
0000192E  103C 0011               1184              MOVE.B  #17,D0
00001932  4E4F                    1185              TRAP    #15
00001934                          1186  
00001934                          1187              
00001934  4CDF 0203               1188              MOVEM.L (A7)+,D0-D1/A1
00001938  4E75                    1189              RTS
0000193A                          1190  
0000193A                          1191  
0000193A= 50 55 4E 54 4F 53 ...   1192  .TXT1       DC.B    'PUNTOS : ',0
00001944= 54 49 45 4D 50 4F ...   1193  .TXT2       DC.B    'TIEMPO : ',0
0000194E                          1194              DS.W    0
0000194E                          1195  
0000194E                          1196  
0000194E                          1197  
0000194E                          1198  
0000194E                          1199  
0000194E                          1200  
0000194E                          1201  
0000194E                          1202  
0000194E                          1203  -------------------- end include --------------------
0000194E                          1204              INCLUDE 'GAME.X68'
0000194E                          1205  ; ----------------------------------------------------------------------------
0000194E                          1206  ; GESTIÓN DEL JUEGO
0000194E                          1207  ; ----------------------------------------------------------------------------
0000194E                          1208  
0000194E                          1209  ; ----------------------------------------------------------------------------
0000194E                          1210  GAMINIT
0000194E                          1211  ; Inicializa el juego
0000194E                          1212  ; INPUT    : NONE
0000194E                          1213  ; OUTPUT   : NONE
0000194E                          1214  ; MODIFIES : NONE
0000194E                          1215  ; ----------------------------------------------------------------------------
0000194E  4EB9 00001992           1216              JSR     MTZINIT
00001954  4EB8 12EE               1217              JSR     HEADINIT
00001958  4EB8 15FA               1218              JSR     SEGINIT
0000195C  4EB8 16FA               1219              JSR     TAILINIT
00001960  4EB8 18BA               1220              JSR     SCOINIT
00001964  6000 FE34               1221              BRA     APPLEINIT
00001968                          1222  
00001968                          1223  ; ----------------------------------------------------------------------------
00001968                          1224  GAMUPD
00001968                          1225  ; Actualiza el juego
00001968                          1226  ; INPUT    : NONE
00001968                          1227  ; OUTPUT   : NONE
00001968                          1228  ; MODIFIES : Variables de las subrutinas llamadas
00001968                          1229  ; ----------------------------------------------------------------------------
00001968  4EB8 170C               1230              JSR     TAILUPD
0000196C  4EB8 1628               1231              JSR     SEGUPD
00001970  4EB8 130E               1232              JSR     HEADUPD
00001974  6000 01EE               1233              BRA     MTZUPD       
00001978                          1234  
00001978                          1235  ; ----------------------------------------------------------------------------
00001978                          1236  GAMPLOT
00001978                          1237  ; Dibuja el juego
00001978                          1238  ; INPUT    : NONE
00001978                          1239  ; OUTPUT   : NONE
00001978                          1240  ; MODIFIES : Variables de las subrutinas llamadas
00001978                          1241  ; ----------------------------------------------------------------------------
00001978  4EB8 1576               1242              JSR    HEADPLOT
0000197C  4EB8 16BA               1243              JSR    SEGPLOT
00001980  4EB8 175A               1244              JSR    TAILPLOT
00001984  4EB8 180A               1245              JSR    APPLEPLOT
00001988  4EB9 00001D6E           1246              JSR    MTZPLOT
0000198E  6000 FF5A               1247              BRA    SCOPLOT
00001992                          1248  
00001992                          1249  
00001992                          1250  
00001992                          1251  
00001992                          1252  
00001992                          1253  
00001992                          1254  
00001992                          1255  
00001992                          1256  -------------------- end include --------------------
00001992                          1257              INCLUDE 'MATRIZ.X68'
00001992                          1258  ; ----------------------------------------------------------------------------
00001992                          1259  ; MATRIZ
00001992                          1260  ; ----------------------------------------------------------------------------
00001992                          1261  
00001992                          1262  ;-----------------------------------------------------------------------------
00001992                          1263  MTZINIT
00001992                          1264  ; Inicializa la matriz, al principio vacía
00001992                          1265  ; INPUT    : NONE
00001992                          1266  ; OUTPUT   : NONE
00001992                          1267  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001992                          1268  ; ----------------------------------------------------------------------------
00001992                          1269              
00001992  48A7 E080               1270              MOVEM.W D0-D2/A0,-(A7)
00001996                          1271              
00001996  41F9 000023A8           1272              LEA ESTDCLDS,A0                 ; Apunta al inicio de ESTDCLDS
0000199C  303C 0300               1273              MOVE.W #TCELDAS,D0              ; Número total de celdas
000019A0                          1274  
000019A0                          1275  CLNCLDS:
000019A0  4218                    1276              CLR.B (A0)+                     ; Coloca 0 en cada celda
000019A2  5340                    1277              SUBI.W #1, D0                   ; Decrementa el contador de celdas
000019A4  66FA                    1278              BNE CLNCLDS                     ; Repite hasta que esten vacías
000019A6                          1279              
000019A6                          1280              
000019A6  3239 00002374           1281              MOVE.W  (CBZPOSX),D1            ; Vemos la posición de la cabeza             
000019AC  3439 00002376           1282              MOVE.W  (CBZPOSY),D2
000019B2  4EB9 00001A24           1283              JSR     CINDMTRZ
000019B8  4EB9 00001A5E           1284              JSR     CBZOCPD                 ; Marca la posición de la cabeza
000019BE                          1285              
000019BE  3239 00002380           1286              MOVE.W  (SGMPOSX),D1
000019C4  3439 00002382           1287              MOVE.W  (SGMPOSY),D2            ; Vemos la posición del segmento
000019CA  4EB9 00001A24           1288              JSR     CINDMTRZ
000019D0  4EB9 00001A8A           1289              JSR     SGMOCPD                 ; Marca la posición del segmento
000019D6                          1290              
000019D6  3239 00002384           1291              MOVE.W  (SGMPOSX2),D1
000019DC  3439 00002386           1292              MOVE.W  (SGMPOSY2),D2           ; Ve la posición del segmento 2
000019E2  4EB9 00001A24           1293              JSR     CINDMTRZ
000019E8  4EB9 00001A8A           1294              JSR     SGMOCPD                 ; Marca la posición del segmento 2
000019EE                          1295              
000019EE  3239 0000237C           1296              MOVE.W  (COLPOSX),D1            ; Vemos la posición de la cola
000019F4  3439 0000237E           1297              MOVE.W  (COLPOSY),D2
000019FA  4EB9 00001A24           1298              JSR     CINDMTRZ
00001A00  4EB9 00001AA0           1299              JSR     COLOCPD                 ; Marcamos la posición de la cola
00001A06                          1300              
00001A06  3239 00002370           1301              MOVE.W  (MNZPOSX),D1            ; Vemos la posicion de la manzana
00001A0C  3439 00002372           1302              MOVE.W  (MNZPOSY),D2
00001A12  4EB9 00001A24           1303              JSR     CINDMTRZ
00001A18  4EB9 00001AB6           1304              JSR     MNZOCPD                 ; Marca la posición de la manzana
00001A1E                          1305              
00001A1E                          1306              
00001A1E  4C9F 0107               1307              MOVEM.W (A7)+,D0-D2/A0
00001A22                          1308  
00001A22  4E75                    1309              RTS
00001A24                          1310  
00001A24                          1311  ;-----------------------------------------------------------------------------
00001A24                          1312  CINDMTRZ
00001A24                          1313  ; Calcula el índice de una celda
00001A24                          1314  ; INPUT    : D1 = coordenada X pantalla, D2 = coordenada Y pantalla
00001A24                          1315  ; OUTPUT   : D0 = índice de la celda en ESTDCLDS
00001A24                          1316  ; MODIFIES : NONE
00001A24                          1317  ; ----------------------------------------------------------------------------
00001A24                          1318  
00001A24  48A7 7000               1319               MOVEM.W D1-D3,-(A7)
00001A28                          1320  
00001A28                          1321              ; Divide X por SIZECLDA
00001A28  3601                    1322              MOVE.W  D1,D3                   ; Copia X a D3
00001A2A  4241                    1323              CLR.W   D1                      ; Inicializa el cociente de X
00001A2C                          1324  
00001A2C  B67C 0014               1325  DIVX:       CMP.W   #SIZECLDA,D3            ; Compara D3 con SIZECLDA
00001A30  6D00 000A               1326              BLT     ENDDIVX                 ; Si D3 < SIZECLDA,salta a ENDDIVX
00001A34  0443 0014               1327              SUB.W   #SIZECLDA,D3            ; Resta SIZECLDA de D3
00001A38  5241                    1328              ADDQ.W  #1,D1                   ; Incrementa el cociente de X
00001A3A  60F0                    1329              BRA     DIVX                    ; Repite el bucle
00001A3C                          1330  
00001A3C                          1331  ENDDIVX:
00001A3C                          1332  
00001A3C                          1333              ; Divide Y por SIZECLDA
00001A3C  3602                    1334              MOVE.W  D2,D3                   ; Copia Y a D3
00001A3E  4242                    1335              CLR.W   D2                      ; Inicializa el cociente de Y
00001A40                          1336  
00001A40  B67C 0014               1337  DIVY:       CMP.W   #SIZECLDA,D3            ; Compara D3 con SIZECLDA
00001A44  6D00 000A               1338              BLT     ENDDIVY                 ; Si D3 < SIZECLDA,salta a ENDDIVY
00001A48  0443 0014               1339              SUB.W   #SIZECLDA,D3            ; Resta SIZECLDA de D3
00001A4C  5242                    1340              ADDQ.W  #1, D2                  ; Incrementa el cociente de Y
00001A4E  60F0                    1341              BRA     DIVY                    ; Repite el bucle
00001A50                          1342  
00001A50                          1343  ENDDIVY:
00001A50                          1344  
00001A50                          1345              ; Calcula el índice
00001A50  4240                    1346              CLR.W   D0
00001A52  3002                    1347              MOVE.W  D2, D0                  ; D0 = Y_CELDA
00001A54  EB40                    1348              ASL.W   #5, D0                  ; D0 = Y_CELDA * NUMCLMNS (32 = 2^5)
00001A56  D041                    1349              ADD.W   D1, D0                  ; D0 = Y_CELDA * NUMCLMNS + X_CELDA
00001A58                          1350  
00001A58  4C9F 000E               1351              MOVEM.W (A7)+,D1-D3
00001A5C                          1352  
00001A5C  4E75                    1353              RTS  
00001A5E                          1354              
00001A5E                          1355  ;-----------------------------------------------------------------------------
00001A5E                          1356  CBZOCPD
00001A5E                          1357  ; Marca una celda ocupada por la cabeza
00001A5E                          1358  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A5E                          1359  ; OUTPUT   : NONE
00001A5E                          1360  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A5E                          1361  ; ----------------------------------------------------------------------------
00001A5E                          1362  
00001A5E  48A7 0080               1363              MOVEM.W A0,-(A7)
00001A62                          1364  
00001A62  41F9 000023A8           1365              LEA     ESTDCLDS,A0             ; Dirección de la matriz en A0
00001A68  11BC 0003 0000          1366              MOVE.B  #3,(A0, D0.W)           ; Marca la celda como ocupada
00001A6E                          1367              
00001A6E  4C9F 0100               1368              MOVEM.W (A7)+,A0
00001A72                          1369              
00001A72  4E75                    1370              RTS
00001A74                          1371              
00001A74                          1372              
00001A74                          1373                         
00001A74                          1374  ;-----------------------------------------------------------------------------
00001A74                          1375  MCLDVCIA
00001A74                          1376  ; Marca una celda como vacía
00001A74                          1377  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A74                          1378  ; OUTPUT   : NONE
00001A74                          1379  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A74                          1380  ; ----------------------------------------------------------------------------
00001A74                          1381  
00001A74  48A7 0080               1382              MOVEM.W A0,-(A7)
00001A78                          1383  
00001A78  41F9 000023A8           1384              LEA     ESTDCLDS,A0             ; Direccion de la matriz en A0
00001A7E  11BC 0000 0000          1385              MOVE.B  #0,(A0,D0.W)            ; Marca la celda como vacía
00001A84                          1386              
00001A84  4C9F 0100               1387              MOVEM.W (A7)+,A0
00001A88                          1388              
00001A88  4E75                    1389              RTS
00001A8A                          1390  
00001A8A                          1391  ;-----------------------------------------------------------------------------
00001A8A                          1392  SGMOCPD
00001A8A                          1393  ; Marca una celda ocupada por el segmento
00001A8A                          1394  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001A8A                          1395  ; OUTPUT   : NONE
00001A8A                          1396  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001A8A                          1397  ; ----------------------------------------------------------------------------
00001A8A                          1398  
00001A8A  48A7 0080               1399              MOVEM.W A0,-(A7)
00001A8E                          1400  
00001A8E  41F9 000023A8           1401              LEA ESTDCLDS,A0                 ; Dirección de la matriz en A0
00001A94  11BC 0002 0000          1402              MOVE.B #2,(A0,D0.W)             ; Marca la celda como ocupada
00001A9A                          1403              
00001A9A  4C9F 0100               1404              MOVEM.W (A7)+,A0
00001A9E                          1405              
00001A9E  4E75                    1406              RTS
00001AA0                          1407              
00001AA0                          1408  ;-----------------------------------------------------------------------------
00001AA0                          1409  COLOCPD
00001AA0                          1410  ; Marca una celda ocupada por la cola
00001AA0                          1411  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001AA0                          1412  ; OUTPUT   : NONE
00001AA0                          1413  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001AA0                          1414  ; ----------------------------------------------------------------------------
00001AA0                          1415  
00001AA0  48A7 0080               1416              MOVEM.W A0,-(A7)
00001AA4                          1417  
00001AA4  41F9 000023A8           1418              LEA ESTDCLDS,A0                 ; Dirección de la matriz en A0
00001AAA  11BC 0001 0000          1419              MOVE.B #1,(A0,D0.W)             ; Marca la celda como ocupada
00001AB0                          1420              
00001AB0  4C9F 0100               1421              MOVEM.W (A7)+,A0
00001AB4                          1422              
00001AB4  4E75                    1423              RTS
00001AB6                          1424  
00001AB6                          1425  
00001AB6                          1426  ;-----------------------------------------------------------------------------
00001AB6                          1427  MNZOCPD
00001AB6                          1428  ; Marca una celda ocupada por la manzana
00001AB6                          1429  ; INPUT    : D0 = índice de la celda en ESTDCLDS
00001AB6                          1430  ; OUTPUT   : NONE
00001AB6                          1431  ; MODIFIES : Estado de la celda en la variable ESTDCLDS
00001AB6                          1432  ; ----------------------------------------------------------------------------
00001AB6                          1433  
00001AB6  48A7 0080               1434              MOVEM.W A0,-(A7)
00001ABA                          1435  
00001ABA  41F9 000023A8           1436              LEA ESTDCLDS,A0                 ; Dirección de la matriz en A0
00001AC0  11BC 0004 0000          1437              MOVE.B #4,(A0,D0.W)             ; Marca la celda como ocupada
00001AC6                          1438              
00001AC6  4C9F 0100               1439              MOVEM.W (A7)+,A0
00001ACA                          1440              
00001ACA  4E75                    1441              RTS
00001ACC                          1442  
00001ACC                          1443              
00001ACC                          1444  ;-----------------------------------------------------------------------------
00001ACC                          1445  CNVICOOR
00001ACC                          1446  ; Convierte un índice de celda a coordenadas de pantalla (X, Y)
00001ACC                          1447  ; INPUT    : D0 = índice de la celda en ESTADO_CELDAS
00001ACC                          1448  ; OUTPUT   : D1 = coordenada X, D2 = coordenada Y
00001ACC                          1449  ; MODIFIES : NONE
00001ACC                          1450  ; ----------------------------------------------------------------------------
00001ACC                          1451  
00001ACC  48A7 9800               1452              MOVEM.W D0/D3-D4,-(A7)
00001AD0                          1453  
00001AD0  3400                    1454              MOVE.W  D0,D2                   ; Copia índice a D2
00001AD2  EA4A                    1455              LSR.W   #5,D2                   ; D2 = índice/NUMCLMNS(32 = 2^5)
00001AD4  3200                    1456              MOVE.W  D0,D1                   ; Copia índice a D1
00001AD6  C27C 001F               1457              AND.W   #$1F,D1                 ; D1 = índice%NUMCLMNS(31 = 0x1F)
00001ADA                          1458  
00001ADA                          1459              ; Multiplica por TAMAÑO_CELDA = 10
00001ADA  363C 0014               1460              MOVE.W  #SIZECLDA, D3
00001ADE  3801                    1461              MOVE.W  D1,D4                   ; Copia D1 para multiplicar por 10
00001AE0  4241                    1462              CLR.W   D1                      ; Inicializa resultado
00001AE2                          1463  
00001AE2                          1464  
00001AE2                          1465  MULTLOOPX: 
00001AE2  B87C 0000               1466              CMP.W   #0,D4                   ; ¿Quedan iteraciones?
00001AE6  6700 0008               1467              BEQ     ENDMULTX
00001AEA  D243                    1468              ADD.W   D3,D1                   ; Suma TAMANO_CELDA repetidamente
00001AEC                          1469  
00001AEC  5344                    1470              SUBQ.W  #1,D4                   ; Cuenta las iteraciones restantes
00001AEE  60F2                    1471              BRA     MULTLOOPX               ; Repite mientras no sea 0
00001AF0                          1472  ENDMULTX: 
00001AF0  3802                    1473              MOVE.W  D2,D4                   ; Copia D2 para multiplicar por 10
00001AF2  4242                    1474              CLR.W   D2                      ; Inicializa resultado
00001AF4                          1475  
00001AF4                          1476  MULTLOOPY: 
00001AF4  B87C 0000               1477              CMP.W   #0,D4                   ; ¿Quedan iteraciones?
00001AF8  6700 0008               1478              BEQ     ENDMULTY
00001AFC  D443                    1479              ADD.W   D3,D2                   ; Suma TAMANO_CELDA repetidamente
00001AFE  5344                    1480              SUBQ.W  #1,D4                   ; Cuenta las iteraciones restantes
00001B00  60F2                    1481              BRA     MULTLOOPY               ; Repite mientras no sea 0
00001B02                          1482  ENDMULTY:
00001B02  4C9F 0019               1483              MOVEM.W (A7)+,D0/D3-D4
00001B06                          1484  
00001B06  4E75                    1485              RTS
00001B08                          1486  
00001B08                          1487  ; ----------------------------------------------------------------------------
00001B08                          1488  CHECKCLD
00001B08                          1489  ; Verifica si una celda está ocupada o no
00001B08                          1490  ; INPUT     : D0 = índice de la celda
00001B08                          1491  ; OUTPUT    : D0 = 0 si está vacía, 1 si está ocupada
00001B08                          1492  ; MODIFIES  : NONE
00001B08                          1493  ; ----------------------------------------------------------------------------
00001B08                          1494  
00001B08  41F9 000023A8           1495              LEA     ESTDCLDS,A0
00001B0E  1230 0000               1496              MOVE.B  (A0,D0.W),D1
00001B12  B23C 0000               1497              CMP.B   #0,D1                   ; Compara si está vacía (0)
00001B16  6700 0008               1498              BEQ     CLDFREE                 ; Si está vacía
00001B1A  303C 0001               1499              MOVE.W  #1,D0                   ; Si está ocupada, devuelve 1
00001B1E                          1500  
00001B1E  4E75                    1501              RTS
00001B20                          1502  
00001B20                          1503  CLDFREE:
00001B20  303C 0000               1504              MOVE.W  #0,D0                   ; Devuelve 0 (libre)
00001B24                          1505  
00001B24  4E75                    1506              RTS
00001B26                          1507  
00001B26                          1508  
00001B26                          1509  ;-----------------------------------------------------------------------------
00001B26                          1510  FONPLOT
00001B26                          1511  ; Dibujado del fondo
00001B26                          1512  ; INPUT    : NONE
00001B26                          1513  ; OUTPUT   : Fondo verde
00001B26                          1514  ; MODIFIES : NONE
00001B26                          1515  ; ----------------------------------------------------------------------------
00001B26                          1516  
00001B26  3F00                    1517              MOVE.W  D0,-(A7)
00001B28  3003                    1518              MOVE.W  D3,D0
00001B2A  4EB8 1ACC               1519              JSR     CNVICOOR
00001B2E  2F01                    1520              MOVE.L  D1,-(A7)
00001B30                          1521              
00001B30  103C 0050               1522              MOVE.B  #80,D0
00001B34  223C 0090EE90           1523              MOVE.L  #COLFND,D1              ; Ponemos el color de dibujado
00001B3A  4E4F                    1524              TRAP    #15
00001B3C                          1525              
00001B3C  103C 0051               1526              MOVE.B  #81,D0
00001B40  223C 0090EE90           1527              MOVE.L  #COLFND,D1              ; Ponemos el color del relleno
00001B46  4E4F                    1528              TRAP    #15
00001B48                          1529              
00001B48  103C 0057               1530              MOVE.B  #87,D0
00001B4C  221F                    1531              MOVE.L  (A7)+,D1
00001B4E  3F03                    1532              MOVE.W  D3,-(A7)
00001B50  3601                    1533              MOVE.W  D1,D3
00001B52  0643 0014               1534              ADD.W   #SIZECLDA,D3
00001B56  3802                    1535              MOVE.W  D2,D4                   ; Dibujamos el cuadrado
00001B58  0644 0014               1536              ADD.W   #SIZECLDA,D4
00001B5C  4E4F                    1537              TRAP    #15                     
00001B5E                          1538                          
00001B5E  361F                    1539              MOVE.W  (A7)+,D3  
00001B60  301F                    1540              MOVE.W  (A7)+,D0
00001B62  4E75                    1541              RTS         
00001B64                          1542  
00001B64                          1543  
00001B64                          1544  
00001B64                          1545  ;-----------------------------------------------------------------------------
00001B64                          1546  MTZUPD
00001B64                          1547  ; Actualiza la matriz casilla a casilla
00001B64                          1548  ; INPUT    : NONE
00001B64                          1549  ; OUTPUT   : NONE
00001B64                          1550  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001B64                          1551  ; ----------------------------------------------------------------------------
00001B64                          1552  
00001B64                          1553  
00001B64  48E7 F1C0               1554              MOVEM.L D0-D3/D7/A0-A1,-(A7)
00001B68                          1555              
00001B68  41F9 000023A8           1556              LEA ESTDCLDS,A0                 ; Apunta al inicio de ESTDCLDS
00001B6E  303C 0300               1557              MOVE.W #TCELDAS,D0              ; Número total de celdas
00001B72                          1558  
00001B72                          1559  .CLNCLDS:
00001B72  4218                    1560              CLR.B (A0)+                     ; Coloca 0 en cada celda
00001B74  5340                    1561              SUBI.W #1,D0                    ; Decrementa el contador
00001B76  66FA                    1562              BNE .CLNCLDS                    ; Repite hasta que esten vacías
00001B78                          1563              
00001B78                          1564              
00001B78  3239 00002374           1565              MOVE.W  (CBZPOSX),D1            ; Vemos la posición de la cabexa             
00001B7E  3439 00002376           1566              MOVE.W  (CBZPOSY),D2
00001B84  4EB8 1A24               1567              JSR     CINDMTRZ
00001B88  4EB8 1A5E               1568              JSR     CBZOCPD                 ; Marca la posición de la cabeza
00001B8C                          1569              
00001B8C  3239 00002380           1570              MOVE.W  (SGMPOSX),D1
00001B92  3439 00002382           1571              MOVE.W  (SGMPOSY),D2            ; Vemos la posición del segmento
00001B98  4EB8 1A24               1572              JSR     CINDMTRZ
00001B9C  4EB8 1A8A               1573              JSR     SGMOCPD                 ; Marca la posición del segmento
00001BA0                          1574              
00001BA0  3239 00002384           1575              MOVE.W  (SGMPOSX2),D1
00001BA6  3439 00002386           1576              MOVE.W  (SGMPOSY2),D2           ; Vemos la posición del segmento 2
00001BAC  4EB8 1A24               1577              JSR     CINDMTRZ
00001BB0  4EB8 1A8A               1578              JSR     SGMOCPD                 ; Marca la posición del segmento 2
00001BB4                          1579              
00001BB4  3239 0000237C           1580              MOVE.W  (COLPOSX),D1            ; Vemos la posicion de la cola
00001BBA  3439 0000237E           1581              MOVE.W  (COLPOSY),D2
00001BC0  4EB8 1A24               1582              JSR     CINDMTRZ
00001BC4  4EB8 1AA0               1583              JSR     COLOCPD                 ; Marcamos la posicion de la cola
00001BC8                          1584              
00001BC8  3239 00002370           1585              MOVE.W  (MNZPOSX),D1            ; Vemos la posición de la manzana
00001BCE  3439 00002372           1586              MOVE.W  (MNZPOSY),D2
00001BD4  4EB8 1A24               1587              JSR     CINDMTRZ
00001BD8  4EB8 1AB6               1588              JSR     MNZOCPD                 ; Marca la posición de la manzana
00001BDC                          1589              
00001BDC  5379 0000238A           1590              SUBQ.W  #1,(JGOTIM)             ; Restamos 1 al timer
00001BE2  0C79 0000 0000238A      1591              CMP     #0,(JGOTIM)             ; Mira si ha terminado el tiempo
00001BEA  6700 0006               1592              BEQ     .GAMEOVER
00001BEE  6000 0136               1593              BRA     .FIN                    ; Saltamos si no ha acabado
00001BF2                          1594              
00001BF2                          1595  .GAMEOVER   
00001BF2  1E3C 0001               1596              MOVE.B  #SNDGMOV,D7             ; Pone el sonido game over
00001BF6  4E42                    1597              TRAP    #SNDPLTN
00001BF8  33FC 0003 00002394      1598              MOVE.W  #3,(STANEXT)
00001C00                          1599              
00001C00                          1600  
00001C00  4280                    1601              CLR.L   D0                      ; Borra los registros
00001C02  4281                    1602              CLR.L   D1
00001C04  4282                    1603              CLR.L   D2
00001C06  4283                    1604              CLR.L   D3
00001C08  42B9 0000239A           1605              CLR.L   (BFFLEC)
00001C0E                          1606              
00001C0E                          1607              ; Escribe la puntuación
00001C0E  103C 0032               1608              MOVE.B  #50,D0                  ; Cerramos todos los archivos
00001C12  4E4F                    1609              TRAP    #15
00001C14                          1610  
00001C14                          1611               ; Verifica si el archivo existe
00001C14  43F9 00001D5E           1612              LEA     .FILE,A1                ; Dirección del nombre del archivo
00001C1A  103C 003B               1613              MOVE.B  #59,D0                  ; Verifica si existe el archivo
00001C1E  4E4F                    1614              TRAP    #15
00001C20  B07C 0000               1615              CMP.W   #0,D0                   ; Verifica si el archivo existe
00001C24  6700 0006               1616              BEQ     .ABRIR_ARCHIVO          ; Si existe, abrir archivo
00001C28  6000 0062               1617              BRA     .CREAR_ARCHIVO          ; Si no existe, crear archivo
00001C2C                          1618  
00001C2C                          1619  .ABRIR_ARCHIVO
00001C2C                          1620              ; Abre el archivo existente
00001C2C  103C 0033               1621              MOVE.B  #51,D0                  ; Abre el archivo existente
00001C30  4E4F                    1622              TRAP    #15
00001C32  B07C 0000               1623              CMP.W   #0,D0                   ; Verifica si ha funcionado
00001C36  6600 0120               1624              BNE     .ERROR                  ; Si falla, ir a ERROR
00001C3A  23C1 00002396           1625              MOVE.L  D1,FILEID               ; Guardar el File-ID
00001C40                          1626  
00001C40                          1627              ; Lee hasta encontrar el marcador `#`
00001C40  2239 00002396           1628              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C46  7400                    1629              MOVE.L  #0,D2                   ; Posiciona al inicio del archivo
00001C48  103C 0037               1630              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001C4C  4E4F                    1631              TRAP    #15
00001C4E                          1632  
00001C4E                          1633  .BUSCAR_FINAL
00001C4E  43F9 0000239A           1634              LEA     BFFLEC,A1               ; Buffer para leer datos
00001C54  2239 00002396           1635              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C5A  7401                    1636              MOVE.L  #1,D2                   ; Leer 1 byte
00001C5C  103C 0035               1637              MOVE.B  #53,D0                  ; Leer archivo
00001C60  4E4F                    1638              TRAP    #15
00001C62  B07C 0001               1639              CMP.W   #1,D0                   ; Verificar si alcanzamos EOF
00001C66  6700 003C               1640              BEQ     .ESCRIBIR               ; Si alcanzamos EOF
00001C6A  0C39 0023 0000239A      1641              CMP.B   #'#',(BFFLEC)           ; Comparar con el marcador `#`
00001C72  6700 0006               1642              BEQ     .POSICIONAR             ; Si encontramos el marcador
00001C76  5283                    1643              ADDQ.L  #1,D3                   ; Incrementar contador de bytes
00001C78  60D4                    1644              BRA     .BUSCAR_FINAL           ; Continuar buscando el marcador
00001C7A                          1645  
00001C7A                          1646  .POSICIONAR
00001C7A                          1647              ; Posicionarse al marcador para sobrescribir
00001C7A  2403                    1648              MOVE.L  D3,D2                   ; Cargar la posición del marcador
00001C7C  2239 00002396           1649              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001C82  103C 0037               1650              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001C86  4E4F                    1651              TRAP    #15
00001C88  6000 001A               1652              BRA     .ESCRIBIR               ; Ir a escribir datos
00001C8C                          1653  
00001C8C                          1654  .CREAR_ARCHIVO
00001C8C                          1655              ; Crea un archivo nuevo
00001C8C  103C 0034               1656              MOVE.B  #52,D0                  ; Abrir o crear archivo
00001C90  4E4F                    1657              TRAP    #15
00001C92  B07C 0000               1658              CMP.W   #0,D0                   ; Verifica si ha funcionado
00001C96  6600 00C0               1659              BNE     .ERROR                  ; Si falla, ir a ERROR
00001C9A  23C1 00002396           1660              MOVE.L  D1,FILEID               ; Guardar el File-ID
00001CA0  6000 0002               1661              BRA     .ESCRIBIR               ; Ir directamente a escribir datos
00001CA4                          1662  
00001CA4                          1663  .ESCRIBIR
00001CA4                          1664              ; Convierte el número en caracteres ASCI y los escribe uno por uno
00001CA4  41F9 00002388           1665              LEA     JGOPNTS,A0              ; Dirección del número
00001CAA  3010                    1666              MOVE.W  (A0),D0                 ; Carga el número en D0
00001CAC  4EB9 00001D2C           1667              JSR     .CONVERTIR_NUMERO       ; Convierte el número a ASCII
00001CB2                          1668  
00001CB2                          1669              ; Escribe los caracteres del buffer
00001CB2  41F9 0000239B           1670              LEA     ASCBFF,A0               ; Dirección del buffer
00001CB8                          1671              
00001CB8                          1672  
00001CB8                          1673  .ESCRIBIR_BUCLE:
00001CB8  1010                    1674              MOVE.B  (A0),D0                 ; Lee el carácter del buffer
00001CBA  6700 0028               1675              BEQ     .ESCRIBIR_FIN_BLOQUE    ; Si terminador NULL
00001CBE  2403                    1676              MOVE.L  D3,D2                   ; Carga la posición actual
00001CC0  2239 00002396           1677              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
00001CC6  103C 0037               1678              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001CCA  4E4F                    1679              TRAP    #15                     ; Posicionar antes de escribir
00001CCC  103C 0036               1680              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001CD0  43D0                    1681              LEA     (A0),A1
00001CD2  7401                    1682              MOVE.L  #1,D2
00001CD4  4E4F                    1683              TRAP    #15                     ; Escribe el carácter
00001CD6  B07C 0000               1684              CMP.W   #0,D0                   ; Verifica si ha funcionado
00001CDA  6600 007C               1685              BNE     .ERROR                  ; Si falla, ir a ERROR
00001CDE  5283                    1686              ADDQ.L  #1,D3                   ; Incrementa la posición
00001CE0  1018                    1687              MOVE.B  (A0)+,D0                ; Restaura el carácter actual
00001CE2  60D4                    1688              BRA     .ESCRIBIR_BUCLE         ; Continua con el siguiente
00001CE4                          1689  
00001CE4                          1690  .ESCRIBIR_FIN_BLOQUE
00001CE4                          1691              ; Escribe delimitador `?`
00001CE4  43F9 00001D69           1692              LEA     .TXT1,A1
00001CEA  4EB9 00001D00           1693              JSR     .ESCRIBIR_CARACTER
00001CF0                          1694              ; Escribe marcador `#`
00001CF0  43F9 00001D6B           1695              LEA     .TXT2,A1
00001CF6  4EB9 00001D00           1696              JSR     .ESCRIBIR_CARACTER
00001CFC  6000 001C               1697              BRA     .FINESC
00001D00                          1698  
00001D00                          1699  .ESCRIBIR_CARACTER:
00001D00  2403                    1700              MOVE.L  D3,D2                   ; Carga la posición actual
00001D02  2239 00002396           1701              MOVE.L  FILEID,D1               ; File-ID del archivo
00001D08  103C 0037               1702              MOVE.B  #55,D0                  ; Tarea 55: Posicionar archivo
00001D0C  4E4F                    1703              TRAP    #15                     ; Posicionar antes de escribir
00001D0E  103C 0036               1704              MOVE.B  #54,D0                  ; Tarea 54: Escribir archivo
00001D12  7401                    1705              MOVE.L  #1,D2
00001D14  4E4F                    1706              TRAP    #15                     ; Escribe el carácter
00001D16  5283                    1707              ADDQ.L  #1,D3                   ; Incrementa la posición
00001D18  4E75                    1708              RTS
00001D1A                          1709  
00001D1A                          1710  .FINESC
00001D1A                          1711              ; Cierra el archivo
00001D1A  2239 00002396           1712              MOVE.L  FILEID,D1               ; File-ID del archivo
00001D20  103C 0038               1713              MOVE.B  #56,D0                  ; Cerrar archivo
00001D24  4E4F                    1714              TRAP    #15
00001D26                          1715  .FIN
00001D26  4CDF 038F               1716              MOVEM.L (A7)+,D0-D3/D7/A0-A1
00001D2A  4E75                    1717              RTS
00001D2C                          1718  
00001D2C                          1719  .CONVERTIR_NUMERO
00001D2C  48E7 F040               1720               MOVEM.L D0-D3/A1,-(A7)
00001D30                          1721  
00001D30                          1722              ; Inicialización
00001D30  43F9 0000239B           1723              LEA     ASCBFF,A1              ; Dirección del buffer
00001D36  740A                    1724              MOVEQ   #10,D2                 ; Base decimal (10)
00001D38                          1725              
00001D38                          1726              ; Convierte el número hexadecimal a decimal y guarda dígitos
00001D38                          1727  .CONVERTDELO:
00001D38  80C2                    1728              DIVU    D2,D0             ; Divide D0 por 10: cociente en D0,
00001D3A  3600                    1729              MOVE.W  D0,D3             ; residuo en bits bajos
00001D3C  C0BC 0000000F           1730              AND.L   #$000F,D0         ; Trabaja con el residuo (0-9)
00001D42  0600 0030               1731              ADD.B   #48,D0            ; Convertir residuo a carácter ASCII
00001D46  12C0                    1732              MOVE.B  D0,(A1)+          ; Almacena el carácter en el buffer
00001D48  3003                    1733              MOVE.W  D3,D0
00001D4A  4A43                    1734              TST.W   D3                ; Verifica si el cociente es 0
00001D4C  66EA                    1735              BNE     .CONVERTDELO      ; Si no es 0, continuar con el próximo
00001D4E                          1736              
00001D4E                          1737              ; Añade terminador NULL al final
00001D4E  12FC 0000               1738              MOVE.B  #0,(A1)+               ; Finalizar cadena con NULL
00001D52                          1739              
00001D52  4CDF 020F               1740              MOVEM.L (A7)+,D0-D3/A1
00001D56  4E75                    1741              RTS                             
00001D58                          1742  .ERROR
00001D58  103C 0009               1743              MOVE.B  #9,D0          ; Terminar el programa
00001D5C  4E4F                    1744              TRAP    #15
00001D5E                          1745     
00001D5E                          1746              
00001D5E                          1747              
00001D5E= 50 55 4E 54 4F 53 ...   1748  .FILE       DC.B    'PUNTOS.TXT',0 
00001D69= 3F 00                   1749  .TXT1       DC.B    '?',0
00001D6B= 23 00                   1750  .TXT2       DC.B    '#',0  
00001D6E                          1751              DS.W    0        
00001D6E                          1752  
00001D6E                          1753  
00001D6E                          1754  
00001D6E                          1755  
00001D6E                          1756  
00001D6E                          1757  ;-----------------------------------------------------------------------------
00001D6E                          1758  MTZPLOT
00001D6E                          1759  ; DIBUJA LA MATRIZ CASILLA A CASILLA
00001D6E                          1760  ; INPUT    : NONE
00001D6E                          1761  ; OUTPUT   : NONE
00001D6E                          1762  ; MODIFIES : Variable ESTCLDS que contiene el estado de las celdas
00001D6E                          1763  ; ----------------------------------------------------------------------------
00001D6E  48E7 F080               1764              MOVEM.L D0-D3/A0,-(A7)
00001D72                          1765  
00001D72  4240                    1766              CLR.W   D0
00001D74  4243                    1767              CLR.W   D3
00001D76  41F9 000023A8           1768              LEA     ESTDCLDS,A0            ; Apunta al inicio de ESTDCLDS
00001D7C  303C 0300               1769              MOVE.W  #TCELDAS,D0            ; Número total de celdas
00001D80  363C 0000               1770              MOVE.W  #0,D3                  ; Lo utilizamos para saber en el indice que nos encontramos
00001D84  4241                    1771              CLR.W   D1
00001D86  4242                    1772              CLR.W   D2
00001D88                          1773              
00001D88                          1774  
00001D88                          1775  PLOTCLDS:
00001D88  1218                    1776              MOVE.B  (A0)+,D1                ; Movemos el valor de la celda a D1
00001D8A  B23C 0000               1777              CMP.B   #0,D1
00001D8E  6700 0034               1778              BEQ     PLOTVAC                 ; Salta a dibujar posición vacía
00001D92  B23C 0001               1779              CMP.B   #1,D1 
00001D96  6700 0032               1780              BEQ     PLOTCOL                 ; Salta a dibujar cola
00001D9A  B23C 0002               1781              CMP.B   #2,D1
00001D9E  6700 0030               1782              BEQ     PLOTSEG                 ; Salta a dibujar segmento
00001DA2  B23C 0003               1783              CMP.B   #3,D1
00001DA6  6700 0016               1784              BEQ     PLOTCBZ                 ; Salta a dibujar cabeza
00001DAA  B23C 0004               1785              CMP.B   #4,D1                 
00001DAE  6700 0026               1786              BEQ     PLOTAPPLE               ; Salta a dibujar manzana
00001DB2                          1787    
00001DB2                          1788  DONEPLOT            
00001DB2  5243                    1789              ADDQ    #1,D3                   ; Aumentamos el indice de celda
00001DB4  5340                    1790              SUBI.W  #1,D0                   ; Decrementa el contador de celdas
00001DB6  66D0                    1791              BNE     PLOTCLDS                ; Repite hasta que esten vacías
00001DB8  4CDF 010F               1792              MOVEM.L (A7)+,D0-D3/A0
00001DBC  4E75                    1793              RTS
00001DBE                          1794  PLOTCBZ:
00001DBE  4EB8 1576               1795              JSR     HEADPLOT
00001DC2  60EE                    1796              BRA     DONEPLOT
00001DC4                          1797  
00001DC4                          1798  PLOTVAC:    
00001DC4  4EB8 1B26               1799              JSR     FONPLOT
00001DC8  60E8                    1800              BRA     DONEPLOT                ; Dibujado hecho 
00001DCA                          1801  
00001DCA                          1802  PLOTCOL:   
00001DCA  4EB8 175A               1803              JSR     TAILPLOT 
00001DCE  60E2                    1804              BRA     DONEPLOT                ; Dibujado hecho 
00001DD0                          1805              
00001DD0                          1806  PLOTSEG:    
00001DD0  4EB8 16BA               1807              JSR     SEGPLOT
00001DD4  60DC                    1808              BRA     DONEPLOT                ; Dibujado hecho   
00001DD6                          1809  
00001DD6                          1810  PLOTAPPLE:
00001DD6  4EB8 180A               1811              JSR     APPLEPLOT
00001DDA  60D6                    1812              BRA     DONEPLOT            
00001DDC                          1813  
00001DDC                          1814  
00001DDC                          1815  
00001DDC                          1816  
00001DDC                          1817  
00001DDC                          1818  
00001DDC                          1819  
00001DDC                          1820  
00001DDC                          1821  
00001DDC                          1822  
00001DDC                          1823  
00001DDC                          1824  
00001DDC                          1825  
00001DDC                          1826  
00001DDC                          1827  
00001DDC                          1828  
00001DDC                          1829  
00001DDC                          1830  
00001DDC                          1831  
00001DDC                          1832  
00001DDC                          1833  
00001DDC                          1834  
00001DDC                          1835  
00001DDC                          1836  
00001DDC                          1837  
00001DDC                          1838  
00001DDC                          1839  -------------------- end include --------------------
00001DDC                          1840              INCLUDE 'INTRO.X68'
00001DDC                          1841  ; ----------------------------------------------------------------------------
00001DDC                          1842  ; PANTALLA INTRO
00001DDC                          1843  ; ----------------------------------------------------------------------------
00001DDC                          1844  
00001DDC                          1845  ; ----------------------------------------------------------------------------
00001DDC                          1846  ISCINIT
00001DDC                          1847  ; Inicializa la pantalla INTRO
00001DDC                          1848  ; INPUT    : NONE
00001DDC                          1849  ; OUTPUT   : NONE
00001DDC                          1850  ; MODIFIES : ISCTIMER
00001DDC                          1851  ; ----------------------------------------------------------------------------
00001DDC                          1852  
00001DDC  4279 0000238C           1853              CLR.W   (ISCTIMER)
00001DE2                          1854              
00001DE2  4E75                    1855              RTS
00001DE4                          1856  
00001DE4                          1857  ; ----------------------------------------------------------------------------
00001DE4                          1858  ISCUPD
00001DE4                          1859  ; Actualiza la pantalla INTRO
00001DE4                          1860  ; INPUT    : NONE
00001DE4                          1861  ; OUTPUT   : NONE
00001DE4                          1862  ; MODIFIES : STANEXT, ISCTIMER
00001DE4                          1863  ; ----------------------------------------------------------------------------
00001DE4                          1864  
00001DE4  48E7 FC00               1865              MOVEM.L D0-D5,-(A7)
00001DE8                          1866              
00001DE8  323C 0107               1867              MOVE.W  #$0107,D1               ; Habilita IRQ
00001DEC  303C 003C               1868              MOVE.W  #60,D0
00001DF0  4E4F                    1869              TRAP    #15
00001DF2                          1870              
00001DF2                          1871  .MAINLOOP            
00001DF2  123C 0000               1872              MOVE.B  #0,D1                   ; Lee el estado actual del ratón
00001DF6  303C 003D               1873              MOVE.   #61,D0
00001DFA  4E4F                    1874              TRAP    #15
00001DFC                          1875              
00001DFC  2401                    1876              MOVE.L  D1,D2                   ; Guarda las coordenadas en D2
00001DFE  0200 0001               1877              ANDI.B  #1,D0                   ; Comprueba el click izquierdo
00001E02  4A40                    1878              TST     D0
00001E04  6700 0032               1879              BEQ     .CONT
00001E08                          1880              
00001E08                          1881              ; Miramos si se ha pulsado el texto correspondiente
00001E08  263C 00000108           1882              MOVE.L  #$108,D3                 ; (640-112)/2=264 -> Coordenada x
00001E0E  7819                    1883              MOVE.L  #$19,D4                  ; Coordenada Y del texto
00001E10                          1884              
00001E10  2A02                    1885              MOVE.L  D2,D5                   ; Coordenada Y del ratón
00001E12  0285 0000FFFF           1886              ANDI.L  #$0000FFFF,D5
00001E18  BA84                    1887              CMP.L   D4,D5
00001E1A  6D00 001C               1888              BLT     .CONT                   ; Si Y < Texto
00001E1E                          1889  
00001E1E  2A02                    1890              MOVE.L  D2,D5                   ; Coordenada X del ratón
00001E20  0285 0000FFFF           1891              ANDI.L  #$FFFF,D5               ; Extrae X (bits bajos)
00001E26  BA83                    1892              CMP.L   D3,D5
00001E28  6D00 000E               1893              BLT     .CONT                   ; Si X < Texto
00001E2C                          1894              
00001E2C                          1895              ; Si el click está dentro del area de texto
00001E2C  33FC 0002 00002394      1896              MOVE.W  #2,(STANEXT)            ; Iniciar el juego
00001E34  6000 0034               1897              BRA     .DONE            
00001E38                          1898              
00001E38                          1899  .CONT       
00001E38                          1900  
00001E38  103C 0013               1901              MOVE.B  #19,D0                  ; Detecta las teclas
00001E3C  7250                    1902              MOVE.L  #'P',D1                 ; Código ASCII de la tecla P
00001E3E  4E4F                    1903              TRAP    #15
00001E40  0801 0000               1904              BTST.L  #0,D1                   ; Verifica si la tecla P pulsada
00001E44  6700 000A               1905              BEQ     .END                    ; Si no está presionada, continua
00001E48  33FC 0004 00002394      1906              MOVE.W  #4,(STANEXT)            ; Cambia STANEXT a 4 si se pulsa P
00001E50                          1907  .END            
00001E50  5279 0000238C           1908              ADDQ.W  #1,(ISCTIMER)
00001E56  0C79 01F4 0000238C      1909              CMP.W   #ISCMAXTM,(ISCTIMER)
00001E5E  6D00 000A               1910              BLT     .DONE
00001E62  33FC 0001 00002394      1911              MOVE.W  #1,(STANEXT)
00001E6A                          1912              
00001E6A                          1913  .DONE       
00001E6A  4CDF 003F               1914              MOVEM.L (A7)+,D0-D5
00001E6E  4E75                    1915              RTS
00001E70                          1916  
00001E70                          1917  ; ----------------------------------------------------------------------------
00001E70                          1918  ISCPLOT
00001E70                          1919  ; Dibuja la pantalla de INTRO
00001E70                          1920  ; INPUT    : NONE
00001E70                          1921  ; OUTPUT   : Pantalla de INTRO
00001E70                          1922  ; MODIFIES : NONE
00001E70                          1923  ; ----------------------------------------------------------------------------
00001E70  48E7 C080               1924              MOVEM.L D0-D1/A0,-(A7)
00001E74                          1925                          
00001E74  4281                    1926              CLR.L   D1
00001E76  103C 0051               1927              MOVE.B  #81,D0
00001E7A  4E4F                    1928              TRAP    #15
00001E7C                          1929              
00001E7C  41F9 00001EB4           1930              LEA     .TXT1,A0
00001E82  103C 000A               1931              MOVE.B  #10,D0
00001E86  4EB8 119E               1932              JSR     UTLPRINT
00001E8A                          1933              
00001E8A  0839 0004 000026B1      1934              BTST.B  #4,(SCRCYCCT)
00001E92  6700 001A               1935              BEQ     .DONE
00001E96                          1936              
00001E96  41F9 00001EC6           1937              LEA     .TXT2,A0
00001E9C  103C 0017               1938              MOVE.B  #23,D0
00001EA0  4EB8 119E               1939              JSR     UTLPRINT
00001EA4                          1940              
00001EA4  41F9 00001EDA           1941              LEA     .TXT3,A0
00001EAA  4EB8 119E               1942              JSR     UTLPRINT
00001EAE                          1943              
00001EAE  4CDF 0103               1944  .DONE       MOVEM.L (A7)+,D0-D1/A0
00001EB2                          1945  
00001EB2  4E75                    1946              RTS
00001EB4                          1947              
00001EB4= 53 4E 41 4B 45 20 ...   1948  .TXT1       DC.B    'SNAKE TIMER 68000',0
00001EC6= 43 4C 49 43 4B 20 ...   1949  .TXT2       DC.B    'CLICK HERE TO START',0
00001EDA= 50 52 45 53 53 20 ...   1950  .TXT3       DC.B    'PRESS KEY P TO SEE SCORE TABLE',0
00001EFA                          1951              DS.W    0
00001EFA                          1952  
00001EFA                          1953  
00001EFA                          1954  
00001EFA                          1955  
00001EFA                          1956  
00001EFA                          1957  
00001EFA                          1958  
00001EFA                          1959  
00001EFA                          1960  
00001EFA                          1961  
00001EFA                          1962  
00001EFA                          1963  
00001EFA                          1964  
00001EFA                          1965  
00001EFA                          1966  
00001EFA                          1967  
00001EFA                          1968  
00001EFA                          1969  
00001EFA                          1970  -------------------- end include --------------------
00001EFA                          1971              INCLUDE 'INSTRUCTIONS.X68'
00001EFA                          1972  ; ----------------------------------------------------------------------------
00001EFA                          1973  ; PANTALLA DE INSTRUCCIONES
00001EFA                          1974  ; ----------------------------------------------------------------------------
00001EFA                          1975  
00001EFA                          1976  ; ----------------------------------------------------------------------------
00001EFA                          1977  INSINIT
00001EFA                          1978  ; Inicializa la pantalla de instrucciones
00001EFA                          1979  ; INPUT    : NONE
00001EFA                          1980  ; OUTPUT   : NONE
00001EFA                          1981  ; MODIFIES : INSTIMER
00001EFA                          1982  ; ----------------------------------------------------------------------------
00001EFA                          1983  
00001EFA  4279 0000238E           1984              CLR.W   (INSTIMER)              ; Reseteamos el timer
00001F00  4E75                    1985              RTS
00001F02                          1986  
00001F02                          1987  ; ----------------------------------------------------------------------------
00001F02                          1988  INSUPD
00001F02                          1989  ; Actualiza la pantalla de instrucciones
00001F02                          1990  ; INPUT    : NONE
00001F02                          1991  ; OUTPUT   : NONE
00001F02                          1992  ; MODIFIES : INSTIMER, STANEXT
00001F02                          1993  ; ----------------------------------------------------------------------------
00001F02                          1994  
00001F02  5279 0000238E           1995              ADDQ.W  #1,(INSTIMER)
00001F08  0C79 01F4 0000238E      1996              CMP.W   #INSMAXTM,(INSTIMER)
00001F10  6D00 0008               1997              BLT     .DONE
00001F14  4279 00002394           1998              CLR.W   (STANEXT)
00001F1A                          1999  .DONE
00001F1A  4E75                    2000              RTS
00001F1C                          2001  
00001F1C                          2002  ; ----------------------------------------------------------------------------
00001F1C                          2003  INSPLOT
00001F1C                          2004  ; Dibujado de la pantalla de instrucciones
00001F1C                          2005  ; INPUT    : NONE
00001F1C                          2006  ; OUTPUT   : Pantalla de instrucciones
00001F1C                          2007  ; MODIFIES : NONE
00001F1C                          2008  ; ----------------------------------------------------------------------------
00001F1C                          2009  
00001F1C  48E7 C0C0               2010              MOVEM.L D0-D1/A0-A1,-(A7)
00001F20                          2011                          
00001F20  103C 000B               2012              MOVE.B  #11,D0
00001F24  43F9 0000209E           2013              LEA     .TXTLST,A1
00001F2A  2219                    2014  .LOOP       MOVE.L  (A1)+,D1
00001F2C  6700 000A               2015              BEQ     .DONE
00001F30  2041                    2016              MOVE.L  D1,A0
00001F32  4EB8 119E               2017              JSR     UTLPRINT
00001F36  60F2                    2018              BRA     .LOOP
00001F38                          2019              
00001F38  4CDF 0303               2020  .DONE       MOVEM.L (A7)+,D0-D1/A0-A1
00001F3C  4E75                    2021              RTS
00001F3E                          2022              
00001F3E= 57 45 4C 43 4F 4D ...   2023  .TXT1       DC.B    'WELCOME TO THE GAME OF SNAKE TIMER 68000!',0
00001F68= 59 4F 55 52 20 47 ...   2024  .TXT2       DC.B    'YOUR GOAL IN THIS GAME IS TO EAT AS MUCH APPLES AS THE TIMER ALLOWS YOU',0
00001FB0= 45 41 43 48 20 41 ...   2025  .TXT3       DC.B    'EACH APPLE EATEN INCREASES THE TIME YOU CAN PLAY',0
00001FE1= 54 4F 20 54 48 49 ...   2026  .TXT4       DC.B    'TO THIS END, MOVE THE SNAKE WITH THE ARROWS',0
0000200D= 48 4F 57 20 54 4F ...   2027  .TXT5       DC.B    'HOW TO DO IT? YOU MAY ASK.',0
00002028= 49 54 20 49 53 20 ...   2028  .TXT6       DC.B    'IT IS EASY: JUST USE THE UP, DOWN, LEFT, RIGHT KEYS TO MOVE THE SNAKE',0
0000206E= 42 45 20 43 41 52 ...   2029  .TXT7       DC.B    'BE CAREFUL WITH THE WALLS! TRY NOT TO HIT THEM.',0
0000209E= 00001F3E 00001F68 ...   2030  .TXTLST     DC.L    .TXT1,.TXT2,.TXT3,.TXT4,.TXT5,.TXT6,.TXT7,0
000020BE                          2031  
000020BE                          2032  
000020BE                          2033  
000020BE                          2034  
000020BE                          2035  
000020BE                          2036  
000020BE                          2037  
000020BE                          2038  
000020BE                          2039  
000020BE                          2040  
000020BE                          2041  
000020BE                          2042  
000020BE                          2043  
000020BE                          2044  
000020BE                          2045  
000020BE                          2046  
000020BE                          2047  -------------------- end include --------------------
000020BE                          2048              INCLUDE 'GAMEOVER.X68'
000020BE                          2049  ; ----------------------------------------------------------------------------
000020BE                          2050  ; PANTALLA GAME OVER
000020BE                          2051  ; ----------------------------------------------------------------------------
000020BE                          2052  
000020BE                          2053  ; ----------------------------------------------------------------------------
000020BE                          2054  GOVINIT
000020BE                          2055  ; Inicializa la pantalla GAME OVER
000020BE                          2056  ; INPUT    : NONE
000020BE                          2057  ; OUTPUT   : NONE
000020BE                          2058  ; MODIFIES : GOVTIMER
000020BE                          2059  ; ----------------------------------------------------------------------------
000020BE                          2060  
000020BE  4279 00002390           2061              CLR.W  (GOVTIMER)
000020C4  4E75                    2062              RTS
000020C6                          2063  
000020C6                          2064  ; ----------------------------------------------------------------------------
000020C6                          2065  GOVUPD
000020C6                          2066  ; Actualiza la pantalla GAME OVER
000020C6                          2067  ; INPUT    : NONE
000020C6                          2068  ; OUTPUT   : NONE
000020C6                          2069  ; MODIFIES : STANEXT y GOVTIMER
000020C6                          2070  ; ----------------------------------------------------------------------------
000020C6  48E7 C000               2071              MOVEM.L D0-D1,-(A7)
000020CA                          2072              
000020CA  103C 0013               2073              MOVE.B  #19,D0                  ; Detecta la tecla S
000020CE  7253                    2074              MOVE.L  #'S',D1                 
000020D0  4E4F                    2075              TRAP    #15
000020D2  0801 0000               2076              BTST.L  #0,D1                   ; Verifica si la tecla se pulsa
000020D6  6700 0008               2077              BEQ     .CONT                   ; Si no está presionada, continua
000020DA  4279 00002394           2078              CLR.W   (STANEXT)               ; Cambia STANEXT a 0
000020E0                          2079  
000020E0                          2080  .CONT
000020E0  5279 00002390           2081              ADDQ.W  #1,(GOVTIMER)
000020E6  0C79 01F4 00002390      2082              CMP.W   #500,(GOVTIMER)
000020EE  6D00 0008               2083              BLT     .DONE
000020F2  4279 00002394           2084              CLR.W   (STANEXT)
000020F8                          2085  .DONE
000020F8  4CDF 0003               2086              MOVEM.L (A7)+,D0-D1
000020FC                          2087              
000020FC  4E75                    2088              RTS
000020FE                          2089              
000020FE                          2090  ; ----------------------------------------------------------------------------
000020FE                          2091  GOVPLOT
000020FE                          2092  ; Dibuja la pantalla GAME OVER
000020FE                          2093  ; INPUT    : NONE
000020FE                          2094  ; OUTPUT   : Pantalla GAME OVER
000020FE                          2095  ; MODIFIES : NONE
000020FE                          2096  ; ----------------------------------------------------------------------------
000020FE  48E7 C080               2097              MOVEM.L D0-D1/A0,-(A7)
00002102                          2098  
00002102  4281                    2099              CLR.L   D1
00002104  103C 0051               2100              MOVE.B  #81,D0
00002108  4E4F                    2101              TRAP    #15
0000210A                          2102  
0000210A  41F9 0000212C           2103              LEA     .TXT1,A0
00002110  103C 000A               2104              MOVE.B  #10,D0
00002114  4EB8 119E               2105              JSR     UTLPRINT
00002118                          2106  
00002118  41F9 00002136           2107              LEA     .TXT2,A0
0000211E  103C 0014               2108              MOVE.B  #20,D0
00002122  4EB8 119E               2109              JSR     UTLPRINT
00002126                          2110  
00002126  4CDF 0103               2111  .DONE       MOVEM.L (A7)+,D0-D1/A0
0000212A                          2112  
0000212A  4E75                    2113              RTS
0000212C                          2114  
0000212C= 47 41 4D 45 20 4F ...   2115  .TXT1       DC.B    'GAME OVER',0
00002136= 57 41 49 54 20 54 ...   2116  .TXT2       DC.B    'WAIT TO RETURN TO MAIN PAGE OR PRESS KEY S',0
00002162                          2117              DS.W    0
00002162                          2118  
00002162                          2119  
00002162                          2120  
00002162                          2121  
00002162                          2122  
00002162                          2123  
00002162                          2124  
00002162                          2125  
00002162                          2126  
00002162                          2127  
00002162                          2128  
00002162                          2129  
00002162                          2130  
00002162                          2131  
00002162                          2132  
00002162                          2133  
00002162                          2134  
00002162                          2135  
00002162                          2136  
00002162                          2137  
00002162                          2138  
00002162                          2139  
00002162                          2140  -------------------- end include --------------------
00002162                          2141              INCLUDE 'TABLE.X68'
00002162                          2142  ; ----------------------------------------------------------------------------
00002162                          2143  ; PANTALLA DE TABLA
00002162                          2144  ; ----------------------------------------------------------------------------
00002162                          2145  
00002162                          2146  ; ----------------------------------------------------------------------------
00002162                          2147  TABINIT
00002162                          2148  ; TABLE SCREEN INIT
00002162                          2149  ; INPUT    : NONE
00002162                          2150  ; OUTPUT   : NONE
00002162                          2151  ; MODIFIES : NONE
00002162                          2152  ; ----------------------------------------------------------------------------
00002162                          2153  
00002162  4E75                    2154              RTS
00002164                          2155  
00002164                          2156  ; ----------------------------------------------------------------------------
00002164                          2157  TABUPD
00002164                          2158  ; Actualiza la pantalla de tabla
00002164                          2159  ; INPUT    : NONE
00002164                          2160  ; OUTPUT   : NONE
00002164                          2161  ; MODIFIES : STANEXT
00002164                          2162  ; ----------------------------------------------------------------------------
00002164  103C 0013               2163              MOVE.B  #19,D0                  ; Detecta las teclas
00002168  7253                    2164              MOVE.L  #'S',D1                 ; Código ASCII de la tecla S
0000216A  4E4F                    2165              TRAP    #15
0000216C  0801 0000               2166              BTST.L  #0,D1                   ; Verificar si se pulsa S
00002170  6700 0008               2167              BEQ     END                     ; Si no está presionada, continua
00002174                          2168  
00002174  4279 00002394           2169              CLR.W (STANEXT)
0000217A                          2170  END:
0000217A  4E75                    2171              RTS
0000217C                          2172  
0000217C                          2173  ; ----------------------------------------------------------------------------
0000217C                          2174  TABPLOT
0000217C                          2175  ; Dibuja la pantalla de tabla
0000217C                          2176  ; INPUT    : NONE
0000217C                          2177  ; OUTPUT   : Tabla
0000217C                          2178  ; MODIFIES : NONE
0000217C                          2179  ; ----------------------------------------------------------------------------
0000217C                          2180              
0000217C  48E7 F0C0               2181              MOVEM.L D0-D3/A0-A1,-(A7)
00002180                          2182  
00002180  4243                    2183              CLR.W   D3                      ; Inicializa contador de partidas
00002182                          2184  
00002182  103C 0032               2185              MOVE.B  #50,D0                  ; Cierra todos los archivos
00002186  4E4F                    2186              TRAP    #15
00002188                          2187  
00002188                          2188              ; Abre el archivo existente
00002188  43F9 0000226E           2189              LEA     .FILE,A1                ; Dirección del nombre del archivo
0000218E  103C 0033               2190              MOVE.B  #51,D0                  ; Abre el archivo existente
00002192  4E4F                    2191              TRAP    #15
00002194  B07C 0000               2192              CMP.W   #0,D0                   ; Verifica si ha funcionado
00002198  6600 F3C6               2193              BNE     ERROR                   ; Salta a error si D0 != 0
0000219C  23C1 00002396           2194              MOVE.L  D1,FILEID               ; Guarda el File-ID
000021A2                          2195  
000021A2  4281                    2196              CLR.L   D1                      ; Limpia el acumulador
000021A4  41F9 0000239B           2197              LEA     ASCBFF,A0               ; Puntero al buffer
000021AA                          2198  
000021AA                          2199  .LEC
000021AA                          2200              ; Lee un byte del archivo
000021AA  43F9 0000239A           2201              LEA     BFFLEC,A1               ; Dirección del buffer temporal
000021B0  2239 00002396           2202              MOVE.L  FILEID,D1               ; File-ID del archivo abierto
000021B6  7401                    2203              MOVE.L  #1,D2                   ; Lee 1 byte
000021B8  103C 0035               2204              MOVE.B  #53,D0                  ; Lee el archivo
000021BC  4E4F                    2205              TRAP    #15
000021BE  B07C 0001               2206              CMP.W   #1,D0                   ; Verifica si alcanzamos EOF
000021C2  6700 007C               2207              BEQ     .EOF                    ; Si D0 = 1, finaliza la lectura
000021C6                          2208  
000021C6  1011                    2209              MOVE.B  (A1),D0                 ; Mueve el byte leído a D0
000021C8                          2210  
000021C8  B03C 0023               2211              CMP.B   #'#',D0                 ; Comparar el byte leído con `#`
000021CC  6700 0072               2212              BEQ     .EOF                    ; Si es `#`, finaliza la lectura
000021D0                          2213  
000021D0  B03C 003F               2214              CMP.B   #'?',D0                 ; Compara el byte leído con `?`
000021D4  6700 0012               2215              BEQ     .MOSTRAR_PARTIDA        ; Si es `?`
000021D8                          2216  
000021D8                          2217              ; Si es un número ASCII
000021D8  B03C 0030               2218              CMP.B   #'0',D0                 ; Verifica si es un número(>= '0')
000021DC  6DCC                    2219              BLT     .LEC                    ; Si es menor
000021DE  B03C 0039               2220              CMP.B   #'9',D0                 ; Verifica si es un número(<= '9')
000021E2  6EC6                    2221              BGT     .LEC                    ; Si es mayor
000021E4  10C0                    2222              MOVE.B  D0,(A0)+                ; Acumula el carácter en el buffer
000021E6  60C2                    2223              BRA     .LEC                    ; Continua leyendo
000021E8                          2224  
000021E8                          2225  .MOSTRAR_PARTIDA
000021E8                          2226              ; Termina la cadena acumulada con un NULL
000021E8  10BC 0000               2227              MOVE.B  #0,(A0)                 ; Añade NULL al final del buffer
000021EC                          2228  
000021EC                          2229              ; Muestra "PARTIDA : "
000021EC  43F9 00002279           2230              LEA     .TXT1,A1                ; Dirección del texto base
000021F2  103C 000E               2231              MOVE.B  #14,D0                  ; Muestra texto sin CR, LF
000021F6  4E4F                    2232              TRAP    #15
000021F8                          2233  
000021F8                          2234              ; Convierte número del buffer de ASCII a decimal
000021F8  4281                    2235              CLR.L   D1                      ; Acumulador para el número
000021FA  41F9 0000239B           2236              LEA     ASCBFF,A0               ; Dirección del buffer
00002200                          2237  .CONVERTIR
00002200  1018                    2238              MOVE.B  (A0)+,D0                ; Lee el carácter del buffer
00002202  B03C 0000               2239              CMP.B   #0,D0                   ; Verifica si es NULL 
00002206  6700 000E               2240              BEQ     .MOSTRAR_NUMERO         ; Si es NULL
0000220A  0400 0030               2241              SUB.B   #48,D0                  ; Convierte de ASCII a decimal
0000220E  C2FC 000A               2242              MULU    #10,D1                  ; Multiplica el acumulador por 10
00002212  D240                    2243              ADD.W   D0,D1                   ; Suma el dígito convertido
00002214  60EA                    2244              BRA     .CONVERTIR              ; Continua con el siguiente
00002216                          2245  
00002216                          2246  .MOSTRAR_NUMERO
00002216                          2247              ; Muestra el número convertido en D1
00002216  2001                    2248              MOVE.L  D1,D0                   ; Mueve el número convertido a D0
00002218  103C 000F               2249              MOVE.B  #15,D0                  ; Muestra l número en base 10
0000221C  143C 000A               2250              MOVE.B  #10,D2                  ; Base 10
00002220  4E4F                    2251              TRAP    #15
00002222                          2252  
00002222                          2253              ; Separa las líneas
00002222  43F9 00002284           2254              LEA     .TXT2,A1
00002228  103C 000D               2255              MOVE.B  #13,D0                  ; Carriage return
0000222C  4E4F                    2256              TRAP    #15
0000222E  103C 000A               2257              MOVE.B  #10,D0                  ; Line feed
00002232  4E4F                    2258              TRAP    #15
00002234                          2259  
00002234                          2260              ; Reinicia el buffer para el siguiente
00002234  41F9 0000239B           2261              LEA     ASCBFF,A0               ; Reinicia puntero del buffer
0000223A  5243                    2262              ADDQ.W  #1,D3                   ; Incrementa número de partida
0000223C  6000 FF6C               2263              BRA     .LEC                    ; Continuar lectura
00002240                          2264  
00002240                          2265  .EOF
00002240                          2266              ; Cierra el archivo
00002240  2239 00002396           2267              MOVE.L  FILEID,D1               ; File-ID del archivo
00002246  103C 0038               2268              MOVE.B  #56,D0                  ; Tarea 56: Cerrar archivo
0000224A  4E4F                    2269              TRAP    #15
0000224C                          2270  
0000224C  4281                    2271              CLR.L   D1
0000224E  103C 0051               2272              MOVE.B  #81,D0
00002252  4E4F                    2273              TRAP    #15
00002254                          2274              
00002254  41F9 00002285           2275              LEA     .TXT3,A0
0000225A  103C 0014               2276              MOVE.B  #20,D0
0000225E  4EB8 119E               2277              JSR     UTLPRINT
00002262                          2278  
00002262                          2279  
00002262  4CDF 030F               2280              MOVEM.L (A7)+,D0-D3/A0-A1
00002266  4E75                    2281              RTS
00002268                          2282  
00002268                          2283  .ERROR
00002268  103C 0009               2284              MOVE.B  #9,D0
0000226C  4E4F                    2285              TRAP    #15
0000226E                          2286              
0000226E= 50 55 4E 54 4F 53 ...   2287  .FILE       DC.B    'PUNTOS.TXT',0          ; Nombre del archivo, null-terminated
00002279= 50 41 52 54 49 44 ...   2288  .TXT1       DC.B    'PARTIDA : ',0
00002284= 00                      2289  .TXT2       DC.B    '',0
00002285= 50 52 45 53 53 20 ...   2290  .TXT3       DC.B    'PRESS S TO RETURN',0
00002298                          2291              DS.W    0
00002298                          2292  
00002298                          2293  
00002298                          2294  
00002298                          2295  -------------------- end include --------------------
00002298                          2296              INCLUDE 'STATES.X68'
00002298                          2297  ; ----------------------------------------------------------------------------
00002298                          2298  ; GESTIÓN DEL ESTADO DEL JUEGO
00002298                          2299  ; ----------------------------------------------------------------------------
00002298                          2300  
00002298                          2301  ; ----------------------------------------------------------------------------
00002298                          2302  STAINIT
00002298                          2303  ; Inicializa el gestor de estado
00002298                          2304  ; INPUT    - NONE
00002298                          2305  ; OUTPUT   - NONE
00002298                          2306  ; MODIFIES - NONE
00002298                          2307  ; ----------------------------------------------------------------------------
00002298  33FC FFFF 00002392      2308              MOVE.W  #STANONE,(STACUR)
000022A0  4279 00002394           2309              CLR.W   (STANEXT)               ; Inicamos en estado 0
000022A6  4E75                    2310              RTS
000022A8                          2311  
000022A8                          2312  ; ----------------------------------------------------------------------------
000022A8                          2313  STAUPD
000022A8                          2314  ; Realiza la inicialización y actualización del estado si es necesario
000022A8                          2315  ; INPUT    - NONE
000022A8                          2316  ; OUTPUT   - NONE
000022A8                          2317  ; MODIFIES - NONE
000022A8                          2318  ; ----------------------------------------------------------------------------
000022A8  48E7 8080               2319              MOVEM.L D0/A0,-(A7)
000022AC                          2320              
000022AC  4280                    2321              CLR.L   D0
000022AE  3039 00002394           2322              MOVE.W  (STANEXT),D0
000022B4  B079 00002392           2323              CMP.W   (STACUR),D0
000022BA  6700 0012               2324              BEQ     .DOUPD
000022BE  33C0 00002392           2325              MOVE.W  D0,(STACUR)
000022C4  E588                    2326              LSL.L   #2,D0
000022C6  2040                    2327              MOVE.L  D0,A0
000022C8  2068 22E6               2328              MOVE.L  .INITBL(A0),A0
000022CC  4E90                    2329              JSR     (A0)
000022CE  4280                    2330  .DOUPD      CLR.L   D0
000022D0  3039 00002392           2331              MOVE.W  (STACUR),D0
000022D6  E588                    2332              LSL.L   #2,D0
000022D8  2040                    2333              MOVE.L  D0,A0
000022DA  2068 22FA               2334              MOVE.L  .UPDTBL(A0),A0
000022DE  4E90                    2335              JSR     (A0)
000022E0                          2336              
000022E0  4CDF 0101               2337              MOVEM.L (A7)+,D0/A0
000022E4  4E75                    2338              RTS
000022E6                          2339              
000022E6= 00001DDC 00001EFA ...   2340  .INITBL     DC.L    ISCINIT,INSINIT,GAMINIT,GOVINIT,TABINIT
000022FA= 00001DE4 00001F02 ...   2341  .UPDTBL     DC.L    ISCUPD,INSUPD,GAMUPD,GOVUPD,TABUPD
0000230E                          2342  
0000230E                          2343  ; ----------------------------------------------------------------------------
0000230E                          2344  STAPLOT
0000230E                          2345  ; Realiza el dibujado del estado
0000230E                          2346  ; INPUT    - NONE
0000230E                          2347  ; OUTPUT   - NONE
0000230E                          2348  ; MODIFIES - NONE
0000230E                          2349  ; ----------------------------------------------------------------------------
0000230E  48E7 8080               2350              MOVEM.L D0/A0,-(A7)
00002312  4280                    2351              CLR.L   D0
00002314  3039 00002392           2352              MOVE.W  (STACUR),D0
0000231A  E588                    2353              LSL.L   #2,D0
0000231C  2040                    2354              MOVE.L  D0,A0
0000231E  2068 232A               2355              MOVE.L  .PLTTBL(A0),A0
00002322  4E90                    2356              JSR     (A0)
00002324  4CDF 0101               2357              MOVEM.L (A7)+,D0/A0
00002328  4E75                    2358              RTS
0000232A                          2359              
0000232A= 00001E70 00001F1C ...   2360  .PLTTBL     DC.L    ISCPLOT,INSPLOT,GAMPLOT,GOVPLOT,TABPLOT
0000233E                          2361  
0000233E                          2362  ; ----------------------------------------------------------------------------
0000233E                          2363  STAEMPTY
0000233E                          2364  ; Subrutina vacía para casos donde no hay nada que hacer
0000233E                          2365  ; INPUT    - NONE
0000233E                          2366  ; OUTPUT   - NONE
0000233E                          2367  ; MODIFIES - NONE
0000233E                          2368  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
0000233E                          2369  ; ----------------------------------------------------------------------------
0000233E  4E75                    2370              RTS
00002340                          2371  
00002340                          2372  
00002340                          2373  
00002340                          2374  
00002340                          2375  
00002340                          2376  
00002340                          2377  
00002340                          2378  
00002340                          2379  
00002340                          2380  
00002340                          2381  
00002340                          2382  
00002340                          2383  
00002340                          2384  
00002340                          2385  
00002340                          2386  -------------------- end include --------------------
00002340                          2387              
00002340                          2388              
00002340                          2389  START:
00002340                          2390                  
00002340                          2391  ; --- INIZIALIZACIÓN ---------------------------------------------------------
00002340                          2392  
00002340  007C 0700               2393              ORI.W   #$0700,SR
00002344  4EB8 1000               2394              JSR     SYSINIT
00002348  4EB8 1188               2395              JSR     UTLINIT
0000234C  4EB8 2298               2396              JSR     STAINIT
00002350                          2397  
00002350                          2398  
00002350                          2399  .LOOP
00002350                          2400  
00002350                          2401  ; --- ACTUALIZAR -------------------------------------------------------------
00002350                          2402  
00002350                          2403  ; LEER DISPOSITIVOS DE ENTRADA
00002350                          2404  
00002350  4E41                    2405              TRAP    #KBDUPTN
00002352                          2406  
00002352                          2407  ; ACTUALIZAR LÓGICA DEL JUEGO
00002352                          2408  
00002352  4EB8 22A8               2409              JSR     STAUPD
00002356                          2410              
00002356                          2411  ; --- SINCRONIZACIÓN ---------------------------------------------------------
00002356                          2412              
00002356  4A39 000026B0           2413  .WINT       TST.B   (SCRINTCT)
0000235C  67F8                    2414              BEQ     .WINT   
0000235E  4239 000026B0           2415              CLR.B   (SCRINTCT)         
00002364                          2416  
00002364                          2417  
00002364                          2418  ; --- DIBUJAR ----------------------------------------------------------------
00002364                          2419              
00002364  4EB8 230E               2420              JSR     STAPLOT            
00002368  4E40                    2421              TRAP    #SCRUPTN                      ; ACTUALIZAR DOBLE BUFFER
0000236A                          2422  
0000236A                          2423  
0000236A  60E4                    2424              BRA     .LOOP
0000236C                          2425  
0000236C  FFFF FFFF               2426              SIMHALT
00002370                          2427  
00002370                          2428              INCLUDE 'VARS.X68'
00002370                          2429  ; ----------------------------------------------------------------------------
00002370                          2430  ; VARIABLES DEL JUEGO
00002370                          2431  ; ----------------------------------------------------------------------------
00002370                          2432  
00002370                          2433  ; --- VARIABLES DE LA MANZANA ------------------------------------------------
00002370                          2434  
00002370                          2435  MNZPOSX     DS.W    1                       ; Coordenada x de la manzana
00002372                          2436  MNZPOSY     DS.W    1                       ; Coordenada y de la manzana
00002374                          2437  
00002374                          2438  ; --- VARIABLES DE LA SERPIENTE ----------------------------------------------
00002374                          2439  
00002374                          2440  CBZPOSX     DS.W    1                       ; Coordenada x cabeza
00002376                          2441  CBZPOSY     DS.W    1                       ; Coordenada y cabeza
00002378                          2442  CBZVELX     DS.W    1                       ; Velocidad x cabeza
0000237A                          2443  CBZVELY     DS.W    1                       ; Velocidad y cabeza
0000237C                          2444  COLPOSX     DS.W    1                       ; Coordenada x cola
0000237E                          2445  COLPOSY     DS.W    1                       ; Coordenada y cola
00002380                          2446  SGMPOSX     DS.W    1                       ; Coordenada x segmento
00002382                          2447  SGMPOSY     DS.W    1                       ; Coordenada y segmento
00002384                          2448  SGMPOSX2    DS.W    1                       ; Coordenada x segmento 2
00002386                          2449  SGMPOSY2    DS.W    1                       ; Coordenada y segmento 2
00002388                          2450  
00002388                          2451  ; --- VARIABLES DEL MARCADOR -------------------------------------------------
00002388                          2452  
00002388                          2453  JGOPNTS     DS.W    1                       ; Puntuación del juego
0000238A                          2454  JGOTIM      DS.W    1                       ; Temporizador del juego
0000238C                          2455  
0000238C                          2456  ; --- VARIABLES DEL ESTADO DE LA INTRO ---------------------------------------
0000238C                          2457  
0000238C                          2458  ISCTIMER    DS.W    1                       ; Temporizador intro
0000238E                          2459  
0000238E                          2460  ; --- VARIABLES DEL ESTADO DE INSTRUCCIONES ----------------------------------
0000238E                          2461  
0000238E                          2462  INSTIMER    DS.W    1                       ; Temporizador instrucciones
00002390                          2463  
00002390                          2464  ; -- VARIABLES DEL ESTADO GAME OVER ------------------------------------------
00002390                          2465  
00002390                          2466  GOVTIMER    DS.W    1                       ; Temporizador GAME OVER
00002392                          2467  
00002392                          2468  ; --- VARIABLES RELACIONADAS CON LOS ESTADOS ---------------------------------
00002392                          2469  
00002392                          2470  STACUR      DS.W    1                       ; Estado actual
00002394                          2471  STANEXT     DS.W    1                       ; Estado siguiente
00002396                          2472  
00002396                          2473  ; --- VARIABLES PARA LEER/ESCRIBIR ARCHIVOS ----------------------------------
00002396                          2474  
00002396                          2475  FILEID      DS.L    1                       ; ID del archivo
0000239A                          2476  BFFLEC      DS.B    1                       ; Buffer para leer el archivo
0000239B                          2477  ASCBFF      DS.B    10                      ; Buffer para convertir a ASCII
000023A6                          2478              DS.W    0
000023A6                          2479  
000023A6                          2480  
000023A6                          2481  
000023A6                          2482  
000023A6                          2483  
000023A6                          2484  
000023A6                          2485  
000023A6                          2486  
000023A6                          2487  
000023A6                          2488  
000023A6                          2489  
000023A6                          2490  
000023A6                          2491  
000023A6                          2492  
000023A6                          2493  
000023A6                          2494  
000023A6                          2495  
000023A6                          2496  
000023A6                          2497  
000023A6                          2498  
000023A6                          2499  
000023A6                          2500  
000023A6                          2501  -------------------- end include --------------------
000023A6                          2502              INCLUDE 'LIB/UTLVARS.X68'
000023A6                          2503  ; =============================================================================
000023A6                          2504  ; UTILITY VARIABLES
000023A6                          2505  ; =============================================================================
000023A6                          2506  
000023A6                          2507  UTLRNDIX    DS.B    1                       ; NEXT INDEX TO RANDOM NUMBER
000023A8                          2508              DS.W    0
000023A8                          2509  -------------------- end include --------------------
000023A8                          2510              INCLUDE 'SYSVARS.X68'
000023A8                          2511  ; ----------------------------------------------------------------------------
000023A8                          2512  ; VARIABLES DEL SISTEMA
000023A8                          2513  ; ----------------------------------------------------------------------------
000023A8                          2514  
000023A8                          2515  ; --- VARIABLES DE LA MATRIZ -------------------------------------------------
000023A8                          2516  
000023A8                          2517  ESTDCLDS    DS.B    TCELDAS   ; 0=vacío,1=cola,2=Segmento,3=cabeza,4=manzana    
000026A8                          2518  ESTDCBZ     DS.B    1         ; 0=derecha,1=arriba,2=izquierda,3=abajo
000026A9                          2519  
000026A9                          2520  ; --- VARIABLES DE TECLADO ---------------------------------------------------
000026A9                          2521  
000026A9                          2522  KBDVAL      DS.B    1
000026AA                          2523  KBDEDGE     DS.B    1         ; KEY EDGE
000026AC                          2524  LASTKEY     DS.L    1                       
000026B0                          2525  
000026B0                          2526  ;--- VARIABLES RELACIONADAS CON LA TEMPORIZACIÓN DE INTERRUPCIONES -----------
000026B0                          2527              
000026B0                          2528  SCRINTCT    DS.B    1         ; Contador de interrupción
000026B1                          2529  SCRCYCCT    DS.B    1         ; Contador de ciclo
000026B2                          2530              DS.W    0
000026B2                          2531  
000026B2                          2532  
000026B2                          2533  
000026B2                          2534  
000026B2                          2535  
000026B2                          2536  
000026B2                          2537  
000026B2                          2538  
000026B2                          2539  
000026B2                          2540  
000026B2                          2541  
000026B2                          2542  
000026B2                          2543  
000026B2                          2544  
000026B2                          2545  
000026B2                          2546  
000026B2                          2547  
000026B2                          2548  -------------------- end include --------------------
000026B2                          2549      
000026B2                          2550      
000026B2                          2551              END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
APPLEINIT           179A
APPLEPLOT           180A
APPLEUPD            17CC
ARR                 1162
ASCBFF              239B
BFFLEC              239A
CBZFCOL             AA00
CBZHEIGH            14
CBZOCPD             1A5E
CBZPCOL             FF00
CBZPOSX             2374
CBZPOSY             2376
CBZVEL              14
CBZVELX             2378
CBZVELY             237A
CBZWIDTH            14
CHCKUPDT            17E4
CHECK               17A6
CHECKCLD            1B08
CHKBORDE            1380
CHKCOL              13AC
CINDMTRZ            1A24
CLDFREE             1B20
CLNCLDS             19A0
CNVICOOR            1ACC
COLFCOL             AA00
COLFND              90EE90
COLHEIGH            A
COLOCPD             1AA0
COLPCOL             FF00
COLPOSX             237C
COLPOSY             237E
COLWIDTH            A
CONTINU             1182
CONVERTIR_NUMERO    1534
CONVERTIR_NUMERO:CONVERTDELO  1540
DER                 1156
DIVX                1A2C
DIVY                1A40
DONEPLOT            1DB2
DWN                 117A
END                 217A
ENDDIVX             1A3C
ENDDIVY             1A50
ENDMULTX            1AF0
ENDMULTY            1B02
ERROR               1560
ESCRIBIR_CARACTER   1508
ESTDCBZ             26A8
ESTDCLDS            23A8
FILE                1566
FILEID              2396
FIN                 152E
FINESC              1522
FINUPD              1754
FONPLOT             1B26
GAMEOVER            13FA
GAMEOVER:ABRIR_ARCHIVO  1434
GAMEOVER:BUSCAR_FINAL  1456
GAMEOVER:CREAR_ARCHIVO  1494
GAMEOVER:ESCRIBIR   14AC
GAMEOVER:ESCRIBIR_BUCLE  14C0
GAMEOVER:ESCRIBIR_FIN_BLOQUE  14EC
GAMEOVER:POSICIONAR  1482
GAMINIT             194E
GAMPLOT             1978
GAMUPD              1968
GENPOSMNZ           1888
GOVINIT             20BE
GOVPLOT             20FE
GOVPLOT:DONE        2126
GOVPLOT:TXT1        212C
GOVPLOT:TXT2        2136
GOVTIMER            2390
GOVUPD              20C6
GOVUPD:CONT         20E0
GOVUPD:DONE         20F8
HEADINIT            12EE
HEADPLOT            1576
HEADUPD             130E
INSINIT             1EFA
INSMAXTM            1F4
INSPLOT             1F1C
INSPLOT:DONE        1F38
INSPLOT:LOOP        1F2A
INSPLOT:TXT1        1F3E
INSPLOT:TXT2        1F68
INSPLOT:TXT3        1FB0
INSPLOT:TXT4        1FE1
INSPLOT:TXT5        200D
INSPLOT:TXT6        2028
INSPLOT:TXT7        206E
INSPLOT:TXTLST      209E
INSTIMER            238E
INSUPD              1F02
INSUPD:DONE         1F1A
ISCINIT             1DDC
ISCMAXTM            1F4
ISCPLOT             1E70
ISCPLOT:DONE        1EAE
ISCPLOT:TXT1        1EB4
ISCPLOT:TXT2        1EC6
ISCPLOT:TXT3        1EDA
ISCTIMER            238C
ISCUPD              1DE4
ISCUPD:CONT         1E38
ISCUPD:DONE         1E6A
ISCUPD:END          1E50
ISCUPD:MAINLOOP     1DF2
IZQ                 116E
JGOPNTS             2388
JGOTIM              238A
KBDDOWN             28
KBDEDGE             26AA
KBDINIT             1106
KBDLEFT             25
KBDRIGHT            27
KBDUP               26
KBDUPD              1114
KBDUPTN             1
KBDVAL              26A9
LASTKEY             26AC
MARKMNZ             17BE
MCLDVCIA            1A74
MNZFCOL             FF
MNZHEIGH            14
MNZOCPD             1AB6
MNZPCOL             AAFF
MNZPOSX             2370
MNZPOSY             2372
MNZWIDTH            14
MTZINIT             1992
MTZPLOT             1D6E
MTZUPD              1B64
MTZUPD:ABRIR_ARCHIVO  1C2C
MTZUPD:BUSCAR_FINAL  1C4E
MTZUPD:CLNCLDS      1B72
MTZUPD:CONVERTDELO  1D38
MTZUPD:CONVERTIR_NUMERO  1D2C
MTZUPD:CREAR_ARCHIVO  1C8C
MTZUPD:ERROR        1D58
MTZUPD:ESCRIBIR     1CA4
MTZUPD:ESCRIBIR_BUCLE  1CB8
MTZUPD:ESCRIBIR_CARACTER  1D00
MTZUPD:ESCRIBIR_FIN_BLOQUE  1CE4
MTZUPD:FILE         1D5E
MTZUPD:FIN          1D26
MTZUPD:FINESC       1D1A
MTZUPD:GAMEOVER     1BF2
MTZUPD:POSICIONAR   1C7A
MTZUPD:TXT1         1D69
MTZUPD:TXT2         1D6B
MULTLOOPX           1AE2
MULTLOOPY           1AF4
NEWMNZ              17FC
NOCOL               13DE
NUMCLMNS            20
NUMFILAS            18
OJOFCOL             FFFFFF
OJOHEIGH            A
OJOPCOL             0
OJOWIDTH            A
PANHEIGH            1E0
PANWIDTH            280
PLOTAPPLE           1DD6
PLOTCBZ             1DBE
PLOTCLDS            1D88
PLOTCOL             1DCA
PLOTSEG             1DD0
PLOTVAC             1DC4
PNTSFCOL            0
PNTSTEXT            65
SCOINIT             18BA
SCOPLOT             18EA
SCOPLOT:TXT1        193A
SCOPLOT:TXT2        1944
SCOUPD              18D0
SCRCYCCT            26B1
SCRFPS              46
SCRINIT             109A
SCRINTCT            26B0
SCRINTN             1
SCRPLOT             10EC
SCRTIM              10DE
SCRUPTN             0
SEGINIT             15FA
SEGPLOT             16BA
SEGUPD              1628
SGMFCOL             AA00
SGMHEIGH            14
SGMOCPD             1A8A
SGMPCOL             FF00
SGMPOSX             2380
SGMPOSX2            2384
SGMPOSY             2382
SGMPOSY2            2386
SGMWIDTH            14
SIGABA              1378
SIGARR              1360
SIGDER              1354
SIGIZQ              136C
SIZECLDA            14
SNDEAT              0
SNDGMOV             1
SNDINIT             103A
SNDINIT:DONE        1058
SNDINIT:LOOP        1046
SNDINIT:SNDEAT      105E
SNDINIT:SNDGMOV     106A
SNDINIT:SNDLIST     107C
SNDPLAY             1088
SNDPLTN             2
STACUR              2392
STAEMPTY            233E
STAINIT             2298
STANEXT             2394
STANONE             FFFFFFFF
STAPLOT             230E
STAPLOT:PLTTBL      232A
START               2340
START:LOOP          2350
START:WINT          2356
STAUPD              22A8
STAUPD:DOUPD        22CE
STAUPD:INITBL       22E6
STAUPD:UPDTBL       22FA
SYSINIT             1000
TABINIT             2162
TABPLOT             217C
TABPLOT:CONVERTIR   2200
TABPLOT:EOF         2240
TABPLOT:ERROR       2268
TABPLOT:FILE        226E
TABPLOT:LEC         21AA
TABPLOT:MOSTRAR_NUMERO  2216
TABPLOT:MOSTRAR_PARTIDA  21E8
TABPLOT:TXT1        2279
TABPLOT:TXT2        2284
TABPLOT:TXT3        2285
TABUPD              2164
TAILINIT            16FA
TAILPLOT            175A
TAILUPD             170C
TCELDAS             300
TXT1                1571
TXT2                1573
UTLCHRWD            8
UTLINIT             1188
UTLPRINT            119E
UTLPRINT:ENDLOOP    11B0
UTLPRINT:LOOP       11A6
UTLRAND             11D0
UTLRAND:RANDVEC     11EE
UTLRNDIX            23A6
